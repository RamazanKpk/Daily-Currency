<?xml version="1.0" encoding="utf-8"?>
<doc>
    <assembly>
        <name>Azure.ResourceManager.Authorization</name>
    </assembly>
    <members>
        <member name="T:Azure.ResourceManager.Authorization.Models.ArmAuthorizationModelFactory">
            <summary> Model factory for models. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.Models.ArmAuthorizationModelFactory.AuthorizationClassicAdministrator(Azure.Core.ResourceIdentifier,System.String,Azure.Core.ResourceType,Azure.ResourceManager.Models.SystemData,System.String,System.String)">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Authorization.Models.AuthorizationClassicAdministrator" />. </summary>
            <param name="id"> The id. </param>
            <param name="name"> The name. </param>
            <param name="resourceType"> The resourceType. </param>
            <param name="systemData"> The systemData. </param>
            <param name="emailAddress"> The email address of the administrator. </param>
            <param name="role"> The role of the administrator. </param>
            <returns> A new <see cref="T:Azure.ResourceManager.Authorization.Models.AuthorizationClassicAdministrator" /> instance for mocking. </returns>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.Models.ArmAuthorizationModelFactory.DenyAssignmentData(Azure.Core.ResourceIdentifier,System.String,Azure.Core.ResourceType,Azure.ResourceManager.Models.SystemData,System.String,System.String,System.Collections.Generic.IEnumerable{Azure.ResourceManager.Authorization.Models.DenyAssignmentPermission},System.String,System.Nullable{System.Boolean},System.Collections.Generic.IEnumerable{Azure.ResourceManager.Authorization.Models.RoleManagementPrincipal},System.Collections.Generic.IEnumerable{Azure.ResourceManager.Authorization.Models.RoleManagementPrincipal},System.Nullable{System.Boolean})">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Authorization.DenyAssignmentData" />. </summary>
            <param name="id"> The id. </param>
            <param name="name"> The name. </param>
            <param name="resourceType"> The resourceType. </param>
            <param name="systemData"> The systemData. </param>
            <param name="denyAssignmentName"> The display name of the deny assignment. </param>
            <param name="description"> The description of the deny assignment. </param>
            <param name="permissions"> An array of permissions that are denied by the deny assignment. </param>
            <param name="scope"> The deny assignment scope. </param>
            <param name="isAppliedToChildScopes"> Determines if the deny assignment applies to child scopes. Default value is false. </param>
            <param name="principals"> Array of principals to which the deny assignment applies. </param>
            <param name="excludePrincipals"> Array of principals to which the deny assignment does not apply. </param>
            <param name="isSystemProtected"> Specifies whether this deny assignment was created by Azure and cannot be edited or deleted. </param>
            <returns> A new <see cref="T:Azure.ResourceManager.Authorization.DenyAssignmentData" /> instance for mocking. </returns>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.Models.ArmAuthorizationModelFactory.DenyAssignmentPermission(System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IEnumerable{System.String},System.String,System.String)">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Authorization.Models.DenyAssignmentPermission" />. </summary>
            <param name="actions"> Actions to which the deny assignment does not grant access. </param>
            <param name="notActions"> Actions to exclude from that the deny assignment does not grant access. </param>
            <param name="dataActions"> Data actions to which the deny assignment does not grant access. </param>
            <param name="notDataActions"> Data actions to exclude from that the deny assignment does not grant access. </param>
            <param name="condition"> The conditions on the Deny assignment permission. This limits the resources it applies to. </param>
            <param name="conditionVersion"> Version of the condition. </param>
            <returns> A new <see cref="T:Azure.ResourceManager.Authorization.Models.DenyAssignmentPermission" /> instance for mocking. </returns>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.Models.ArmAuthorizationModelFactory.RoleManagementPrincipal(System.String,System.String,System.Nullable{Azure.ResourceManager.Authorization.Models.RoleManagementPrincipalType},System.String)">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Authorization.Models.RoleManagementPrincipal" />. </summary>
            <param name="id"> The id of the principal made changes. </param>
            <param name="displayName"> The name of the principal made changes. </param>
            <param name="principalType"> Type of the principal. </param>
            <param name="email"> Email of principal. </param>
            <returns> A new <see cref="T:Azure.ResourceManager.Authorization.Models.RoleManagementPrincipal" /> instance for mocking. </returns>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.Models.ArmAuthorizationModelFactory.AuthorizationProviderOperationsMetadataData(Azure.Core.ResourceIdentifier,System.String,Azure.Core.ResourceType,Azure.ResourceManager.Models.SystemData,System.String,System.Collections.Generic.IEnumerable{Azure.ResourceManager.Authorization.Models.AuthorizationProviderResourceType},System.Collections.Generic.IEnumerable{Azure.ResourceManager.Authorization.Models.AuthorizationProviderOperationInfo})">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Authorization.AuthorizationProviderOperationsMetadataData" />. </summary>
            <param name="id"> The id. </param>
            <param name="name"> The name. </param>
            <param name="resourceType"> The resourceType. </param>
            <param name="systemData"> The systemData. </param>
            <param name="displayName"> The provider display name. </param>
            <param name="resourceTypes"> The provider resource types. </param>
            <param name="operations"> The provider operations. </param>
            <returns> A new <see cref="T:Azure.ResourceManager.Authorization.AuthorizationProviderOperationsMetadataData" /> instance for mocking. </returns>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.Models.ArmAuthorizationModelFactory.AuthorizationProviderResourceType(System.String,System.String,System.Collections.Generic.IEnumerable{Azure.ResourceManager.Authorization.Models.AuthorizationProviderOperationInfo})">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Authorization.Models.AuthorizationProviderResourceType" />. </summary>
            <param name="name"> The resource type name. </param>
            <param name="displayName"> The resource type display name. </param>
            <param name="operations"> The resource type operations. </param>
            <returns> A new <see cref="T:Azure.ResourceManager.Authorization.Models.AuthorizationProviderResourceType" /> instance for mocking. </returns>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.Models.ArmAuthorizationModelFactory.AuthorizationProviderOperationInfo(System.String,System.String,System.String,System.String,System.BinaryData,System.Nullable{System.Boolean})">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Authorization.Models.AuthorizationProviderOperationInfo" />. </summary>
            <param name="name"> The operation name. </param>
            <param name="displayName"> The operation display name. </param>
            <param name="description"> The operation description. </param>
            <param name="origin"> The operation origin. </param>
            <param name="properties"> The operation properties. </param>
            <param name="isDataAction"> The dataAction flag to specify the operation type. </param>
            <returns> A new <see cref="T:Azure.ResourceManager.Authorization.Models.AuthorizationProviderOperationInfo" /> instance for mocking. </returns>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.Models.ArmAuthorizationModelFactory.RoleAssignmentData(Azure.Core.ResourceIdentifier,System.String,Azure.Core.ResourceType,Azure.ResourceManager.Models.SystemData,System.String,Azure.Core.ResourceIdentifier,System.Nullable{System.Guid},System.Nullable{Azure.ResourceManager.Authorization.Models.RoleManagementPrincipalType},System.String,System.String,System.String,System.Nullable{System.DateTimeOffset},System.Nullable{System.DateTimeOffset},System.String,System.String,Azure.Core.ResourceIdentifier)">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Authorization.RoleAssignmentData" />. </summary>
            <param name="id"> The id. </param>
            <param name="name"> The name. </param>
            <param name="resourceType"> The resourceType. </param>
            <param name="systemData"> The systemData. </param>
            <param name="scope"> The role assignment scope. </param>
            <param name="roleDefinitionId"> The role definition ID. </param>
            <param name="principalId"> The principal ID. </param>
            <param name="principalType"> The principal type of the assigned principal ID. </param>
            <param name="description"> Description of role assignment. </param>
            <param name="condition"> The conditions on the role assignment. This limits the resources it can be assigned to. e.g.: @Resource[Microsoft.Storage/storageAccounts/blobServices/containers:ContainerName] StringEqualsIgnoreCase 'foo_storage_container'. </param>
            <param name="conditionVersion"> Version of the condition. Currently the only accepted value is '2.0'. </param>
            <param name="createdOn"> Time it was created. </param>
            <param name="updatedOn"> Time it was updated. </param>
            <param name="createdBy"> Id of the user who created the assignment. </param>
            <param name="updatedBy"> Id of the user who updated the assignment. </param>
            <param name="delegatedManagedIdentityResourceId"> Id of the delegated managed identity resource. </param>
            <returns> A new <see cref="T:Azure.ResourceManager.Authorization.RoleAssignmentData" /> instance for mocking. </returns>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.Models.ArmAuthorizationModelFactory.RoleAssignmentCreateOrUpdateContent(System.String,Azure.Core.ResourceIdentifier,System.Guid,System.Nullable{Azure.ResourceManager.Authorization.Models.RoleManagementPrincipalType},System.String,System.String,System.String,System.Nullable{System.DateTimeOffset},System.Nullable{System.DateTimeOffset},System.String,System.String,Azure.Core.ResourceIdentifier)">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Authorization.Models.RoleAssignmentCreateOrUpdateContent" />. </summary>
            <param name="scope"> The role assignment scope. </param>
            <param name="roleDefinitionId"> The role definition ID. </param>
            <param name="principalId"> The principal ID. </param>
            <param name="principalType"> The principal type of the assigned principal ID. </param>
            <param name="description"> Description of role assignment. </param>
            <param name="condition"> The conditions on the role assignment. This limits the resources it can be assigned to. e.g.: @Resource[Microsoft.Storage/storageAccounts/blobServices/containers:ContainerName] StringEqualsIgnoreCase 'foo_storage_container'. </param>
            <param name="conditionVersion"> Version of the condition. Currently the only accepted value is '2.0'. </param>
            <param name="createdOn"> Time it was created. </param>
            <param name="updatedOn"> Time it was updated. </param>
            <param name="createdBy"> Id of the user who created the assignment. </param>
            <param name="updatedBy"> Id of the user who updated the assignment. </param>
            <param name="delegatedManagedIdentityResourceId"> Id of the delegated managed identity resource. </param>
            <returns> A new <see cref="T:Azure.ResourceManager.Authorization.Models.RoleAssignmentCreateOrUpdateContent" /> instance for mocking. </returns>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.Models.ArmAuthorizationModelFactory.AuthorizationRoleDefinitionData(Azure.Core.ResourceIdentifier,System.String,Azure.Core.ResourceType,Azure.ResourceManager.Models.SystemData,System.String,System.String,System.Nullable{Azure.ResourceManager.Authorization.Models.AuthorizationRoleType},System.Collections.Generic.IEnumerable{Azure.ResourceManager.Authorization.Models.RoleDefinitionPermission},System.Collections.Generic.IEnumerable{System.String})">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Authorization.AuthorizationRoleDefinitionData" />. </summary>
            <param name="id"> The id. </param>
            <param name="name"> The name. </param>
            <param name="resourceType"> The resourceType. </param>
            <param name="systemData"> The systemData. </param>
            <param name="roleName"> The role name. </param>
            <param name="description"> The role definition description. </param>
            <param name="roleType"> The role type. </param>
            <param name="permissions"> Role definition permissions. </param>
            <param name="assignableScopes"> Role definition assignable scopes. </param>
            <returns> A new <see cref="T:Azure.ResourceManager.Authorization.AuthorizationRoleDefinitionData" /> instance for mocking. </returns>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.Models.ArmAuthorizationModelFactory.EligibleChildResource(System.String,System.String,System.String)">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Authorization.Models.EligibleChildResource" />. </summary>
            <param name="id"> The resource scope Id. </param>
            <param name="name"> The resource name. </param>
            <param name="resourceType"> The resource type. </param>
            <returns> A new <see cref="T:Azure.ResourceManager.Authorization.Models.EligibleChildResource" /> instance for mocking. </returns>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.Models.ArmAuthorizationModelFactory.RoleAssignmentScheduleData(Azure.Core.ResourceIdentifier,System.String,Azure.Core.ResourceType,Azure.ResourceManager.Models.SystemData,System.String,Azure.Core.ResourceIdentifier,System.Nullable{System.Guid},System.Nullable{Azure.ResourceManager.Authorization.Models.RoleManagementPrincipalType},Azure.Core.ResourceIdentifier,Azure.Core.ResourceIdentifier,System.Nullable{Azure.ResourceManager.Authorization.Models.RoleAssignmentScheduleAssignmentType},System.Nullable{Azure.ResourceManager.Authorization.Models.RoleManagementScheduleMemberType},System.Nullable{Azure.ResourceManager.Authorization.Models.RoleManagementScheduleStatus},System.Nullable{System.DateTimeOffset},System.Nullable{System.DateTimeOffset},System.String,System.String,System.Nullable{System.DateTimeOffset},System.Nullable{System.DateTimeOffset},Azure.ResourceManager.Authorization.Models.RoleManagementExpandedProperties)">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Authorization.RoleAssignmentScheduleData" />. </summary>
            <param name="id"> The id. </param>
            <param name="name"> The name. </param>
            <param name="resourceType"> The resourceType. </param>
            <param name="systemData"> The systemData. </param>
            <param name="scope"> The role assignment schedule scope. </param>
            <param name="roleDefinitionId"> The role definition ID. </param>
            <param name="principalId"> The principal ID. </param>
            <param name="principalType"> The principal type of the assigned principal ID. </param>
            <param name="roleAssignmentScheduleRequestId"> The id of roleAssignmentScheduleRequest used to create this roleAssignmentSchedule. </param>
            <param name="linkedRoleEligibilityScheduleId"> The id of roleEligibilitySchedule used to activated this roleAssignmentSchedule. </param>
            <param name="assignmentType"> Assignment type of the role assignment schedule. </param>
            <param name="memberType"> Membership type of the role assignment schedule. </param>
            <param name="status"> The status of the role assignment schedule. </param>
            <param name="startOn"> Start DateTime when role assignment schedule. </param>
            <param name="endOn"> End DateTime when role assignment schedule. </param>
            <param name="condition"> The conditions on the role assignment. This limits the resources it can be assigned to. e.g.: @Resource[Microsoft.Storage/storageAccounts/blobServices/containers:ContainerName] StringEqualsIgnoreCase 'foo_storage_container'. </param>
            <param name="conditionVersion"> Version of the condition. Currently accepted value is '2.0'. </param>
            <param name="createdOn"> DateTime when role assignment schedule was created. </param>
            <param name="updatedOn"> DateTime when role assignment schedule was modified. </param>
            <param name="expandedProperties"> Additional properties of principal, scope and role definition. </param>
            <returns> A new <see cref="T:Azure.ResourceManager.Authorization.RoleAssignmentScheduleData" /> instance for mocking. </returns>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.Models.ArmAuthorizationModelFactory.RoleManagementExpandedProperties(System.Nullable{System.Guid},System.String,System.String,System.Nullable{Azure.ResourceManager.Authorization.Models.RoleManagementPrincipalType},Azure.Core.ResourceIdentifier,System.String,System.Nullable{Azure.ResourceManager.Authorization.Models.AuthorizationRoleType},Azure.Core.ResourceIdentifier,System.String,System.Nullable{Azure.ResourceManager.Authorization.Models.RoleManagementScopeType})">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Authorization.Models.RoleManagementExpandedProperties" />. </summary>
            <param name="principalId"> Id of the principal. </param>
            <param name="principalDisplayName"> Display name of the principal. </param>
            <param name="email"> Email id of the principal. </param>
            <param name="principalType"> Type of the principal. </param>
            <param name="roleDefinitionId"> Id of the role definition. </param>
            <param name="roleDefinitionDisplayName"> Display name of the role definition. </param>
            <param name="roleType"> The role type. </param>
            <param name="scopeId"> Scope id of the resource. </param>
            <param name="scopeDisplayName"> Display name of the resource. </param>
            <param name="scopeType"> Type of the scope. </param>
            <returns> A new <see cref="T:Azure.ResourceManager.Authorization.Models.RoleManagementExpandedProperties" /> instance for mocking. </returns>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.Models.ArmAuthorizationModelFactory.RoleAssignmentScheduleInstanceData(Azure.Core.ResourceIdentifier,System.String,Azure.Core.ResourceType,Azure.ResourceManager.Models.SystemData,System.String,Azure.Core.ResourceIdentifier,System.Nullable{System.Guid},System.Nullable{Azure.ResourceManager.Authorization.Models.RoleManagementPrincipalType},Azure.Core.ResourceIdentifier,Azure.Core.ResourceIdentifier,System.Nullable{Azure.ResourceManager.Authorization.Models.RoleManagementScheduleStatus},System.Nullable{System.DateTimeOffset},System.Nullable{System.DateTimeOffset},Azure.Core.ResourceIdentifier,Azure.Core.ResourceIdentifier,System.Nullable{Azure.ResourceManager.Authorization.Models.RoleAssignmentScheduleAssignmentType},System.Nullable{Azure.ResourceManager.Authorization.Models.RoleManagementScheduleMemberType},System.String,System.String,System.Nullable{System.DateTimeOffset},Azure.ResourceManager.Authorization.Models.RoleManagementExpandedProperties)">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Authorization.RoleAssignmentScheduleInstanceData" />. </summary>
            <param name="id"> The id. </param>
            <param name="name"> The name. </param>
            <param name="resourceType"> The resourceType. </param>
            <param name="systemData"> The systemData. </param>
            <param name="scope"> The role assignment schedule scope. </param>
            <param name="roleDefinitionId"> The role definition ID. </param>
            <param name="principalId"> The principal ID. </param>
            <param name="principalType"> The principal type of the assigned principal ID. </param>
            <param name="roleAssignmentScheduleId"> Id of the master role assignment schedule. </param>
            <param name="originRoleAssignmentId"> Role Assignment Id in external system. </param>
            <param name="status"> The status of the role assignment schedule instance. </param>
            <param name="startOn"> The startDateTime of the role assignment schedule instance. </param>
            <param name="endOn"> The endDateTime of the role assignment schedule instance. </param>
            <param name="linkedRoleEligibilityScheduleId"> roleEligibilityScheduleId used to activate. </param>
            <param name="linkedRoleEligibilityScheduleInstanceId"> roleEligibilityScheduleInstanceId linked to this roleAssignmentScheduleInstance. </param>
            <param name="assignmentType"> Assignment type of the role assignment schedule. </param>
            <param name="memberType"> Membership type of the role assignment schedule. </param>
            <param name="condition"> The conditions on the role assignment. This limits the resources it can be assigned to. e.g.: @Resource[Microsoft.Storage/storageAccounts/blobServices/containers:ContainerName] StringEqualsIgnoreCase 'foo_storage_container'. </param>
            <param name="conditionVersion"> Version of the condition. Currently accepted value is '2.0'. </param>
            <param name="createdOn"> DateTime when role assignment schedule was created. </param>
            <param name="expandedProperties"> Additional properties of principal, scope and role definition. </param>
            <returns> A new <see cref="T:Azure.ResourceManager.Authorization.RoleAssignmentScheduleInstanceData" /> instance for mocking. </returns>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.Models.ArmAuthorizationModelFactory.RoleAssignmentScheduleRequestData(Azure.Core.ResourceIdentifier,System.String,Azure.Core.ResourceType,Azure.ResourceManager.Models.SystemData,System.String,Azure.Core.ResourceIdentifier,System.Nullable{System.Guid},System.Nullable{Azure.ResourceManager.Authorization.Models.RoleManagementPrincipalType},System.Nullable{Azure.ResourceManager.Authorization.Models.RoleManagementScheduleRequestType},System.Nullable{Azure.ResourceManager.Authorization.Models.RoleManagementScheduleStatus},System.String,Azure.Core.ResourceIdentifier,Azure.Core.ResourceIdentifier,Azure.Core.ResourceIdentifier,System.String,Azure.ResourceManager.Authorization.Models.RoleAssignmentScheduleTicketInfo,System.String,System.String,System.Nullable{System.DateTimeOffset},System.Nullable{System.Guid},Azure.ResourceManager.Authorization.Models.RoleManagementExpandedProperties,System.Nullable{System.DateTimeOffset},System.Nullable{Azure.ResourceManager.Authorization.Models.RoleManagementScheduleExpirationType},System.Nullable{System.DateTimeOffset},System.Nullable{System.TimeSpan})">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Authorization.RoleAssignmentScheduleRequestData" />. </summary>
            <param name="id"> The id. </param>
            <param name="name"> The name. </param>
            <param name="resourceType"> The resourceType. </param>
            <param name="systemData"> The systemData. </param>
            <param name="scope"> The role assignment schedule request scope. </param>
            <param name="roleDefinitionId"> The role definition ID. </param>
            <param name="principalId"> The principal ID. </param>
            <param name="principalType"> The principal type of the assigned principal ID. </param>
            <param name="requestType"> The type of the role assignment schedule request. Eg: SelfActivate, AdminAssign etc. </param>
            <param name="status"> The status of the role assignment schedule request. </param>
            <param name="approvalId"> The approvalId of the role assignment schedule request. </param>
            <param name="targetRoleAssignmentScheduleId"> The resultant role assignment schedule id or the role assignment schedule id being updated. </param>
            <param name="targetRoleAssignmentScheduleInstanceId"> The role assignment schedule instance id being updated. </param>
            <param name="linkedRoleEligibilityScheduleId"> The linked role eligibility schedule id - to activate an eligibility. </param>
            <param name="justification"> Justification for the role assignment. </param>
            <param name="ticketInfo"> Ticket Info of the role assignment. </param>
            <param name="condition"> The conditions on the role assignment. This limits the resources it can be assigned to. e.g.: @Resource[Microsoft.Storage/storageAccounts/blobServices/containers:ContainerName] StringEqualsIgnoreCase 'foo_storage_container'. </param>
            <param name="conditionVersion"> Version of the condition. Currently accepted value is '2.0'. </param>
            <param name="createdOn"> DateTime when role assignment schedule request was created. </param>
            <param name="requestorId"> Id of the user who created this request. </param>
            <param name="expandedProperties"> Additional properties of principal, scope and role definition. </param>
            <param name="startOn"> Start DateTime of the role assignment schedule. </param>
            <param name="expirationType"> Type of the role assignment schedule expiration. </param>
            <param name="endOn"> End DateTime of the role assignment schedule. </param>
            <param name="duration"> Duration of the role assignment schedule in TimeSpan. </param>
            <returns> A new <see cref="T:Azure.ResourceManager.Authorization.RoleAssignmentScheduleRequestData" /> instance for mocking. </returns>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.Models.ArmAuthorizationModelFactory.RoleEligibilityScheduleData(Azure.Core.ResourceIdentifier,System.String,Azure.Core.ResourceType,Azure.ResourceManager.Models.SystemData,System.String,Azure.Core.ResourceIdentifier,System.Nullable{System.Guid},System.Nullable{Azure.ResourceManager.Authorization.Models.RoleManagementPrincipalType},Azure.Core.ResourceIdentifier,System.Nullable{Azure.ResourceManager.Authorization.Models.RoleManagementScheduleMemberType},System.Nullable{Azure.ResourceManager.Authorization.Models.RoleManagementScheduleStatus},System.Nullable{System.DateTimeOffset},System.Nullable{System.DateTimeOffset},System.String,System.String,System.Nullable{System.DateTimeOffset},System.Nullable{System.DateTimeOffset},Azure.ResourceManager.Authorization.Models.RoleManagementExpandedProperties)">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Authorization.RoleEligibilityScheduleData" />. </summary>
            <param name="id"> The id. </param>
            <param name="name"> The name. </param>
            <param name="resourceType"> The resourceType. </param>
            <param name="systemData"> The systemData. </param>
            <param name="scope"> The role eligibility schedule scope. </param>
            <param name="roleDefinitionId"> The role definition ID. </param>
            <param name="principalId"> The principal ID. </param>
            <param name="principalType"> The principal type of the assigned principal ID. </param>
            <param name="roleEligibilityScheduleRequestId"> The id of roleEligibilityScheduleRequest used to create this roleAssignmentSchedule. </param>
            <param name="memberType"> Membership type of the role eligibility schedule. </param>
            <param name="status"> The status of the role eligibility schedule. </param>
            <param name="startOn"> Start DateTime when role eligibility schedule. </param>
            <param name="endOn"> End DateTime when role eligibility schedule. </param>
            <param name="condition"> The conditions on the role assignment. This limits the resources it can be assigned to. e.g.: @Resource[Microsoft.Storage/storageAccounts/blobServices/containers:ContainerName] StringEqualsIgnoreCase 'foo_storage_container'. </param>
            <param name="conditionVersion"> Version of the condition. Currently accepted value is '2.0'. </param>
            <param name="createdOn"> DateTime when role eligibility schedule was created. </param>
            <param name="updatedOn"> DateTime when role eligibility schedule was modified. </param>
            <param name="expandedProperties"> Additional properties of principal, scope and role definition. </param>
            <returns> A new <see cref="T:Azure.ResourceManager.Authorization.RoleEligibilityScheduleData" /> instance for mocking. </returns>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.Models.ArmAuthorizationModelFactory.RoleEligibilityScheduleInstanceData(Azure.Core.ResourceIdentifier,System.String,Azure.Core.ResourceType,Azure.ResourceManager.Models.SystemData,System.String,Azure.Core.ResourceIdentifier,System.Nullable{System.Guid},System.Nullable{Azure.ResourceManager.Authorization.Models.RoleManagementPrincipalType},Azure.Core.ResourceIdentifier,System.Nullable{Azure.ResourceManager.Authorization.Models.RoleManagementScheduleStatus},System.Nullable{System.DateTimeOffset},System.Nullable{System.DateTimeOffset},System.Nullable{Azure.ResourceManager.Authorization.Models.RoleManagementScheduleMemberType},System.String,System.String,System.Nullable{System.DateTimeOffset},Azure.ResourceManager.Authorization.Models.RoleManagementExpandedProperties)">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Authorization.RoleEligibilityScheduleInstanceData" />. </summary>
            <param name="id"> The id. </param>
            <param name="name"> The name. </param>
            <param name="resourceType"> The resourceType. </param>
            <param name="systemData"> The systemData. </param>
            <param name="scope"> The role eligibility schedule scope. </param>
            <param name="roleDefinitionId"> The role definition ID. </param>
            <param name="principalId"> The principal ID. </param>
            <param name="principalType"> The principal type of the assigned principal ID. </param>
            <param name="roleEligibilityScheduleId"> Id of the master role eligibility schedule. </param>
            <param name="status"> The status of the role eligibility schedule instance. </param>
            <param name="startOn"> The startDateTime of the role eligibility schedule instance. </param>
            <param name="endOn"> The endDateTime of the role eligibility schedule instance. </param>
            <param name="memberType"> Membership type of the role eligibility schedule. </param>
            <param name="condition"> The conditions on the role assignment. This limits the resources it can be assigned to. e.g.: @Resource[Microsoft.Storage/storageAccounts/blobServices/containers:ContainerName] StringEqualsIgnoreCase 'foo_storage_container'. </param>
            <param name="conditionVersion"> Version of the condition. Currently accepted value is '2.0'. </param>
            <param name="createdOn"> DateTime when role eligibility schedule was created. </param>
            <param name="expandedProperties"> Additional properties of principal, scope and role definition. </param>
            <returns> A new <see cref="T:Azure.ResourceManager.Authorization.RoleEligibilityScheduleInstanceData" /> instance for mocking. </returns>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.Models.ArmAuthorizationModelFactory.RoleEligibilityScheduleRequestData(Azure.Core.ResourceIdentifier,System.String,Azure.Core.ResourceType,Azure.ResourceManager.Models.SystemData,System.String,Azure.Core.ResourceIdentifier,System.Nullable{System.Guid},System.Nullable{Azure.ResourceManager.Authorization.Models.RoleManagementPrincipalType},System.Nullable{Azure.ResourceManager.Authorization.Models.RoleManagementScheduleRequestType},System.Nullable{Azure.ResourceManager.Authorization.Models.RoleManagementScheduleStatus},System.String,Azure.Core.ResourceIdentifier,Azure.Core.ResourceIdentifier,System.String,Azure.ResourceManager.Authorization.Models.RoleEligibilityScheduleRequestPropertiesTicketInfo,System.String,System.String,System.Nullable{System.DateTimeOffset},System.Nullable{System.Guid},Azure.ResourceManager.Authorization.Models.RoleManagementExpandedProperties,System.Nullable{System.DateTimeOffset},System.Nullable{Azure.ResourceManager.Authorization.Models.RoleManagementScheduleExpirationType},System.Nullable{System.DateTimeOffset},System.Nullable{System.TimeSpan})">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Authorization.RoleEligibilityScheduleRequestData" />. </summary>
            <param name="id"> The id. </param>
            <param name="name"> The name. </param>
            <param name="resourceType"> The resourceType. </param>
            <param name="systemData"> The systemData. </param>
            <param name="scope"> The role eligibility schedule request scope. </param>
            <param name="roleDefinitionId"> The role definition ID. </param>
            <param name="principalId"> The principal ID. </param>
            <param name="principalType"> The principal type of the assigned principal ID. </param>
            <param name="requestType"> The type of the role assignment schedule request. Eg: SelfActivate, AdminAssign etc. </param>
            <param name="status"> The status of the role eligibility schedule request. </param>
            <param name="approvalId"> The approvalId of the role eligibility schedule request. </param>
            <param name="targetRoleEligibilityScheduleId"> The resultant role eligibility schedule id or the role eligibility schedule id being updated. </param>
            <param name="targetRoleEligibilityScheduleInstanceId"> The role eligibility schedule instance id being updated. </param>
            <param name="justification"> Justification for the role eligibility. </param>
            <param name="ticketInfo"> Ticket Info of the role eligibility. </param>
            <param name="condition"> The conditions on the role assignment. This limits the resources it can be assigned to. e.g.: @Resource[Microsoft.Storage/storageAccounts/blobServices/containers:ContainerName] StringEqualsIgnoreCase 'foo_storage_container'. </param>
            <param name="conditionVersion"> Version of the condition. Currently accepted value is '2.0'. </param>
            <param name="createdOn"> DateTime when role eligibility schedule request was created. </param>
            <param name="requestorId"> Id of the user who created this request. </param>
            <param name="expandedProperties"> Additional properties of principal, scope and role definition. </param>
            <param name="startOn"> Start DateTime of the role eligibility schedule. </param>
            <param name="expirationType"> Type of the role eligibility schedule expiration. </param>
            <param name="endOn"> End DateTime of the role eligibility schedule. </param>
            <param name="duration"> Duration of the role eligibility schedule in TimeSpan. </param>
            <returns> A new <see cref="T:Azure.ResourceManager.Authorization.RoleEligibilityScheduleRequestData" /> instance for mocking. </returns>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.Models.ArmAuthorizationModelFactory.RoleManagementPolicyData(Azure.Core.ResourceIdentifier,System.String,Azure.Core.ResourceType,Azure.ResourceManager.Models.SystemData,System.String,System.String,System.String,System.Nullable{System.Boolean},Azure.ResourceManager.Authorization.Models.RoleManagementPrincipal,System.Nullable{System.DateTimeOffset},System.Collections.Generic.IEnumerable{Azure.ResourceManager.Authorization.Models.RoleManagementPolicyRule},System.Collections.Generic.IEnumerable{Azure.ResourceManager.Authorization.Models.RoleManagementPolicyRule},Azure.ResourceManager.Authorization.Models.RoleManagementPolicyProperties)">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Authorization.RoleManagementPolicyData" />. </summary>
            <param name="id"> The id. </param>
            <param name="name"> The name. </param>
            <param name="resourceType"> The resourceType. </param>
            <param name="systemData"> The systemData. </param>
            <param name="scope"> The role management policy scope. </param>
            <param name="displayName"> The role management policy display name. </param>
            <param name="description"> The role management policy description. </param>
            <param name="isOrganizationDefault"> The role management policy is default policy. </param>
            <param name="lastModifiedBy"> The name of the entity last modified it. </param>
            <param name="lastModifiedOn"> The last modified date time. </param>
            <param name="rules">
            The rule applied to the policy.
            Please note <see cref="T:Azure.ResourceManager.Authorization.Models.RoleManagementPolicyRule" /> is the base class. According to the scenario, a derived class of the base class might need to be assigned here, or this property needs to be casted to one of the possible derived classes.
            The available derived classes include <see cref="T:Azure.ResourceManager.Authorization.Models.RoleManagementPolicyApprovalRule" />, <see cref="T:Azure.ResourceManager.Authorization.Models.RoleManagementPolicyAuthenticationContextRule" />, <see cref="T:Azure.ResourceManager.Authorization.Models.RoleManagementPolicyEnablementRule" />, <see cref="T:Azure.ResourceManager.Authorization.Models.RoleManagementPolicyExpirationRule" /> and <see cref="T:Azure.ResourceManager.Authorization.Models.RoleManagementPolicyNotificationRule" />.
            </param>
            <param name="effectiveRules">
            The readonly computed rule applied to the policy.
            Please note <see cref="T:Azure.ResourceManager.Authorization.Models.RoleManagementPolicyRule" /> is the base class. According to the scenario, a derived class of the base class might need to be assigned here, or this property needs to be casted to one of the possible derived classes.
            The available derived classes include <see cref="T:Azure.ResourceManager.Authorization.Models.RoleManagementPolicyApprovalRule" />, <see cref="T:Azure.ResourceManager.Authorization.Models.RoleManagementPolicyAuthenticationContextRule" />, <see cref="T:Azure.ResourceManager.Authorization.Models.RoleManagementPolicyEnablementRule" />, <see cref="T:Azure.ResourceManager.Authorization.Models.RoleManagementPolicyExpirationRule" /> and <see cref="T:Azure.ResourceManager.Authorization.Models.RoleManagementPolicyNotificationRule" />.
            </param>
            <param name="policyProperties"> Additional properties of scope. </param>
            <returns> A new <see cref="T:Azure.ResourceManager.Authorization.RoleManagementPolicyData" /> instance for mocking. </returns>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.Models.ArmAuthorizationModelFactory.RoleManagementPolicyProperties(Azure.Core.ResourceIdentifier,System.String,System.Nullable{Azure.ResourceManager.Authorization.Models.RoleManagementScopeType})">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Authorization.Models.RoleManagementPolicyProperties" />. </summary>
            <param name="scopeId"> Scope id of the resource. </param>
            <param name="scopeDisplayName"> Display name of the resource. </param>
            <param name="scopeType"> Type of the scope. </param>
            <returns> A new <see cref="T:Azure.ResourceManager.Authorization.Models.RoleManagementPolicyProperties" /> instance for mocking. </returns>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.Models.ArmAuthorizationModelFactory.RoleManagementPolicyAssignmentData(Azure.Core.ResourceIdentifier,System.String,Azure.Core.ResourceType,Azure.ResourceManager.Models.SystemData,System.String,Azure.Core.ResourceIdentifier,Azure.Core.ResourceIdentifier,System.Collections.Generic.IEnumerable{Azure.ResourceManager.Authorization.Models.RoleManagementPolicyRule},Azure.ResourceManager.Authorization.Models.PolicyAssignmentProperties)">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Authorization.RoleManagementPolicyAssignmentData" />. </summary>
            <param name="id"> The id. </param>
            <param name="name"> The name. </param>
            <param name="resourceType"> The resourceType. </param>
            <param name="systemData"> The systemData. </param>
            <param name="scope"> The role management policy scope. </param>
            <param name="roleDefinitionId"> The role definition of management policy assignment. </param>
            <param name="policyId"> The policy id role management policy assignment. </param>
            <param name="effectiveRules">
            The readonly computed rule applied to the policy.
            Please note <see cref="T:Azure.ResourceManager.Authorization.Models.RoleManagementPolicyRule" /> is the base class. According to the scenario, a derived class of the base class might need to be assigned here, or this property needs to be casted to one of the possible derived classes.
            The available derived classes include <see cref="T:Azure.ResourceManager.Authorization.Models.RoleManagementPolicyApprovalRule" />, <see cref="T:Azure.ResourceManager.Authorization.Models.RoleManagementPolicyAuthenticationContextRule" />, <see cref="T:Azure.ResourceManager.Authorization.Models.RoleManagementPolicyEnablementRule" />, <see cref="T:Azure.ResourceManager.Authorization.Models.RoleManagementPolicyExpirationRule" /> and <see cref="T:Azure.ResourceManager.Authorization.Models.RoleManagementPolicyNotificationRule" />.
            </param>
            <param name="policyAssignmentProperties"> Additional properties of scope, role definition and policy. </param>
            <returns> A new <see cref="T:Azure.ResourceManager.Authorization.RoleManagementPolicyAssignmentData" /> instance for mocking. </returns>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.Models.ArmAuthorizationModelFactory.PolicyAssignmentProperties(Azure.Core.ResourceIdentifier,System.String,Azure.Core.ResourceType,Azure.ResourceManager.Models.SystemData,Azure.Core.ResourceIdentifier,Azure.ResourceManager.Authorization.Models.RoleManagementPrincipal,System.Nullable{System.DateTimeOffset},Azure.Core.ResourceIdentifier,System.String,System.Nullable{Azure.ResourceManager.Authorization.Models.AuthorizationRoleType},Azure.Core.ResourceIdentifier,System.String,System.Nullable{Azure.ResourceManager.Authorization.Models.RoleManagementScopeType})">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Authorization.Models.PolicyAssignmentProperties" />. </summary>
            <param name="id"> The id. </param>
            <param name="name"> The name. </param>
            <param name="resourceType"> The resourceType. </param>
            <param name="systemData"> The systemData. </param>
            <param name="policyId"> Id of the policy. </param>
            <param name="lastModifiedBy"> The name of the entity last modified it. </param>
            <param name="lastModifiedOn"> The last modified date time. </param>
            <param name="roleDefinitionId"> Id of the role definition. </param>
            <param name="roleDefinitionDisplayName"> Display name of the role definition. </param>
            <param name="roleType"> The role type. </param>
            <param name="scopeId"> Scope id of the resource. </param>
            <param name="scopeDisplayName"> Display name of the resource. </param>
            <param name="scopeType"> Type of the scope. </param>
            <returns> A new <see cref="T:Azure.ResourceManager.Authorization.Models.PolicyAssignmentProperties" /> instance for mocking. </returns>
        </member>
        <member name="T:Azure.ResourceManager.Authorization.Models.AuthorizationClassicAdministrator">
            <summary> Classic Administrators. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.Models.AuthorizationClassicAdministrator.#ctor">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Authorization.Models.AuthorizationClassicAdministrator" />. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.Models.AuthorizationClassicAdministrator.#ctor(Azure.Core.ResourceIdentifier,System.String,Azure.Core.ResourceType,Azure.ResourceManager.Models.SystemData,System.String,System.String,System.Collections.Generic.IDictionary{System.String,System.BinaryData})">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Authorization.Models.AuthorizationClassicAdministrator" />. </summary>
            <param name="id"> The id. </param>
            <param name="name"> The name. </param>
            <param name="resourceType"> The resourceType. </param>
            <param name="systemData"> The systemData. </param>
            <param name="emailAddress"> The email address of the administrator. </param>
            <param name="role"> The role of the administrator. </param>
            <param name="serializedAdditionalRawData"> Keeps track of any properties unknown to the library. </param>
        </member>
        <member name="P:Azure.ResourceManager.Authorization.Models.AuthorizationClassicAdministrator.EmailAddress">
            <summary> The email address of the administrator. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Authorization.Models.AuthorizationClassicAdministrator.Role">
            <summary> The role of the administrator. </summary>
        </member>
        <member name="T:Azure.ResourceManager.Authorization.Models.AuthorizationClassicAdministratorListResult">
            <summary> ClassicAdministrator list result information. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.Models.AuthorizationClassicAdministratorListResult.#ctor">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Authorization.Models.AuthorizationClassicAdministratorListResult" />. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.Models.AuthorizationClassicAdministratorListResult.#ctor(System.Collections.Generic.IReadOnlyList{Azure.ResourceManager.Authorization.Models.AuthorizationClassicAdministrator},System.String,System.Collections.Generic.IDictionary{System.String,System.BinaryData})">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Authorization.Models.AuthorizationClassicAdministratorListResult" />. </summary>
            <param name="value"> An array of administrators. </param>
            <param name="nextLink"> The URL to use for getting the next set of results. </param>
            <param name="serializedAdditionalRawData"> Keeps track of any properties unknown to the library. </param>
        </member>
        <member name="P:Azure.ResourceManager.Authorization.Models.AuthorizationClassicAdministratorListResult.Value">
            <summary> An array of administrators. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Authorization.Models.AuthorizationClassicAdministratorListResult.NextLink">
            <summary> The URL to use for getting the next set of results. </summary>
        </member>
        <member name="T:Azure.ResourceManager.Authorization.Models.AuthorizationProviderOperationInfo">
            <summary> Operation. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.Models.AuthorizationProviderOperationInfo.#ctor">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Authorization.Models.AuthorizationProviderOperationInfo" />. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.Models.AuthorizationProviderOperationInfo.#ctor(System.String,System.String,System.String,System.String,System.BinaryData,System.Nullable{System.Boolean},System.Collections.Generic.IDictionary{System.String,System.BinaryData})">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Authorization.Models.AuthorizationProviderOperationInfo" />. </summary>
            <param name="name"> The operation name. </param>
            <param name="displayName"> The operation display name. </param>
            <param name="description"> The operation description. </param>
            <param name="origin"> The operation origin. </param>
            <param name="properties"> The operation properties. </param>
            <param name="isDataAction"> The dataAction flag to specify the operation type. </param>
            <param name="serializedAdditionalRawData"> Keeps track of any properties unknown to the library. </param>
        </member>
        <member name="P:Azure.ResourceManager.Authorization.Models.AuthorizationProviderOperationInfo.Name">
            <summary> The operation name. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Authorization.Models.AuthorizationProviderOperationInfo.DisplayName">
            <summary> The operation display name. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Authorization.Models.AuthorizationProviderOperationInfo.Description">
            <summary> The operation description. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Authorization.Models.AuthorizationProviderOperationInfo.Origin">
            <summary> The operation origin. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Authorization.Models.AuthorizationProviderOperationInfo.Properties">
            <summary>
            The operation properties.
            <para>
            To assign an object to this property use <see cref="M:System.BinaryData.FromObjectAsJson``1(``0,System.Text.Json.JsonSerializerOptions)" />.
            </para>
            <para>
            To assign an already formatted json string to this property use <see cref="M:System.BinaryData.FromString(System.String)" />.
            </para>
            <para>
            Examples:
            <list type="bullet">
            <item>
            <term>BinaryData.FromObjectAsJson("foo")</term>
            <description>Creates a payload of "foo".</description>
            </item>
            <item>
            <term>BinaryData.FromString("\"foo\"")</term>
            <description>Creates a payload of "foo".</description>
            </item>
            <item>
            <term>BinaryData.FromObjectAsJson(new { key = "value" })</term>
            <description>Creates a payload of { "key": "value" }.</description>
            </item>
            <item>
            <term>BinaryData.FromString("{\"key\": \"value\"}")</term>
            <description>Creates a payload of { "key": "value" }.</description>
            </item>
            </list>
            </para>
            </summary>
        </member>
        <member name="P:Azure.ResourceManager.Authorization.Models.AuthorizationProviderOperationInfo.IsDataAction">
            <summary> The dataAction flag to specify the operation type. </summary>
        </member>
        <member name="T:Azure.ResourceManager.Authorization.Models.AuthorizationProviderOperationsMetadataListResult">
            <summary> Provider operations metadata list. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.Models.AuthorizationProviderOperationsMetadataListResult.#ctor">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Authorization.Models.AuthorizationProviderOperationsMetadataListResult" />. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.Models.AuthorizationProviderOperationsMetadataListResult.#ctor(System.Collections.Generic.IReadOnlyList{Azure.ResourceManager.Authorization.AuthorizationProviderOperationsMetadataData},System.String,System.Collections.Generic.IDictionary{System.String,System.BinaryData})">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Authorization.Models.AuthorizationProviderOperationsMetadataListResult" />. </summary>
            <param name="value"> The list of providers. </param>
            <param name="nextLink"> The URL to use for getting the next set of results. </param>
            <param name="serializedAdditionalRawData"> Keeps track of any properties unknown to the library. </param>
        </member>
        <member name="P:Azure.ResourceManager.Authorization.Models.AuthorizationProviderOperationsMetadataListResult.Value">
            <summary> The list of providers. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Authorization.Models.AuthorizationProviderOperationsMetadataListResult.NextLink">
            <summary> The URL to use for getting the next set of results. </summary>
        </member>
        <member name="T:Azure.ResourceManager.Authorization.Models.AuthorizationProviderResourceType">
            <summary> Resource Type. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.Models.AuthorizationProviderResourceType.#ctor">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Authorization.Models.AuthorizationProviderResourceType" />. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.Models.AuthorizationProviderResourceType.#ctor(System.String,System.String,System.Collections.Generic.IReadOnlyList{Azure.ResourceManager.Authorization.Models.AuthorizationProviderOperationInfo},System.Collections.Generic.IDictionary{System.String,System.BinaryData})">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Authorization.Models.AuthorizationProviderResourceType" />. </summary>
            <param name="name"> The resource type name. </param>
            <param name="displayName"> The resource type display name. </param>
            <param name="operations"> The resource type operations. </param>
            <param name="serializedAdditionalRawData"> Keeps track of any properties unknown to the library. </param>
        </member>
        <member name="P:Azure.ResourceManager.Authorization.Models.AuthorizationProviderResourceType.Name">
            <summary> The resource type name. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Authorization.Models.AuthorizationProviderResourceType.DisplayName">
            <summary> The resource type display name. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Authorization.Models.AuthorizationProviderResourceType.Operations">
            <summary> The resource type operations. </summary>
        </member>
        <member name="T:Azure.ResourceManager.Authorization.Models.AuthorizationRoleType">
            <summary> The role type. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.Models.AuthorizationRoleType.#ctor(System.String)">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Authorization.Models.AuthorizationRoleType" />. </summary>
            <exception cref="T:System.ArgumentNullException"> <paramref name="value" /> is null. </exception>
        </member>
        <member name="P:Azure.ResourceManager.Authorization.Models.AuthorizationRoleType.BuiltInRole">
            <summary> BuiltInRole. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Authorization.Models.AuthorizationRoleType.CustomRole">
            <summary> CustomRole. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.Models.AuthorizationRoleType.op_Equality(Azure.ResourceManager.Authorization.Models.AuthorizationRoleType,Azure.ResourceManager.Authorization.Models.AuthorizationRoleType)">
            <summary> Determines if two <see cref="T:Azure.ResourceManager.Authorization.Models.AuthorizationRoleType" /> values are the same. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.Models.AuthorizationRoleType.op_Inequality(Azure.ResourceManager.Authorization.Models.AuthorizationRoleType,Azure.ResourceManager.Authorization.Models.AuthorizationRoleType)">
            <summary> Determines if two <see cref="T:Azure.ResourceManager.Authorization.Models.AuthorizationRoleType" /> values are not the same. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.Models.AuthorizationRoleType.op_Implicit(System.String)~Azure.ResourceManager.Authorization.Models.AuthorizationRoleType">
            <summary> Converts a string to a <see cref="T:Azure.ResourceManager.Authorization.Models.AuthorizationRoleType" />. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.Models.AuthorizationRoleType.Equals(System.Object)">
            <summary>Indicates whether this instance and a specified object are equal.</summary><param name="obj">The object to compare with the current instance.</param><returns><see langword="true" /> if <paramref name="obj" /> and this instance are the same type and represent the same value; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.Models.AuthorizationRoleType.Equals(Azure.ResourceManager.Authorization.Models.AuthorizationRoleType)">
            <summary>Indicates whether the current object is equal to another object of the same type.</summary><param name="other">An object to compare with this object.</param><returns><see langword="true" /> if the current object is equal to the <paramref name="other" /> parameter; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.Models.AuthorizationRoleType.GetHashCode">
            <summary>Returns the hash code for this instance.</summary><returns>A 32-bit signed integer that is the hash code for this instance.</returns>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.Models.AuthorizationRoleType.ToString">
            <summary>Returns the fully qualified type name of this instance.</summary><returns>The fully qualified type name.</returns>
        </member>
        <member name="T:Azure.ResourceManager.Authorization.Models.DenyAssignmentListResult">
            <summary> Deny assignment list operation result. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.Models.DenyAssignmentListResult.#ctor">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Authorization.Models.DenyAssignmentListResult" />. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.Models.DenyAssignmentListResult.#ctor(System.Collections.Generic.IReadOnlyList{Azure.ResourceManager.Authorization.DenyAssignmentData},System.String,System.Collections.Generic.IDictionary{System.String,System.BinaryData})">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Authorization.Models.DenyAssignmentListResult" />. </summary>
            <param name="value"> Deny assignment list. </param>
            <param name="nextLink"> The URL to use for getting the next set of results. </param>
            <param name="serializedAdditionalRawData"> Keeps track of any properties unknown to the library. </param>
        </member>
        <member name="P:Azure.ResourceManager.Authorization.Models.DenyAssignmentListResult.Value">
            <summary> Deny assignment list. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Authorization.Models.DenyAssignmentListResult.NextLink">
            <summary> The URL to use for getting the next set of results. </summary>
        </member>
        <member name="T:Azure.ResourceManager.Authorization.Models.DenyAssignmentPermission">
            <summary> Deny assignment permissions. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.Models.DenyAssignmentPermission.#ctor">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Authorization.Models.DenyAssignmentPermission" />. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.Models.DenyAssignmentPermission.#ctor(System.Collections.Generic.IReadOnlyList{System.String},System.Collections.Generic.IReadOnlyList{System.String},System.Collections.Generic.IReadOnlyList{System.String},System.Collections.Generic.IReadOnlyList{System.String},System.String,System.String,System.Collections.Generic.IDictionary{System.String,System.BinaryData})">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Authorization.Models.DenyAssignmentPermission" />. </summary>
            <param name="actions"> Actions to which the deny assignment does not grant access. </param>
            <param name="notActions"> Actions to exclude from that the deny assignment does not grant access. </param>
            <param name="dataActions"> Data actions to which the deny assignment does not grant access. </param>
            <param name="notDataActions"> Data actions to exclude from that the deny assignment does not grant access. </param>
            <param name="condition"> The conditions on the Deny assignment permission. This limits the resources it applies to. </param>
            <param name="conditionVersion"> Version of the condition. </param>
            <param name="serializedAdditionalRawData"> Keeps track of any properties unknown to the library. </param>
        </member>
        <member name="P:Azure.ResourceManager.Authorization.Models.DenyAssignmentPermission.Actions">
            <summary> Actions to which the deny assignment does not grant access. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Authorization.Models.DenyAssignmentPermission.NotActions">
            <summary> Actions to exclude from that the deny assignment does not grant access. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Authorization.Models.DenyAssignmentPermission.DataActions">
            <summary> Data actions to which the deny assignment does not grant access. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Authorization.Models.DenyAssignmentPermission.NotDataActions">
            <summary> Data actions to exclude from that the deny assignment does not grant access. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Authorization.Models.DenyAssignmentPermission.Condition">
            <summary> The conditions on the Deny assignment permission. This limits the resources it applies to. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Authorization.Models.DenyAssignmentPermission.ConditionVersion">
            <summary> Version of the condition. </summary>
        </member>
        <member name="T:Azure.ResourceManager.Authorization.Models.EligibleChildResource">
            <summary> Eligible child resource. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.Models.EligibleChildResource.#ctor">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Authorization.Models.EligibleChildResource" />. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.Models.EligibleChildResource.#ctor(System.String,System.String,System.String,System.Collections.Generic.IDictionary{System.String,System.BinaryData})">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Authorization.Models.EligibleChildResource" />. </summary>
            <param name="id"> The resource scope Id. </param>
            <param name="name"> The resource name. </param>
            <param name="resourceType"> The resource type. </param>
            <param name="serializedAdditionalRawData"> Keeps track of any properties unknown to the library. </param>
        </member>
        <member name="P:Azure.ResourceManager.Authorization.Models.EligibleChildResource.Id">
            <summary> The resource scope Id. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Authorization.Models.EligibleChildResource.Name">
            <summary> The resource name. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Authorization.Models.EligibleChildResource.ResourceType">
            <summary> The resource type. </summary>
        </member>
        <member name="T:Azure.ResourceManager.Authorization.Models.EligibleChildResourcesListResult">
            <summary> Eligible child resources list operation result. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.Models.EligibleChildResourcesListResult.#ctor">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Authorization.Models.EligibleChildResourcesListResult" />. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.Models.EligibleChildResourcesListResult.#ctor(System.Collections.Generic.IReadOnlyList{Azure.ResourceManager.Authorization.Models.EligibleChildResource},System.String,System.Collections.Generic.IDictionary{System.String,System.BinaryData})">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Authorization.Models.EligibleChildResourcesListResult" />. </summary>
            <param name="value"> Eligible child resource list. </param>
            <param name="nextLink"> The URL to use for getting the next set of results. </param>
            <param name="serializedAdditionalRawData"> Keeps track of any properties unknown to the library. </param>
        </member>
        <member name="P:Azure.ResourceManager.Authorization.Models.EligibleChildResourcesListResult.Value">
            <summary> Eligible child resource list. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Authorization.Models.EligibleChildResourcesListResult.NextLink">
            <summary> The URL to use for getting the next set of results. </summary>
        </member>
        <member name="T:Azure.ResourceManager.Authorization.Models.NotificationDeliveryType">
            <summary> The type of notification. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.Models.NotificationDeliveryType.#ctor(System.String)">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Authorization.Models.NotificationDeliveryType" />. </summary>
            <exception cref="T:System.ArgumentNullException"> <paramref name="value" /> is null. </exception>
        </member>
        <member name="P:Azure.ResourceManager.Authorization.Models.NotificationDeliveryType.Email">
            <summary> Email. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.Models.NotificationDeliveryType.op_Equality(Azure.ResourceManager.Authorization.Models.NotificationDeliveryType,Azure.ResourceManager.Authorization.Models.NotificationDeliveryType)">
            <summary> Determines if two <see cref="T:Azure.ResourceManager.Authorization.Models.NotificationDeliveryType" /> values are the same. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.Models.NotificationDeliveryType.op_Inequality(Azure.ResourceManager.Authorization.Models.NotificationDeliveryType,Azure.ResourceManager.Authorization.Models.NotificationDeliveryType)">
            <summary> Determines if two <see cref="T:Azure.ResourceManager.Authorization.Models.NotificationDeliveryType" /> values are not the same. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.Models.NotificationDeliveryType.op_Implicit(System.String)~Azure.ResourceManager.Authorization.Models.NotificationDeliveryType">
            <summary> Converts a string to a <see cref="T:Azure.ResourceManager.Authorization.Models.NotificationDeliveryType" />. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.Models.NotificationDeliveryType.Equals(System.Object)">
            <summary>Indicates whether this instance and a specified object are equal.</summary><param name="obj">The object to compare with the current instance.</param><returns><see langword="true" /> if <paramref name="obj" /> and this instance are the same type and represent the same value; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.Models.NotificationDeliveryType.Equals(Azure.ResourceManager.Authorization.Models.NotificationDeliveryType)">
            <summary>Indicates whether the current object is equal to another object of the same type.</summary><param name="other">An object to compare with this object.</param><returns><see langword="true" /> if the current object is equal to the <paramref name="other" /> parameter; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.Models.NotificationDeliveryType.GetHashCode">
            <summary>Returns the hash code for this instance.</summary><returns>A 32-bit signed integer that is the hash code for this instance.</returns>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.Models.NotificationDeliveryType.ToString">
            <summary>Returns the fully qualified type name of this instance.</summary><returns>The fully qualified type name.</returns>
        </member>
        <member name="T:Azure.ResourceManager.Authorization.Models.PolicyAssignmentProperties">
            <summary> Expanded info of resource scope, role definition and policy. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.Models.PolicyAssignmentProperties.#ctor">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Authorization.Models.PolicyAssignmentProperties" />. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.Models.PolicyAssignmentProperties.#ctor(Azure.Core.ResourceIdentifier,System.String,Azure.Core.ResourceType,Azure.ResourceManager.Models.SystemData,Azure.Core.ResourceIdentifier,Azure.ResourceManager.Authorization.Models.RoleManagementPrincipal,System.Nullable{System.DateTimeOffset},Azure.Core.ResourceIdentifier,System.String,System.Nullable{Azure.ResourceManager.Authorization.Models.AuthorizationRoleType},Azure.Core.ResourceIdentifier,System.String,System.Nullable{Azure.ResourceManager.Authorization.Models.RoleManagementScopeType},System.Collections.Generic.IDictionary{System.String,System.BinaryData})">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Authorization.Models.PolicyAssignmentProperties" />. </summary>
            <param name="id"> The id. </param>
            <param name="name"> The name. </param>
            <param name="resourceType"> The resourceType. </param>
            <param name="systemData"> The systemData. </param>
            <param name="policyId"> Id of the policy. </param>
            <param name="lastModifiedBy"> The name of the entity last modified it. </param>
            <param name="lastModifiedOn"> The last modified date time. </param>
            <param name="roleDefinitionId"> Id of the role definition. </param>
            <param name="roleDefinitionDisplayName"> Display name of the role definition. </param>
            <param name="roleType"> The role type. </param>
            <param name="scopeId"> Scope id of the resource. </param>
            <param name="scopeDisplayName"> Display name of the resource. </param>
            <param name="scopeType"> Type of the scope. </param>
            <param name="serializedAdditionalRawData"> Keeps track of any properties unknown to the library. </param>
        </member>
        <member name="P:Azure.ResourceManager.Authorization.Models.PolicyAssignmentProperties.PolicyId">
            <summary> Id of the policy. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Authorization.Models.PolicyAssignmentProperties.LastModifiedBy">
            <summary> The name of the entity last modified it. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Authorization.Models.PolicyAssignmentProperties.LastModifiedOn">
            <summary> The last modified date time. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Authorization.Models.PolicyAssignmentProperties.RoleDefinitionId">
            <summary> Id of the role definition. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Authorization.Models.PolicyAssignmentProperties.RoleDefinitionDisplayName">
            <summary> Display name of the role definition. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Authorization.Models.PolicyAssignmentProperties.RoleType">
            <summary> The role type. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Authorization.Models.PolicyAssignmentProperties.ScopeId">
            <summary> Scope id of the resource. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Authorization.Models.PolicyAssignmentProperties.ScopeDisplayName">
            <summary> Display name of the resource. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Authorization.Models.PolicyAssignmentProperties.ScopeType">
            <summary> Type of the scope. </summary>
        </member>
        <member name="T:Azure.ResourceManager.Authorization.Models.RoleAssignmentCreateOrUpdateContent">
            <summary> Role assignment create parameters. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.Models.RoleAssignmentCreateOrUpdateContent.#ctor(Azure.Core.ResourceIdentifier,System.Guid)">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Authorization.Models.RoleAssignmentCreateOrUpdateContent" />. </summary>
            <param name="roleDefinitionId"> The role definition ID. </param>
            <param name="principalId"> The principal ID. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="roleDefinitionId" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.Models.RoleAssignmentCreateOrUpdateContent.#ctor(System.String,Azure.Core.ResourceIdentifier,System.Guid,System.Nullable{Azure.ResourceManager.Authorization.Models.RoleManagementPrincipalType},System.String,System.String,System.String,System.Nullable{System.DateTimeOffset},System.Nullable{System.DateTimeOffset},System.String,System.String,Azure.Core.ResourceIdentifier,System.Collections.Generic.IDictionary{System.String,System.BinaryData})">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Authorization.Models.RoleAssignmentCreateOrUpdateContent" />. </summary>
            <param name="scope"> The role assignment scope. </param>
            <param name="roleDefinitionId"> The role definition ID. </param>
            <param name="principalId"> The principal ID. </param>
            <param name="principalType"> The principal type of the assigned principal ID. </param>
            <param name="description"> Description of role assignment. </param>
            <param name="condition"> The conditions on the role assignment. This limits the resources it can be assigned to. e.g.: @Resource[Microsoft.Storage/storageAccounts/blobServices/containers:ContainerName] StringEqualsIgnoreCase 'foo_storage_container'. </param>
            <param name="conditionVersion"> Version of the condition. Currently the only accepted value is '2.0'. </param>
            <param name="createdOn"> Time it was created. </param>
            <param name="updatedOn"> Time it was updated. </param>
            <param name="createdBy"> Id of the user who created the assignment. </param>
            <param name="updatedBy"> Id of the user who updated the assignment. </param>
            <param name="delegatedManagedIdentityResourceId"> Id of the delegated managed identity resource. </param>
            <param name="serializedAdditionalRawData"> Keeps track of any properties unknown to the library. </param>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.Models.RoleAssignmentCreateOrUpdateContent.#ctor">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Authorization.Models.RoleAssignmentCreateOrUpdateContent" /> for deserialization. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Authorization.Models.RoleAssignmentCreateOrUpdateContent.Scope">
            <summary> The role assignment scope. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Authorization.Models.RoleAssignmentCreateOrUpdateContent.RoleDefinitionId">
            <summary> The role definition ID. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Authorization.Models.RoleAssignmentCreateOrUpdateContent.PrincipalId">
            <summary> The principal ID. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Authorization.Models.RoleAssignmentCreateOrUpdateContent.PrincipalType">
            <summary> The principal type of the assigned principal ID. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Authorization.Models.RoleAssignmentCreateOrUpdateContent.Description">
            <summary> Description of role assignment. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Authorization.Models.RoleAssignmentCreateOrUpdateContent.Condition">
            <summary> The conditions on the role assignment. This limits the resources it can be assigned to. e.g.: @Resource[Microsoft.Storage/storageAccounts/blobServices/containers:ContainerName] StringEqualsIgnoreCase 'foo_storage_container'. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Authorization.Models.RoleAssignmentCreateOrUpdateContent.ConditionVersion">
            <summary> Version of the condition. Currently the only accepted value is '2.0'. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Authorization.Models.RoleAssignmentCreateOrUpdateContent.CreatedOn">
            <summary> Time it was created. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Authorization.Models.RoleAssignmentCreateOrUpdateContent.UpdatedOn">
            <summary> Time it was updated. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Authorization.Models.RoleAssignmentCreateOrUpdateContent.CreatedBy">
            <summary> Id of the user who created the assignment. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Authorization.Models.RoleAssignmentCreateOrUpdateContent.UpdatedBy">
            <summary> Id of the user who updated the assignment. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Authorization.Models.RoleAssignmentCreateOrUpdateContent.DelegatedManagedIdentityResourceId">
            <summary> Id of the delegated managed identity resource. </summary>
        </member>
        <member name="T:Azure.ResourceManager.Authorization.Models.RoleAssignmentEnablementRuleType">
            <summary> The type of enablement rule. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.Models.RoleAssignmentEnablementRuleType.#ctor(System.String)">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Authorization.Models.RoleAssignmentEnablementRuleType" />. </summary>
            <exception cref="T:System.ArgumentNullException"> <paramref name="value" /> is null. </exception>
        </member>
        <member name="P:Azure.ResourceManager.Authorization.Models.RoleAssignmentEnablementRuleType.MultiFactorAuthentication">
            <summary> MultiFactorAuthentication. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Authorization.Models.RoleAssignmentEnablementRuleType.Justification">
            <summary> Justification. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Authorization.Models.RoleAssignmentEnablementRuleType.Ticketing">
            <summary> Ticketing. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.Models.RoleAssignmentEnablementRuleType.op_Equality(Azure.ResourceManager.Authorization.Models.RoleAssignmentEnablementRuleType,Azure.ResourceManager.Authorization.Models.RoleAssignmentEnablementRuleType)">
            <summary> Determines if two <see cref="T:Azure.ResourceManager.Authorization.Models.RoleAssignmentEnablementRuleType" /> values are the same. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.Models.RoleAssignmentEnablementRuleType.op_Inequality(Azure.ResourceManager.Authorization.Models.RoleAssignmentEnablementRuleType,Azure.ResourceManager.Authorization.Models.RoleAssignmentEnablementRuleType)">
            <summary> Determines if two <see cref="T:Azure.ResourceManager.Authorization.Models.RoleAssignmentEnablementRuleType" /> values are not the same. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.Models.RoleAssignmentEnablementRuleType.op_Implicit(System.String)~Azure.ResourceManager.Authorization.Models.RoleAssignmentEnablementRuleType">
            <summary> Converts a string to a <see cref="T:Azure.ResourceManager.Authorization.Models.RoleAssignmentEnablementRuleType" />. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.Models.RoleAssignmentEnablementRuleType.Equals(System.Object)">
            <summary>Indicates whether this instance and a specified object are equal.</summary><param name="obj">The object to compare with the current instance.</param><returns><see langword="true" /> if <paramref name="obj" /> and this instance are the same type and represent the same value; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.Models.RoleAssignmentEnablementRuleType.Equals(Azure.ResourceManager.Authorization.Models.RoleAssignmentEnablementRuleType)">
            <summary>Indicates whether the current object is equal to another object of the same type.</summary><param name="other">An object to compare with this object.</param><returns><see langword="true" /> if the current object is equal to the <paramref name="other" /> parameter; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.Models.RoleAssignmentEnablementRuleType.GetHashCode">
            <summary>Returns the hash code for this instance.</summary><returns>A 32-bit signed integer that is the hash code for this instance.</returns>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.Models.RoleAssignmentEnablementRuleType.ToString">
            <summary>Returns the fully qualified type name of this instance.</summary><returns>The fully qualified type name.</returns>
        </member>
        <member name="T:Azure.ResourceManager.Authorization.Models.RoleAssignmentListResult">
            <summary> Role assignment list operation result. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.Models.RoleAssignmentListResult.#ctor">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Authorization.Models.RoleAssignmentListResult" />. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.Models.RoleAssignmentListResult.#ctor(System.Collections.Generic.IReadOnlyList{Azure.ResourceManager.Authorization.RoleAssignmentData},System.String,System.Collections.Generic.IDictionary{System.String,System.BinaryData})">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Authorization.Models.RoleAssignmentListResult" />. </summary>
            <param name="value"> Role assignment list. </param>
            <param name="nextLink"> The skipToken to use for getting the next set of results. </param>
            <param name="serializedAdditionalRawData"> Keeps track of any properties unknown to the library. </param>
        </member>
        <member name="P:Azure.ResourceManager.Authorization.Models.RoleAssignmentListResult.Value">
            <summary> Role assignment list. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Authorization.Models.RoleAssignmentListResult.NextLink">
            <summary> The skipToken to use for getting the next set of results. </summary>
        </member>
        <member name="T:Azure.ResourceManager.Authorization.Models.RoleAssignmentScheduleAssignmentType">
            <summary> Assignment type of the role assignment schedule. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.Models.RoleAssignmentScheduleAssignmentType.#ctor(System.String)">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Authorization.Models.RoleAssignmentScheduleAssignmentType" />. </summary>
            <exception cref="T:System.ArgumentNullException"> <paramref name="value" /> is null. </exception>
        </member>
        <member name="P:Azure.ResourceManager.Authorization.Models.RoleAssignmentScheduleAssignmentType.Activated">
            <summary> Activated. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Authorization.Models.RoleAssignmentScheduleAssignmentType.Assigned">
            <summary> Assigned. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.Models.RoleAssignmentScheduleAssignmentType.op_Equality(Azure.ResourceManager.Authorization.Models.RoleAssignmentScheduleAssignmentType,Azure.ResourceManager.Authorization.Models.RoleAssignmentScheduleAssignmentType)">
            <summary> Determines if two <see cref="T:Azure.ResourceManager.Authorization.Models.RoleAssignmentScheduleAssignmentType" /> values are the same. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.Models.RoleAssignmentScheduleAssignmentType.op_Inequality(Azure.ResourceManager.Authorization.Models.RoleAssignmentScheduleAssignmentType,Azure.ResourceManager.Authorization.Models.RoleAssignmentScheduleAssignmentType)">
            <summary> Determines if two <see cref="T:Azure.ResourceManager.Authorization.Models.RoleAssignmentScheduleAssignmentType" /> values are not the same. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.Models.RoleAssignmentScheduleAssignmentType.op_Implicit(System.String)~Azure.ResourceManager.Authorization.Models.RoleAssignmentScheduleAssignmentType">
            <summary> Converts a string to a <see cref="T:Azure.ResourceManager.Authorization.Models.RoleAssignmentScheduleAssignmentType" />. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.Models.RoleAssignmentScheduleAssignmentType.Equals(System.Object)">
            <summary>Indicates whether this instance and a specified object are equal.</summary><param name="obj">The object to compare with the current instance.</param><returns><see langword="true" /> if <paramref name="obj" /> and this instance are the same type and represent the same value; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.Models.RoleAssignmentScheduleAssignmentType.Equals(Azure.ResourceManager.Authorization.Models.RoleAssignmentScheduleAssignmentType)">
            <summary>Indicates whether the current object is equal to another object of the same type.</summary><param name="other">An object to compare with this object.</param><returns><see langword="true" /> if the current object is equal to the <paramref name="other" /> parameter; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.Models.RoleAssignmentScheduleAssignmentType.GetHashCode">
            <summary>Returns the hash code for this instance.</summary><returns>A 32-bit signed integer that is the hash code for this instance.</returns>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.Models.RoleAssignmentScheduleAssignmentType.ToString">
            <summary>Returns the fully qualified type name of this instance.</summary><returns>The fully qualified type name.</returns>
        </member>
        <member name="T:Azure.ResourceManager.Authorization.Models.RoleAssignmentScheduleInstanceListResult">
            <summary> Role assignment schedule instance list operation result. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.Models.RoleAssignmentScheduleInstanceListResult.#ctor">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Authorization.Models.RoleAssignmentScheduleInstanceListResult" />. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.Models.RoleAssignmentScheduleInstanceListResult.#ctor(System.Collections.Generic.IReadOnlyList{Azure.ResourceManager.Authorization.RoleAssignmentScheduleInstanceData},System.String,System.Collections.Generic.IDictionary{System.String,System.BinaryData})">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Authorization.Models.RoleAssignmentScheduleInstanceListResult" />. </summary>
            <param name="value"> Role assignment schedule instance list. </param>
            <param name="nextLink"> The URL to use for getting the next set of results. </param>
            <param name="serializedAdditionalRawData"> Keeps track of any properties unknown to the library. </param>
        </member>
        <member name="P:Azure.ResourceManager.Authorization.Models.RoleAssignmentScheduleInstanceListResult.Value">
            <summary> Role assignment schedule instance list. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Authorization.Models.RoleAssignmentScheduleInstanceListResult.NextLink">
            <summary> The URL to use for getting the next set of results. </summary>
        </member>
        <member name="T:Azure.ResourceManager.Authorization.Models.RoleAssignmentScheduleListResult">
            <summary> Role assignment schedule list operation result. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.Models.RoleAssignmentScheduleListResult.#ctor">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Authorization.Models.RoleAssignmentScheduleListResult" />. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.Models.RoleAssignmentScheduleListResult.#ctor(System.Collections.Generic.IReadOnlyList{Azure.ResourceManager.Authorization.RoleAssignmentScheduleData},System.String,System.Collections.Generic.IDictionary{System.String,System.BinaryData})">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Authorization.Models.RoleAssignmentScheduleListResult" />. </summary>
            <param name="value"> Role assignment schedule list. </param>
            <param name="nextLink"> The URL to use for getting the next set of results. </param>
            <param name="serializedAdditionalRawData"> Keeps track of any properties unknown to the library. </param>
        </member>
        <member name="P:Azure.ResourceManager.Authorization.Models.RoleAssignmentScheduleListResult.Value">
            <summary> Role assignment schedule list. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Authorization.Models.RoleAssignmentScheduleListResult.NextLink">
            <summary> The URL to use for getting the next set of results. </summary>
        </member>
        <member name="T:Azure.ResourceManager.Authorization.Models.RoleAssignmentScheduleRequestListResult">
            <summary> Role assignment schedule request list operation result. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.Models.RoleAssignmentScheduleRequestListResult.#ctor">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Authorization.Models.RoleAssignmentScheduleRequestListResult" />. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.Models.RoleAssignmentScheduleRequestListResult.#ctor(System.Collections.Generic.IReadOnlyList{Azure.ResourceManager.Authorization.RoleAssignmentScheduleRequestData},System.String,System.Collections.Generic.IDictionary{System.String,System.BinaryData})">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Authorization.Models.RoleAssignmentScheduleRequestListResult" />. </summary>
            <param name="value"> Role assignment schedule request list. </param>
            <param name="nextLink"> The URL to use for getting the next set of results. </param>
            <param name="serializedAdditionalRawData"> Keeps track of any properties unknown to the library. </param>
        </member>
        <member name="P:Azure.ResourceManager.Authorization.Models.RoleAssignmentScheduleRequestListResult.Value">
            <summary> Role assignment schedule request list. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Authorization.Models.RoleAssignmentScheduleRequestListResult.NextLink">
            <summary> The URL to use for getting the next set of results. </summary>
        </member>
        <member name="T:Azure.ResourceManager.Authorization.Models.RoleAssignmentScheduleTicketInfo">
            <summary> Ticket Info of the role assignment. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.Models.RoleAssignmentScheduleTicketInfo.#ctor">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Authorization.Models.RoleAssignmentScheduleTicketInfo" />. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.Models.RoleAssignmentScheduleTicketInfo.#ctor(System.String,System.String,System.Collections.Generic.IDictionary{System.String,System.BinaryData})">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Authorization.Models.RoleAssignmentScheduleTicketInfo" />. </summary>
            <param name="ticketNumber"> Ticket number for the role assignment. </param>
            <param name="ticketSystem"> Ticket system name for the role assignment. </param>
            <param name="serializedAdditionalRawData"> Keeps track of any properties unknown to the library. </param>
        </member>
        <member name="P:Azure.ResourceManager.Authorization.Models.RoleAssignmentScheduleTicketInfo.TicketNumber">
            <summary> Ticket number for the role assignment. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Authorization.Models.RoleAssignmentScheduleTicketInfo.TicketSystem">
            <summary> Ticket system name for the role assignment. </summary>
        </member>
        <member name="T:Azure.ResourceManager.Authorization.Models.RoleDefinitionListResult">
            <summary> Role definition list operation result. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.Models.RoleDefinitionListResult.#ctor">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Authorization.Models.RoleDefinitionListResult" />. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.Models.RoleDefinitionListResult.#ctor(System.Collections.Generic.IReadOnlyList{Azure.ResourceManager.Authorization.AuthorizationRoleDefinitionData},System.String,System.Collections.Generic.IDictionary{System.String,System.BinaryData})">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Authorization.Models.RoleDefinitionListResult" />. </summary>
            <param name="value"> Role definition list. </param>
            <param name="nextLink"> The URL to use for getting the next set of results. </param>
            <param name="serializedAdditionalRawData"> Keeps track of any properties unknown to the library. </param>
        </member>
        <member name="P:Azure.ResourceManager.Authorization.Models.RoleDefinitionListResult.Value">
            <summary> Role definition list. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Authorization.Models.RoleDefinitionListResult.NextLink">
            <summary> The URL to use for getting the next set of results. </summary>
        </member>
        <member name="T:Azure.ResourceManager.Authorization.Models.RoleDefinitionPermission">
            <summary> Role definition permissions. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.Models.RoleDefinitionPermission.#ctor">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Authorization.Models.RoleDefinitionPermission" />. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.Models.RoleDefinitionPermission.#ctor(System.Collections.Generic.IList{System.String},System.Collections.Generic.IList{System.String},System.Collections.Generic.IList{System.String},System.Collections.Generic.IList{System.String},System.Collections.Generic.IDictionary{System.String,System.BinaryData})">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Authorization.Models.RoleDefinitionPermission" />. </summary>
            <param name="actions"> Allowed actions. </param>
            <param name="notActions"> Denied actions. </param>
            <param name="dataActions"> Allowed Data actions. </param>
            <param name="notDataActions"> Denied Data actions. </param>
            <param name="serializedAdditionalRawData"> Keeps track of any properties unknown to the library. </param>
        </member>
        <member name="P:Azure.ResourceManager.Authorization.Models.RoleDefinitionPermission.Actions">
            <summary> Allowed actions. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Authorization.Models.RoleDefinitionPermission.NotActions">
            <summary> Denied actions. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Authorization.Models.RoleDefinitionPermission.DataActions">
            <summary> Allowed Data actions. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Authorization.Models.RoleDefinitionPermission.NotDataActions">
            <summary> Denied Data actions. </summary>
        </member>
        <member name="T:Azure.ResourceManager.Authorization.Models.RoleDefinitionPermissionListResult">
            <summary> Permissions information. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.Models.RoleDefinitionPermissionListResult.#ctor">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Authorization.Models.RoleDefinitionPermissionListResult" />. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.Models.RoleDefinitionPermissionListResult.#ctor(System.Collections.Generic.IReadOnlyList{Azure.ResourceManager.Authorization.Models.RoleDefinitionPermission},System.String,System.Collections.Generic.IDictionary{System.String,System.BinaryData})">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Authorization.Models.RoleDefinitionPermissionListResult" />. </summary>
            <param name="value"> An array of permissions. </param>
            <param name="nextLink"> The URL to use for getting the next set of results. </param>
            <param name="serializedAdditionalRawData"> Keeps track of any properties unknown to the library. </param>
        </member>
        <member name="P:Azure.ResourceManager.Authorization.Models.RoleDefinitionPermissionListResult.Value">
            <summary> An array of permissions. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Authorization.Models.RoleDefinitionPermissionListResult.NextLink">
            <summary> The URL to use for getting the next set of results. </summary>
        </member>
        <member name="T:Azure.ResourceManager.Authorization.Models.RoleEligibilityScheduleInstanceListResult">
            <summary> Role eligibility schedule instance list operation result. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.Models.RoleEligibilityScheduleInstanceListResult.#ctor">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Authorization.Models.RoleEligibilityScheduleInstanceListResult" />. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.Models.RoleEligibilityScheduleInstanceListResult.#ctor(System.Collections.Generic.IReadOnlyList{Azure.ResourceManager.Authorization.RoleEligibilityScheduleInstanceData},System.String,System.Collections.Generic.IDictionary{System.String,System.BinaryData})">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Authorization.Models.RoleEligibilityScheduleInstanceListResult" />. </summary>
            <param name="value"> Role eligibility schedule instance list. </param>
            <param name="nextLink"> The URL to use for getting the next set of results. </param>
            <param name="serializedAdditionalRawData"> Keeps track of any properties unknown to the library. </param>
        </member>
        <member name="P:Azure.ResourceManager.Authorization.Models.RoleEligibilityScheduleInstanceListResult.Value">
            <summary> Role eligibility schedule instance list. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Authorization.Models.RoleEligibilityScheduleInstanceListResult.NextLink">
            <summary> The URL to use for getting the next set of results. </summary>
        </member>
        <member name="T:Azure.ResourceManager.Authorization.Models.RoleEligibilityScheduleListResult">
            <summary> role eligibility schedule list operation result. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.Models.RoleEligibilityScheduleListResult.#ctor">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Authorization.Models.RoleEligibilityScheduleListResult" />. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.Models.RoleEligibilityScheduleListResult.#ctor(System.Collections.Generic.IReadOnlyList{Azure.ResourceManager.Authorization.RoleEligibilityScheduleData},System.String,System.Collections.Generic.IDictionary{System.String,System.BinaryData})">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Authorization.Models.RoleEligibilityScheduleListResult" />. </summary>
            <param name="value"> role eligibility schedule list. </param>
            <param name="nextLink"> The URL to use for getting the next set of results. </param>
            <param name="serializedAdditionalRawData"> Keeps track of any properties unknown to the library. </param>
        </member>
        <member name="P:Azure.ResourceManager.Authorization.Models.RoleEligibilityScheduleListResult.Value">
            <summary> role eligibility schedule list. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Authorization.Models.RoleEligibilityScheduleListResult.NextLink">
            <summary> The URL to use for getting the next set of results. </summary>
        </member>
        <member name="T:Azure.ResourceManager.Authorization.Models.RoleEligibilityScheduleRequestListResult">
            <summary> Role eligibility schedule request list operation result. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.Models.RoleEligibilityScheduleRequestListResult.#ctor">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Authorization.Models.RoleEligibilityScheduleRequestListResult" />. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.Models.RoleEligibilityScheduleRequestListResult.#ctor(System.Collections.Generic.IReadOnlyList{Azure.ResourceManager.Authorization.RoleEligibilityScheduleRequestData},System.String,System.Collections.Generic.IDictionary{System.String,System.BinaryData})">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Authorization.Models.RoleEligibilityScheduleRequestListResult" />. </summary>
            <param name="value"> Role eligibility schedule request list. </param>
            <param name="nextLink"> The URL to use for getting the next set of results. </param>
            <param name="serializedAdditionalRawData"> Keeps track of any properties unknown to the library. </param>
        </member>
        <member name="P:Azure.ResourceManager.Authorization.Models.RoleEligibilityScheduleRequestListResult.Value">
            <summary> Role eligibility schedule request list. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Authorization.Models.RoleEligibilityScheduleRequestListResult.NextLink">
            <summary> The URL to use for getting the next set of results. </summary>
        </member>
        <member name="T:Azure.ResourceManager.Authorization.Models.RoleEligibilityScheduleRequestPropertiesTicketInfo">
            <summary> Ticket Info of the role eligibility. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.Models.RoleEligibilityScheduleRequestPropertiesTicketInfo.#ctor">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Authorization.Models.RoleEligibilityScheduleRequestPropertiesTicketInfo" />. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.Models.RoleEligibilityScheduleRequestPropertiesTicketInfo.#ctor(System.String,System.String,System.Collections.Generic.IDictionary{System.String,System.BinaryData})">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Authorization.Models.RoleEligibilityScheduleRequestPropertiesTicketInfo" />. </summary>
            <param name="ticketNumber"> Ticket number for the role eligibility. </param>
            <param name="ticketSystem"> Ticket system name for the role eligibility. </param>
            <param name="serializedAdditionalRawData"> Keeps track of any properties unknown to the library. </param>
        </member>
        <member name="P:Azure.ResourceManager.Authorization.Models.RoleEligibilityScheduleRequestPropertiesTicketInfo.TicketNumber">
            <summary> Ticket number for the role eligibility. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Authorization.Models.RoleEligibilityScheduleRequestPropertiesTicketInfo.TicketSystem">
            <summary> Ticket system name for the role eligibility. </summary>
        </member>
        <member name="T:Azure.ResourceManager.Authorization.Models.RoleManagementApprovalMode">
            <summary> The type of rule. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.Models.RoleManagementApprovalMode.#ctor(System.String)">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Authorization.Models.RoleManagementApprovalMode" />. </summary>
            <exception cref="T:System.ArgumentNullException"> <paramref name="value" /> is null. </exception>
        </member>
        <member name="P:Azure.ResourceManager.Authorization.Models.RoleManagementApprovalMode.SingleStage">
            <summary> SingleStage. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Authorization.Models.RoleManagementApprovalMode.Serial">
            <summary> Serial. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Authorization.Models.RoleManagementApprovalMode.Parallel">
            <summary> Parallel. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Authorization.Models.RoleManagementApprovalMode.NoApproval">
            <summary> NoApproval. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.Models.RoleManagementApprovalMode.op_Equality(Azure.ResourceManager.Authorization.Models.RoleManagementApprovalMode,Azure.ResourceManager.Authorization.Models.RoleManagementApprovalMode)">
            <summary> Determines if two <see cref="T:Azure.ResourceManager.Authorization.Models.RoleManagementApprovalMode" /> values are the same. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.Models.RoleManagementApprovalMode.op_Inequality(Azure.ResourceManager.Authorization.Models.RoleManagementApprovalMode,Azure.ResourceManager.Authorization.Models.RoleManagementApprovalMode)">
            <summary> Determines if two <see cref="T:Azure.ResourceManager.Authorization.Models.RoleManagementApprovalMode" /> values are not the same. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.Models.RoleManagementApprovalMode.op_Implicit(System.String)~Azure.ResourceManager.Authorization.Models.RoleManagementApprovalMode">
            <summary> Converts a string to a <see cref="T:Azure.ResourceManager.Authorization.Models.RoleManagementApprovalMode" />. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.Models.RoleManagementApprovalMode.Equals(System.Object)">
            <summary>Indicates whether this instance and a specified object are equal.</summary><param name="obj">The object to compare with the current instance.</param><returns><see langword="true" /> if <paramref name="obj" /> and this instance are the same type and represent the same value; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.Models.RoleManagementApprovalMode.Equals(Azure.ResourceManager.Authorization.Models.RoleManagementApprovalMode)">
            <summary>Indicates whether the current object is equal to another object of the same type.</summary><param name="other">An object to compare with this object.</param><returns><see langword="true" /> if the current object is equal to the <paramref name="other" /> parameter; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.Models.RoleManagementApprovalMode.GetHashCode">
            <summary>Returns the hash code for this instance.</summary><returns>A 32-bit signed integer that is the hash code for this instance.</returns>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.Models.RoleManagementApprovalMode.ToString">
            <summary>Returns the fully qualified type name of this instance.</summary><returns>The fully qualified type name.</returns>
        </member>
        <member name="T:Azure.ResourceManager.Authorization.Models.RoleManagementApprovalSettings">
            <summary> The approval settings. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.Models.RoleManagementApprovalSettings.#ctor">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Authorization.Models.RoleManagementApprovalSettings" />. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.Models.RoleManagementApprovalSettings.#ctor(System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{Azure.ResourceManager.Authorization.Models.RoleManagementApprovalMode},System.Collections.Generic.IList{Azure.ResourceManager.Authorization.Models.RoleManagementApprovalStage},System.Collections.Generic.IDictionary{System.String,System.BinaryData})">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Authorization.Models.RoleManagementApprovalSettings" />. </summary>
            <param name="isApprovalRequired"> Determines whether approval is required or not. </param>
            <param name="isApprovalRequiredForExtension"> Determines whether approval is required for assignment extension. </param>
            <param name="isRequestorJustificationRequired"> Determine whether requestor justification is required. </param>
            <param name="approvalMode"> The type of rule. </param>
            <param name="approvalStages"> The approval stages of the request. </param>
            <param name="serializedAdditionalRawData"> Keeps track of any properties unknown to the library. </param>
        </member>
        <member name="P:Azure.ResourceManager.Authorization.Models.RoleManagementApprovalSettings.IsApprovalRequired">
            <summary> Determines whether approval is required or not. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Authorization.Models.RoleManagementApprovalSettings.IsApprovalRequiredForExtension">
            <summary> Determines whether approval is required for assignment extension. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Authorization.Models.RoleManagementApprovalSettings.IsRequestorJustificationRequired">
            <summary> Determine whether requestor justification is required. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Authorization.Models.RoleManagementApprovalSettings.ApprovalMode">
            <summary> The type of rule. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Authorization.Models.RoleManagementApprovalSettings.ApprovalStages">
            <summary> The approval stages of the request. </summary>
        </member>
        <member name="T:Azure.ResourceManager.Authorization.Models.RoleManagementApprovalStage">
            <summary> The approval stage. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.Models.RoleManagementApprovalStage.#ctor">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Authorization.Models.RoleManagementApprovalStage" />. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.Models.RoleManagementApprovalStage.#ctor(System.Nullable{System.Int32},System.Nullable{System.Boolean},System.Nullable{System.Int32},System.Collections.Generic.IList{Azure.ResourceManager.Authorization.Models.RoleManagementUserInfo},System.Nullable{System.Boolean},System.Collections.Generic.IList{Azure.ResourceManager.Authorization.Models.RoleManagementUserInfo},System.Collections.Generic.IDictionary{System.String,System.BinaryData})">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Authorization.Models.RoleManagementApprovalStage" />. </summary>
            <param name="approvalStageTimeOutInDays"> The time in days when approval request would be timed out. </param>
            <param name="isApproverJustificationRequired"> Determines whether approver need to provide justification for his decision. </param>
            <param name="escalationTimeInMinutes"> The time in minutes when the approval request would be escalated if the primary approver does not approve. </param>
            <param name="primaryApprovers"> The primary approver of the request. </param>
            <param name="isEscalationEnabled"> The value determine whether escalation feature is enabled. </param>
            <param name="escalationApprovers"> The escalation approver of the request. </param>
            <param name="serializedAdditionalRawData"> Keeps track of any properties unknown to the library. </param>
        </member>
        <member name="P:Azure.ResourceManager.Authorization.Models.RoleManagementApprovalStage.ApprovalStageTimeOutInDays">
            <summary> The time in days when approval request would be timed out. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Authorization.Models.RoleManagementApprovalStage.IsApproverJustificationRequired">
            <summary> Determines whether approver need to provide justification for his decision. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Authorization.Models.RoleManagementApprovalStage.EscalationTimeInMinutes">
            <summary> The time in minutes when the approval request would be escalated if the primary approver does not approve. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Authorization.Models.RoleManagementApprovalStage.PrimaryApprovers">
            <summary> The primary approver of the request. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Authorization.Models.RoleManagementApprovalStage.IsEscalationEnabled">
            <summary> The value determine whether escalation feature is enabled. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Authorization.Models.RoleManagementApprovalStage.EscalationApprovers">
            <summary> The escalation approver of the request. </summary>
        </member>
        <member name="T:Azure.ResourceManager.Authorization.Models.RoleManagementAssignmentLevel">
            <summary> The assignment level to which rule is applied. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.Models.RoleManagementAssignmentLevel.#ctor(System.String)">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Authorization.Models.RoleManagementAssignmentLevel" />. </summary>
            <exception cref="T:System.ArgumentNullException"> <paramref name="value" /> is null. </exception>
        </member>
        <member name="P:Azure.ResourceManager.Authorization.Models.RoleManagementAssignmentLevel.Assignment">
            <summary> Assignment. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Authorization.Models.RoleManagementAssignmentLevel.Eligibility">
            <summary> Eligibility. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.Models.RoleManagementAssignmentLevel.op_Equality(Azure.ResourceManager.Authorization.Models.RoleManagementAssignmentLevel,Azure.ResourceManager.Authorization.Models.RoleManagementAssignmentLevel)">
            <summary> Determines if two <see cref="T:Azure.ResourceManager.Authorization.Models.RoleManagementAssignmentLevel" /> values are the same. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.Models.RoleManagementAssignmentLevel.op_Inequality(Azure.ResourceManager.Authorization.Models.RoleManagementAssignmentLevel,Azure.ResourceManager.Authorization.Models.RoleManagementAssignmentLevel)">
            <summary> Determines if two <see cref="T:Azure.ResourceManager.Authorization.Models.RoleManagementAssignmentLevel" /> values are not the same. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.Models.RoleManagementAssignmentLevel.op_Implicit(System.String)~Azure.ResourceManager.Authorization.Models.RoleManagementAssignmentLevel">
            <summary> Converts a string to a <see cref="T:Azure.ResourceManager.Authorization.Models.RoleManagementAssignmentLevel" />. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.Models.RoleManagementAssignmentLevel.Equals(System.Object)">
            <summary>Indicates whether this instance and a specified object are equal.</summary><param name="obj">The object to compare with the current instance.</param><returns><see langword="true" /> if <paramref name="obj" /> and this instance are the same type and represent the same value; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.Models.RoleManagementAssignmentLevel.Equals(Azure.ResourceManager.Authorization.Models.RoleManagementAssignmentLevel)">
            <summary>Indicates whether the current object is equal to another object of the same type.</summary><param name="other">An object to compare with this object.</param><returns><see langword="true" /> if the current object is equal to the <paramref name="other" /> parameter; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.Models.RoleManagementAssignmentLevel.GetHashCode">
            <summary>Returns the hash code for this instance.</summary><returns>A 32-bit signed integer that is the hash code for this instance.</returns>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.Models.RoleManagementAssignmentLevel.ToString">
            <summary>Returns the fully qualified type name of this instance.</summary><returns>The fully qualified type name.</returns>
        </member>
        <member name="T:Azure.ResourceManager.Authorization.Models.RoleManagementExpandedProperties">
            <summary> The RoleManagementExpandedProperties. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.Models.RoleManagementExpandedProperties.#ctor">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Authorization.Models.RoleManagementExpandedProperties" />. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.Models.RoleManagementExpandedProperties.#ctor(System.Nullable{System.Guid},System.String,System.String,System.Nullable{Azure.ResourceManager.Authorization.Models.RoleManagementPrincipalType},Azure.Core.ResourceIdentifier,System.String,System.Nullable{Azure.ResourceManager.Authorization.Models.AuthorizationRoleType},Azure.Core.ResourceIdentifier,System.String,System.Nullable{Azure.ResourceManager.Authorization.Models.RoleManagementScopeType},System.Collections.Generic.IDictionary{System.String,System.BinaryData})">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Authorization.Models.RoleManagementExpandedProperties" />. </summary>
            <param name="principalId"> Id of the principal. </param>
            <param name="principalDisplayName"> Display name of the principal. </param>
            <param name="email"> Email id of the principal. </param>
            <param name="principalType"> Type of the principal. </param>
            <param name="roleDefinitionId"> Id of the role definition. </param>
            <param name="roleDefinitionDisplayName"> Display name of the role definition. </param>
            <param name="roleType"> The role type. </param>
            <param name="scopeId"> Scope id of the resource. </param>
            <param name="scopeDisplayName"> Display name of the resource. </param>
            <param name="scopeType"> Type of the scope. </param>
            <param name="serializedAdditionalRawData"> Keeps track of any properties unknown to the library. </param>
        </member>
        <member name="P:Azure.ResourceManager.Authorization.Models.RoleManagementExpandedProperties.PrincipalId">
            <summary> Id of the principal. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Authorization.Models.RoleManagementExpandedProperties.PrincipalDisplayName">
            <summary> Display name of the principal. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Authorization.Models.RoleManagementExpandedProperties.Email">
            <summary> Email id of the principal. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Authorization.Models.RoleManagementExpandedProperties.PrincipalType">
            <summary> Type of the principal. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Authorization.Models.RoleManagementExpandedProperties.RoleDefinitionId">
            <summary> Id of the role definition. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Authorization.Models.RoleManagementExpandedProperties.RoleDefinitionDisplayName">
            <summary> Display name of the role definition. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Authorization.Models.RoleManagementExpandedProperties.RoleType">
            <summary> The role type. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Authorization.Models.RoleManagementExpandedProperties.ScopeId">
            <summary> Scope id of the resource. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Authorization.Models.RoleManagementExpandedProperties.ScopeDisplayName">
            <summary> Display name of the resource. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Authorization.Models.RoleManagementExpandedProperties.ScopeType">
            <summary> Type of the scope. </summary>
        </member>
        <member name="T:Azure.ResourceManager.Authorization.Models.RoleManagementPolicyApprovalRule">
            <summary> The role management policy approval rule. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.Models.RoleManagementPolicyApprovalRule.#ctor">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Authorization.Models.RoleManagementPolicyApprovalRule" />. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.Models.RoleManagementPolicyApprovalRule.#ctor(System.String,Azure.ResourceManager.Authorization.Models.RoleManagementPolicyRuleType,Azure.ResourceManager.Authorization.Models.RoleManagementPolicyRuleTarget,System.Collections.Generic.IDictionary{System.String,System.BinaryData},Azure.ResourceManager.Authorization.Models.RoleManagementApprovalSettings)">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Authorization.Models.RoleManagementPolicyApprovalRule" />. </summary>
            <param name="id"> The id of the rule. </param>
            <param name="ruleType"> The type of rule. </param>
            <param name="target"> The target of the current rule. </param>
            <param name="serializedAdditionalRawData"> Keeps track of any properties unknown to the library. </param>
            <param name="settings"> The approval setting. </param>
        </member>
        <member name="P:Azure.ResourceManager.Authorization.Models.RoleManagementPolicyApprovalRule.Settings">
            <summary> The approval setting. </summary>
        </member>
        <member name="T:Azure.ResourceManager.Authorization.Models.RoleManagementPolicyAssignmentListResult">
            <summary> Role management policy assignment list operation result. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.Models.RoleManagementPolicyAssignmentListResult.#ctor">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Authorization.Models.RoleManagementPolicyAssignmentListResult" />. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.Models.RoleManagementPolicyAssignmentListResult.#ctor(System.Collections.Generic.IReadOnlyList{Azure.ResourceManager.Authorization.RoleManagementPolicyAssignmentData},System.String,System.Collections.Generic.IDictionary{System.String,System.BinaryData})">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Authorization.Models.RoleManagementPolicyAssignmentListResult" />. </summary>
            <param name="value"> Role management policy assignment list. </param>
            <param name="nextLink"> The URL to use for getting the next set of results. </param>
            <param name="serializedAdditionalRawData"> Keeps track of any properties unknown to the library. </param>
        </member>
        <member name="P:Azure.ResourceManager.Authorization.Models.RoleManagementPolicyAssignmentListResult.Value">
            <summary> Role management policy assignment list. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Authorization.Models.RoleManagementPolicyAssignmentListResult.NextLink">
            <summary> The URL to use for getting the next set of results. </summary>
        </member>
        <member name="T:Azure.ResourceManager.Authorization.Models.RoleManagementPolicyAuthenticationContextRule">
            <summary> The role management policy authentication context rule. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.Models.RoleManagementPolicyAuthenticationContextRule.#ctor">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Authorization.Models.RoleManagementPolicyAuthenticationContextRule" />. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.Models.RoleManagementPolicyAuthenticationContextRule.#ctor(System.String,Azure.ResourceManager.Authorization.Models.RoleManagementPolicyRuleType,Azure.ResourceManager.Authorization.Models.RoleManagementPolicyRuleTarget,System.Collections.Generic.IDictionary{System.String,System.BinaryData},System.Nullable{System.Boolean},System.String)">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Authorization.Models.RoleManagementPolicyAuthenticationContextRule" />. </summary>
            <param name="id"> The id of the rule. </param>
            <param name="ruleType"> The type of rule. </param>
            <param name="target"> The target of the current rule. </param>
            <param name="serializedAdditionalRawData"> Keeps track of any properties unknown to the library. </param>
            <param name="isEnabled"> The value indicating if rule is enabled. </param>
            <param name="claimValue"> The claim value. </param>
        </member>
        <member name="P:Azure.ResourceManager.Authorization.Models.RoleManagementPolicyAuthenticationContextRule.IsEnabled">
            <summary> The value indicating if rule is enabled. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Authorization.Models.RoleManagementPolicyAuthenticationContextRule.ClaimValue">
            <summary> The claim value. </summary>
        </member>
        <member name="T:Azure.ResourceManager.Authorization.Models.RoleManagementPolicyEnablementRule">
            <summary> The role management policy enablement rule. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.Models.RoleManagementPolicyEnablementRule.#ctor">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Authorization.Models.RoleManagementPolicyEnablementRule" />. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.Models.RoleManagementPolicyEnablementRule.#ctor(System.String,Azure.ResourceManager.Authorization.Models.RoleManagementPolicyRuleType,Azure.ResourceManager.Authorization.Models.RoleManagementPolicyRuleTarget,System.Collections.Generic.IDictionary{System.String,System.BinaryData},System.Collections.Generic.IList{Azure.ResourceManager.Authorization.Models.RoleAssignmentEnablementRuleType})">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Authorization.Models.RoleManagementPolicyEnablementRule" />. </summary>
            <param name="id"> The id of the rule. </param>
            <param name="ruleType"> The type of rule. </param>
            <param name="target"> The target of the current rule. </param>
            <param name="serializedAdditionalRawData"> Keeps track of any properties unknown to the library. </param>
            <param name="enablementRules"> The list of enabled rules. </param>
        </member>
        <member name="P:Azure.ResourceManager.Authorization.Models.RoleManagementPolicyEnablementRule.EnablementRules">
            <summary> The list of enabled rules. </summary>
        </member>
        <member name="T:Azure.ResourceManager.Authorization.Models.RoleManagementPolicyExpirationRule">
            <summary> The role management policy expiration rule. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.Models.RoleManagementPolicyExpirationRule.#ctor">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Authorization.Models.RoleManagementPolicyExpirationRule" />. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.Models.RoleManagementPolicyExpirationRule.#ctor(System.String,Azure.ResourceManager.Authorization.Models.RoleManagementPolicyRuleType,Azure.ResourceManager.Authorization.Models.RoleManagementPolicyRuleTarget,System.Collections.Generic.IDictionary{System.String,System.BinaryData},System.Nullable{System.Boolean},System.Nullable{System.TimeSpan})">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Authorization.Models.RoleManagementPolicyExpirationRule" />. </summary>
            <param name="id"> The id of the rule. </param>
            <param name="ruleType"> The type of rule. </param>
            <param name="target"> The target of the current rule. </param>
            <param name="serializedAdditionalRawData"> Keeps track of any properties unknown to the library. </param>
            <param name="isExpirationRequired"> The value indicating whether expiration is required. </param>
            <param name="maximumDuration"> The maximum duration of expiration in timespan. </param>
        </member>
        <member name="P:Azure.ResourceManager.Authorization.Models.RoleManagementPolicyExpirationRule.IsExpirationRequired">
            <summary> The value indicating whether expiration is required. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Authorization.Models.RoleManagementPolicyExpirationRule.MaximumDuration">
            <summary> The maximum duration of expiration in timespan. </summary>
        </member>
        <member name="T:Azure.ResourceManager.Authorization.Models.RoleManagementPolicyListResult">
            <summary> Role management policy list operation result. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.Models.RoleManagementPolicyListResult.#ctor">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Authorization.Models.RoleManagementPolicyListResult" />. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.Models.RoleManagementPolicyListResult.#ctor(System.Collections.Generic.IReadOnlyList{Azure.ResourceManager.Authorization.RoleManagementPolicyData},System.String,System.Collections.Generic.IDictionary{System.String,System.BinaryData})">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Authorization.Models.RoleManagementPolicyListResult" />. </summary>
            <param name="value"> Role management policy list. </param>
            <param name="nextLink"> The URL to use for getting the next set of results. </param>
            <param name="serializedAdditionalRawData"> Keeps track of any properties unknown to the library. </param>
        </member>
        <member name="P:Azure.ResourceManager.Authorization.Models.RoleManagementPolicyListResult.Value">
            <summary> Role management policy list. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Authorization.Models.RoleManagementPolicyListResult.NextLink">
            <summary> The URL to use for getting the next set of results. </summary>
        </member>
        <member name="T:Azure.ResourceManager.Authorization.Models.RoleManagementPolicyNotificationLevel">
            <summary> The notification level. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.Models.RoleManagementPolicyNotificationLevel.#ctor(System.String)">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Authorization.Models.RoleManagementPolicyNotificationLevel" />. </summary>
            <exception cref="T:System.ArgumentNullException"> <paramref name="value" /> is null. </exception>
        </member>
        <member name="P:Azure.ResourceManager.Authorization.Models.RoleManagementPolicyNotificationLevel.None">
            <summary> None. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Authorization.Models.RoleManagementPolicyNotificationLevel.Critical">
            <summary> Critical. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Authorization.Models.RoleManagementPolicyNotificationLevel.All">
            <summary> All. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.Models.RoleManagementPolicyNotificationLevel.op_Equality(Azure.ResourceManager.Authorization.Models.RoleManagementPolicyNotificationLevel,Azure.ResourceManager.Authorization.Models.RoleManagementPolicyNotificationLevel)">
            <summary> Determines if two <see cref="T:Azure.ResourceManager.Authorization.Models.RoleManagementPolicyNotificationLevel" /> values are the same. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.Models.RoleManagementPolicyNotificationLevel.op_Inequality(Azure.ResourceManager.Authorization.Models.RoleManagementPolicyNotificationLevel,Azure.ResourceManager.Authorization.Models.RoleManagementPolicyNotificationLevel)">
            <summary> Determines if two <see cref="T:Azure.ResourceManager.Authorization.Models.RoleManagementPolicyNotificationLevel" /> values are not the same. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.Models.RoleManagementPolicyNotificationLevel.op_Implicit(System.String)~Azure.ResourceManager.Authorization.Models.RoleManagementPolicyNotificationLevel">
            <summary> Converts a string to a <see cref="T:Azure.ResourceManager.Authorization.Models.RoleManagementPolicyNotificationLevel" />. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.Models.RoleManagementPolicyNotificationLevel.Equals(System.Object)">
            <summary>Indicates whether this instance and a specified object are equal.</summary><param name="obj">The object to compare with the current instance.</param><returns><see langword="true" /> if <paramref name="obj" /> and this instance are the same type and represent the same value; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.Models.RoleManagementPolicyNotificationLevel.Equals(Azure.ResourceManager.Authorization.Models.RoleManagementPolicyNotificationLevel)">
            <summary>Indicates whether the current object is equal to another object of the same type.</summary><param name="other">An object to compare with this object.</param><returns><see langword="true" /> if the current object is equal to the <paramref name="other" /> parameter; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.Models.RoleManagementPolicyNotificationLevel.GetHashCode">
            <summary>Returns the hash code for this instance.</summary><returns>A 32-bit signed integer that is the hash code for this instance.</returns>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.Models.RoleManagementPolicyNotificationLevel.ToString">
            <summary>Returns the fully qualified type name of this instance.</summary><returns>The fully qualified type name.</returns>
        </member>
        <member name="T:Azure.ResourceManager.Authorization.Models.RoleManagementPolicyNotificationRule">
            <summary> The role management policy notification rule. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.Models.RoleManagementPolicyNotificationRule.#ctor">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Authorization.Models.RoleManagementPolicyNotificationRule" />. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.Models.RoleManagementPolicyNotificationRule.#ctor(System.String,Azure.ResourceManager.Authorization.Models.RoleManagementPolicyRuleType,Azure.ResourceManager.Authorization.Models.RoleManagementPolicyRuleTarget,System.Collections.Generic.IDictionary{System.String,System.BinaryData},System.Nullable{Azure.ResourceManager.Authorization.Models.NotificationDeliveryType},System.Nullable{Azure.ResourceManager.Authorization.Models.RoleManagementPolicyNotificationLevel},System.Nullable{Azure.ResourceManager.Authorization.Models.RoleManagementPolicyRecipientType},System.Collections.Generic.IList{System.String},System.Nullable{System.Boolean})">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Authorization.Models.RoleManagementPolicyNotificationRule" />. </summary>
            <param name="id"> The id of the rule. </param>
            <param name="ruleType"> The type of rule. </param>
            <param name="target"> The target of the current rule. </param>
            <param name="serializedAdditionalRawData"> Keeps track of any properties unknown to the library. </param>
            <param name="notificationDeliveryType"> The type of notification. </param>
            <param name="notificationLevel"> The notification level. </param>
            <param name="recipientType"> The recipient type. </param>
            <param name="notificationRecipients"> The list of notification recipients. </param>
            <param name="areDefaultRecipientsEnabled"> Determines if the notification will be sent to the recipient type specified in the policy rule. </param>
        </member>
        <member name="P:Azure.ResourceManager.Authorization.Models.RoleManagementPolicyNotificationRule.NotificationDeliveryType">
            <summary> The type of notification. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Authorization.Models.RoleManagementPolicyNotificationRule.NotificationLevel">
            <summary> The notification level. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Authorization.Models.RoleManagementPolicyNotificationRule.RecipientType">
            <summary> The recipient type. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Authorization.Models.RoleManagementPolicyNotificationRule.NotificationRecipients">
            <summary> The list of notification recipients. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Authorization.Models.RoleManagementPolicyNotificationRule.AreDefaultRecipientsEnabled">
            <summary> Determines if the notification will be sent to the recipient type specified in the policy rule. </summary>
        </member>
        <member name="T:Azure.ResourceManager.Authorization.Models.RoleManagementPolicyProperties">
            <summary> Expanded info of resource scope. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.Models.RoleManagementPolicyProperties.#ctor">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Authorization.Models.RoleManagementPolicyProperties" />. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.Models.RoleManagementPolicyProperties.#ctor(Azure.Core.ResourceIdentifier,System.String,System.Nullable{Azure.ResourceManager.Authorization.Models.RoleManagementScopeType},System.Collections.Generic.IDictionary{System.String,System.BinaryData})">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Authorization.Models.RoleManagementPolicyProperties" />. </summary>
            <param name="scopeId"> Scope id of the resource. </param>
            <param name="scopeDisplayName"> Display name of the resource. </param>
            <param name="scopeType"> Type of the scope. </param>
            <param name="serializedAdditionalRawData"> Keeps track of any properties unknown to the library. </param>
        </member>
        <member name="P:Azure.ResourceManager.Authorization.Models.RoleManagementPolicyProperties.ScopeId">
            <summary> Scope id of the resource. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Authorization.Models.RoleManagementPolicyProperties.ScopeDisplayName">
            <summary> Display name of the resource. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Authorization.Models.RoleManagementPolicyProperties.ScopeType">
            <summary> Type of the scope. </summary>
        </member>
        <member name="T:Azure.ResourceManager.Authorization.Models.RoleManagementPolicyRecipientType">
            <summary> The recipient type. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.Models.RoleManagementPolicyRecipientType.#ctor(System.String)">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Authorization.Models.RoleManagementPolicyRecipientType" />. </summary>
            <exception cref="T:System.ArgumentNullException"> <paramref name="value" /> is null. </exception>
        </member>
        <member name="P:Azure.ResourceManager.Authorization.Models.RoleManagementPolicyRecipientType.Requestor">
            <summary> Requestor. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Authorization.Models.RoleManagementPolicyRecipientType.Approver">
            <summary> Approver. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Authorization.Models.RoleManagementPolicyRecipientType.Admin">
            <summary> Admin. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.Models.RoleManagementPolicyRecipientType.op_Equality(Azure.ResourceManager.Authorization.Models.RoleManagementPolicyRecipientType,Azure.ResourceManager.Authorization.Models.RoleManagementPolicyRecipientType)">
            <summary> Determines if two <see cref="T:Azure.ResourceManager.Authorization.Models.RoleManagementPolicyRecipientType" /> values are the same. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.Models.RoleManagementPolicyRecipientType.op_Inequality(Azure.ResourceManager.Authorization.Models.RoleManagementPolicyRecipientType,Azure.ResourceManager.Authorization.Models.RoleManagementPolicyRecipientType)">
            <summary> Determines if two <see cref="T:Azure.ResourceManager.Authorization.Models.RoleManagementPolicyRecipientType" /> values are not the same. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.Models.RoleManagementPolicyRecipientType.op_Implicit(System.String)~Azure.ResourceManager.Authorization.Models.RoleManagementPolicyRecipientType">
            <summary> Converts a string to a <see cref="T:Azure.ResourceManager.Authorization.Models.RoleManagementPolicyRecipientType" />. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.Models.RoleManagementPolicyRecipientType.Equals(System.Object)">
            <summary>Indicates whether this instance and a specified object are equal.</summary><param name="obj">The object to compare with the current instance.</param><returns><see langword="true" /> if <paramref name="obj" /> and this instance are the same type and represent the same value; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.Models.RoleManagementPolicyRecipientType.Equals(Azure.ResourceManager.Authorization.Models.RoleManagementPolicyRecipientType)">
            <summary>Indicates whether the current object is equal to another object of the same type.</summary><param name="other">An object to compare with this object.</param><returns><see langword="true" /> if the current object is equal to the <paramref name="other" /> parameter; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.Models.RoleManagementPolicyRecipientType.GetHashCode">
            <summary>Returns the hash code for this instance.</summary><returns>A 32-bit signed integer that is the hash code for this instance.</returns>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.Models.RoleManagementPolicyRecipientType.ToString">
            <summary>Returns the fully qualified type name of this instance.</summary><returns>The fully qualified type name.</returns>
        </member>
        <member name="T:Azure.ResourceManager.Authorization.Models.RoleManagementPolicyRule">
            <summary>
            The role management policy rule.
            Please note <see cref="T:Azure.ResourceManager.Authorization.Models.RoleManagementPolicyRule" /> is the base class. According to the scenario, a derived class of the base class might need to be assigned here, or this property needs to be casted to one of the possible derived classes.
            The available derived classes include <see cref="T:Azure.ResourceManager.Authorization.Models.RoleManagementPolicyApprovalRule" />, <see cref="T:Azure.ResourceManager.Authorization.Models.RoleManagementPolicyAuthenticationContextRule" />, <see cref="T:Azure.ResourceManager.Authorization.Models.RoleManagementPolicyEnablementRule" />, <see cref="T:Azure.ResourceManager.Authorization.Models.RoleManagementPolicyExpirationRule" /> and <see cref="T:Azure.ResourceManager.Authorization.Models.RoleManagementPolicyNotificationRule" />.
            </summary>
        </member>
        <member name="F:Azure.ResourceManager.Authorization.Models.RoleManagementPolicyRule._serializedAdditionalRawData">
            <summary>
            Keeps track of any properties unknown to the library.
            <para>
            To assign an object to the value of this property use <see cref="M:System.BinaryData.FromObjectAsJson``1(``0,System.Text.Json.JsonSerializerOptions)" />.
            </para>
            <para>
            To assign an already formatted json string to this property use <see cref="M:System.BinaryData.FromString(System.String)" />.
            </para>
            <para>
            Examples:
            <list type="bullet">
            <item>
            <term>BinaryData.FromObjectAsJson("foo")</term>
            <description>Creates a payload of "foo".</description>
            </item>
            <item>
            <term>BinaryData.FromString("\"foo\"")</term>
            <description>Creates a payload of "foo".</description>
            </item>
            <item>
            <term>BinaryData.FromObjectAsJson(new { key = "value" })</term>
            <description>Creates a payload of { "key": "value" }.</description>
            </item>
            <item>
            <term>BinaryData.FromString("{\"key\": \"value\"}")</term>
            <description>Creates a payload of { "key": "value" }.</description>
            </item>
            </list>
            </para>
            </summary>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.Models.RoleManagementPolicyRule.#ctor">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Authorization.Models.RoleManagementPolicyRule" />. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.Models.RoleManagementPolicyRule.#ctor(System.String,Azure.ResourceManager.Authorization.Models.RoleManagementPolicyRuleType,Azure.ResourceManager.Authorization.Models.RoleManagementPolicyRuleTarget,System.Collections.Generic.IDictionary{System.String,System.BinaryData})">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Authorization.Models.RoleManagementPolicyRule" />. </summary>
            <param name="id"> The id of the rule. </param>
            <param name="ruleType"> The type of rule. </param>
            <param name="target"> The target of the current rule. </param>
            <param name="serializedAdditionalRawData"> Keeps track of any properties unknown to the library. </param>
        </member>
        <member name="P:Azure.ResourceManager.Authorization.Models.RoleManagementPolicyRule.Id">
            <summary> The id of the rule. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Authorization.Models.RoleManagementPolicyRule.RuleType">
            <summary> The type of rule. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Authorization.Models.RoleManagementPolicyRule.Target">
            <summary> The target of the current rule. </summary>
        </member>
        <member name="T:Azure.ResourceManager.Authorization.Models.RoleManagementPolicyRuleTarget">
            <summary> The role management policy rule target. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.Models.RoleManagementPolicyRuleTarget.#ctor">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Authorization.Models.RoleManagementPolicyRuleTarget" />. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.Models.RoleManagementPolicyRuleTarget.#ctor(System.String,System.Collections.Generic.IList{System.String},System.Nullable{Azure.ResourceManager.Authorization.Models.RoleManagementAssignmentLevel},System.Collections.Generic.IList{System.String},System.Collections.Generic.IList{System.String},System.Collections.Generic.IList{System.String},System.Collections.Generic.IDictionary{System.String,System.BinaryData})">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Authorization.Models.RoleManagementPolicyRuleTarget" />. </summary>
            <param name="caller"> The caller of the setting. </param>
            <param name="operations"> The type of operation. </param>
            <param name="level"> The assignment level to which rule is applied. </param>
            <param name="targetObjects"> The list of target objects. </param>
            <param name="inheritableSettings"> The list of inheritable settings. </param>
            <param name="enforcedSettings"> The list of enforced settings. </param>
            <param name="serializedAdditionalRawData"> Keeps track of any properties unknown to the library. </param>
        </member>
        <member name="P:Azure.ResourceManager.Authorization.Models.RoleManagementPolicyRuleTarget.Caller">
            <summary> The caller of the setting. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Authorization.Models.RoleManagementPolicyRuleTarget.Operations">
            <summary> The type of operation. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Authorization.Models.RoleManagementPolicyRuleTarget.Level">
            <summary> The assignment level to which rule is applied. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Authorization.Models.RoleManagementPolicyRuleTarget.TargetObjects">
            <summary> The list of target objects. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Authorization.Models.RoleManagementPolicyRuleTarget.InheritableSettings">
            <summary> The list of inheritable settings. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Authorization.Models.RoleManagementPolicyRuleTarget.EnforcedSettings">
            <summary> The list of enforced settings. </summary>
        </member>
        <member name="T:Azure.ResourceManager.Authorization.Models.RoleManagementPolicyRuleType">
            <summary> The type of rule. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.Models.RoleManagementPolicyRuleType.#ctor(System.String)">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Authorization.Models.RoleManagementPolicyRuleType" />. </summary>
            <exception cref="T:System.ArgumentNullException"> <paramref name="value" /> is null. </exception>
        </member>
        <member name="P:Azure.ResourceManager.Authorization.Models.RoleManagementPolicyRuleType.RoleManagementPolicyApprovalRule">
            <summary> RoleManagementPolicyApprovalRule. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Authorization.Models.RoleManagementPolicyRuleType.RoleManagementPolicyAuthenticationContextRule">
            <summary> RoleManagementPolicyAuthenticationContextRule. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Authorization.Models.RoleManagementPolicyRuleType.RoleManagementPolicyEnablementRule">
            <summary> RoleManagementPolicyEnablementRule. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Authorization.Models.RoleManagementPolicyRuleType.RoleManagementPolicyExpirationRule">
            <summary> RoleManagementPolicyExpirationRule. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Authorization.Models.RoleManagementPolicyRuleType.RoleManagementPolicyNotificationRule">
            <summary> RoleManagementPolicyNotificationRule. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.Models.RoleManagementPolicyRuleType.op_Equality(Azure.ResourceManager.Authorization.Models.RoleManagementPolicyRuleType,Azure.ResourceManager.Authorization.Models.RoleManagementPolicyRuleType)">
            <summary> Determines if two <see cref="T:Azure.ResourceManager.Authorization.Models.RoleManagementPolicyRuleType" /> values are the same. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.Models.RoleManagementPolicyRuleType.op_Inequality(Azure.ResourceManager.Authorization.Models.RoleManagementPolicyRuleType,Azure.ResourceManager.Authorization.Models.RoleManagementPolicyRuleType)">
            <summary> Determines if two <see cref="T:Azure.ResourceManager.Authorization.Models.RoleManagementPolicyRuleType" /> values are not the same. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.Models.RoleManagementPolicyRuleType.op_Implicit(System.String)~Azure.ResourceManager.Authorization.Models.RoleManagementPolicyRuleType">
            <summary> Converts a string to a <see cref="T:Azure.ResourceManager.Authorization.Models.RoleManagementPolicyRuleType" />. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.Models.RoleManagementPolicyRuleType.Equals(System.Object)">
            <summary>Indicates whether this instance and a specified object are equal.</summary><param name="obj">The object to compare with the current instance.</param><returns><see langword="true" /> if <paramref name="obj" /> and this instance are the same type and represent the same value; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.Models.RoleManagementPolicyRuleType.Equals(Azure.ResourceManager.Authorization.Models.RoleManagementPolicyRuleType)">
            <summary>Indicates whether the current object is equal to another object of the same type.</summary><param name="other">An object to compare with this object.</param><returns><see langword="true" /> if the current object is equal to the <paramref name="other" /> parameter; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.Models.RoleManagementPolicyRuleType.GetHashCode">
            <summary>Returns the hash code for this instance.</summary><returns>A 32-bit signed integer that is the hash code for this instance.</returns>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.Models.RoleManagementPolicyRuleType.ToString">
            <summary>Returns the fully qualified type name of this instance.</summary><returns>The fully qualified type name.</returns>
        </member>
        <member name="T:Azure.ResourceManager.Authorization.Models.RoleManagementPrincipal">
            <summary> The name of the entity last modified it. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.Models.RoleManagementPrincipal.#ctor">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Authorization.Models.RoleManagementPrincipal" />. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.Models.RoleManagementPrincipal.#ctor(System.String,System.String,System.Nullable{Azure.ResourceManager.Authorization.Models.RoleManagementPrincipalType},System.String,System.Collections.Generic.IDictionary{System.String,System.BinaryData})">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Authorization.Models.RoleManagementPrincipal" />. </summary>
            <param name="id"> The id of the principal made changes. </param>
            <param name="displayName"> The name of the principal made changes. </param>
            <param name="principalType"> Type of the principal. </param>
            <param name="email"> Email of principal. </param>
            <param name="serializedAdditionalRawData"> Keeps track of any properties unknown to the library. </param>
        </member>
        <member name="P:Azure.ResourceManager.Authorization.Models.RoleManagementPrincipal.Id">
            <summary> The id of the principal made changes. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Authorization.Models.RoleManagementPrincipal.DisplayName">
            <summary> The name of the principal made changes. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Authorization.Models.RoleManagementPrincipal.PrincipalType">
            <summary> Type of the principal. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Authorization.Models.RoleManagementPrincipal.Email">
            <summary> Email of principal. </summary>
        </member>
        <member name="T:Azure.ResourceManager.Authorization.Models.RoleManagementPrincipalType">
            <summary> The principal type of the assigned principal ID. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.Models.RoleManagementPrincipalType.#ctor(System.String)">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Authorization.Models.RoleManagementPrincipalType" />. </summary>
            <exception cref="T:System.ArgumentNullException"> <paramref name="value" /> is null. </exception>
        </member>
        <member name="P:Azure.ResourceManager.Authorization.Models.RoleManagementPrincipalType.User">
            <summary> User. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Authorization.Models.RoleManagementPrincipalType.Group">
            <summary> Group. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Authorization.Models.RoleManagementPrincipalType.ServicePrincipal">
            <summary> ServicePrincipal. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Authorization.Models.RoleManagementPrincipalType.ForeignGroup">
            <summary> ForeignGroup. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Authorization.Models.RoleManagementPrincipalType.Device">
            <summary> Device. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.Models.RoleManagementPrincipalType.op_Equality(Azure.ResourceManager.Authorization.Models.RoleManagementPrincipalType,Azure.ResourceManager.Authorization.Models.RoleManagementPrincipalType)">
            <summary> Determines if two <see cref="T:Azure.ResourceManager.Authorization.Models.RoleManagementPrincipalType" /> values are the same. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.Models.RoleManagementPrincipalType.op_Inequality(Azure.ResourceManager.Authorization.Models.RoleManagementPrincipalType,Azure.ResourceManager.Authorization.Models.RoleManagementPrincipalType)">
            <summary> Determines if two <see cref="T:Azure.ResourceManager.Authorization.Models.RoleManagementPrincipalType" /> values are not the same. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.Models.RoleManagementPrincipalType.op_Implicit(System.String)~Azure.ResourceManager.Authorization.Models.RoleManagementPrincipalType">
            <summary> Converts a string to a <see cref="T:Azure.ResourceManager.Authorization.Models.RoleManagementPrincipalType" />. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.Models.RoleManagementPrincipalType.Equals(System.Object)">
            <summary>Indicates whether this instance and a specified object are equal.</summary><param name="obj">The object to compare with the current instance.</param><returns><see langword="true" /> if <paramref name="obj" /> and this instance are the same type and represent the same value; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.Models.RoleManagementPrincipalType.Equals(Azure.ResourceManager.Authorization.Models.RoleManagementPrincipalType)">
            <summary>Indicates whether the current object is equal to another object of the same type.</summary><param name="other">An object to compare with this object.</param><returns><see langword="true" /> if the current object is equal to the <paramref name="other" /> parameter; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.Models.RoleManagementPrincipalType.GetHashCode">
            <summary>Returns the hash code for this instance.</summary><returns>A 32-bit signed integer that is the hash code for this instance.</returns>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.Models.RoleManagementPrincipalType.ToString">
            <summary>Returns the fully qualified type name of this instance.</summary><returns>The fully qualified type name.</returns>
        </member>
        <member name="T:Azure.ResourceManager.Authorization.Models.RoleManagementScheduleExpirationType">
            <summary> Type of the role assignment schedule expiration. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.Models.RoleManagementScheduleExpirationType.#ctor(System.String)">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Authorization.Models.RoleManagementScheduleExpirationType" />. </summary>
            <exception cref="T:System.ArgumentNullException"> <paramref name="value" /> is null. </exception>
        </member>
        <member name="P:Azure.ResourceManager.Authorization.Models.RoleManagementScheduleExpirationType.AfterDuration">
            <summary> AfterDuration. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Authorization.Models.RoleManagementScheduleExpirationType.AfterDateTime">
            <summary> AfterDateTime. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Authorization.Models.RoleManagementScheduleExpirationType.NoExpiration">
            <summary> NoExpiration. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.Models.RoleManagementScheduleExpirationType.op_Equality(Azure.ResourceManager.Authorization.Models.RoleManagementScheduleExpirationType,Azure.ResourceManager.Authorization.Models.RoleManagementScheduleExpirationType)">
            <summary> Determines if two <see cref="T:Azure.ResourceManager.Authorization.Models.RoleManagementScheduleExpirationType" /> values are the same. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.Models.RoleManagementScheduleExpirationType.op_Inequality(Azure.ResourceManager.Authorization.Models.RoleManagementScheduleExpirationType,Azure.ResourceManager.Authorization.Models.RoleManagementScheduleExpirationType)">
            <summary> Determines if two <see cref="T:Azure.ResourceManager.Authorization.Models.RoleManagementScheduleExpirationType" /> values are not the same. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.Models.RoleManagementScheduleExpirationType.op_Implicit(System.String)~Azure.ResourceManager.Authorization.Models.RoleManagementScheduleExpirationType">
            <summary> Converts a string to a <see cref="T:Azure.ResourceManager.Authorization.Models.RoleManagementScheduleExpirationType" />. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.Models.RoleManagementScheduleExpirationType.Equals(System.Object)">
            <summary>Indicates whether this instance and a specified object are equal.</summary><param name="obj">The object to compare with the current instance.</param><returns><see langword="true" /> if <paramref name="obj" /> and this instance are the same type and represent the same value; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.Models.RoleManagementScheduleExpirationType.Equals(Azure.ResourceManager.Authorization.Models.RoleManagementScheduleExpirationType)">
            <summary>Indicates whether the current object is equal to another object of the same type.</summary><param name="other">An object to compare with this object.</param><returns><see langword="true" /> if the current object is equal to the <paramref name="other" /> parameter; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.Models.RoleManagementScheduleExpirationType.GetHashCode">
            <summary>Returns the hash code for this instance.</summary><returns>A 32-bit signed integer that is the hash code for this instance.</returns>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.Models.RoleManagementScheduleExpirationType.ToString">
            <summary>Returns the fully qualified type name of this instance.</summary><returns>The fully qualified type name.</returns>
        </member>
        <member name="T:Azure.ResourceManager.Authorization.Models.RoleManagementScheduleMemberType">
            <summary> Membership type of the role assignment schedule. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.Models.RoleManagementScheduleMemberType.#ctor(System.String)">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Authorization.Models.RoleManagementScheduleMemberType" />. </summary>
            <exception cref="T:System.ArgumentNullException"> <paramref name="value" /> is null. </exception>
        </member>
        <member name="P:Azure.ResourceManager.Authorization.Models.RoleManagementScheduleMemberType.Inherited">
            <summary> Inherited. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Authorization.Models.RoleManagementScheduleMemberType.Direct">
            <summary> Direct. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Authorization.Models.RoleManagementScheduleMemberType.Group">
            <summary> Group. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.Models.RoleManagementScheduleMemberType.op_Equality(Azure.ResourceManager.Authorization.Models.RoleManagementScheduleMemberType,Azure.ResourceManager.Authorization.Models.RoleManagementScheduleMemberType)">
            <summary> Determines if two <see cref="T:Azure.ResourceManager.Authorization.Models.RoleManagementScheduleMemberType" /> values are the same. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.Models.RoleManagementScheduleMemberType.op_Inequality(Azure.ResourceManager.Authorization.Models.RoleManagementScheduleMemberType,Azure.ResourceManager.Authorization.Models.RoleManagementScheduleMemberType)">
            <summary> Determines if two <see cref="T:Azure.ResourceManager.Authorization.Models.RoleManagementScheduleMemberType" /> values are not the same. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.Models.RoleManagementScheduleMemberType.op_Implicit(System.String)~Azure.ResourceManager.Authorization.Models.RoleManagementScheduleMemberType">
            <summary> Converts a string to a <see cref="T:Azure.ResourceManager.Authorization.Models.RoleManagementScheduleMemberType" />. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.Models.RoleManagementScheduleMemberType.Equals(System.Object)">
            <summary>Indicates whether this instance and a specified object are equal.</summary><param name="obj">The object to compare with the current instance.</param><returns><see langword="true" /> if <paramref name="obj" /> and this instance are the same type and represent the same value; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.Models.RoleManagementScheduleMemberType.Equals(Azure.ResourceManager.Authorization.Models.RoleManagementScheduleMemberType)">
            <summary>Indicates whether the current object is equal to another object of the same type.</summary><param name="other">An object to compare with this object.</param><returns><see langword="true" /> if the current object is equal to the <paramref name="other" /> parameter; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.Models.RoleManagementScheduleMemberType.GetHashCode">
            <summary>Returns the hash code for this instance.</summary><returns>A 32-bit signed integer that is the hash code for this instance.</returns>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.Models.RoleManagementScheduleMemberType.ToString">
            <summary>Returns the fully qualified type name of this instance.</summary><returns>The fully qualified type name.</returns>
        </member>
        <member name="T:Azure.ResourceManager.Authorization.Models.RoleManagementScheduleRequestType">
            <summary> The type of the role assignment schedule request. Eg: SelfActivate, AdminAssign etc. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.Models.RoleManagementScheduleRequestType.#ctor(System.String)">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Authorization.Models.RoleManagementScheduleRequestType" />. </summary>
            <exception cref="T:System.ArgumentNullException"> <paramref name="value" /> is null. </exception>
        </member>
        <member name="P:Azure.ResourceManager.Authorization.Models.RoleManagementScheduleRequestType.AdminAssign">
            <summary> AdminAssign. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Authorization.Models.RoleManagementScheduleRequestType.AdminRemove">
            <summary> AdminRemove. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Authorization.Models.RoleManagementScheduleRequestType.AdminUpdate">
            <summary> AdminUpdate. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Authorization.Models.RoleManagementScheduleRequestType.AdminExtend">
            <summary> AdminExtend. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Authorization.Models.RoleManagementScheduleRequestType.AdminRenew">
            <summary> AdminRenew. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Authorization.Models.RoleManagementScheduleRequestType.SelfActivate">
            <summary> SelfActivate. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Authorization.Models.RoleManagementScheduleRequestType.SelfDeactivate">
            <summary> SelfDeactivate. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Authorization.Models.RoleManagementScheduleRequestType.SelfExtend">
            <summary> SelfExtend. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Authorization.Models.RoleManagementScheduleRequestType.SelfRenew">
            <summary> SelfRenew. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.Models.RoleManagementScheduleRequestType.op_Equality(Azure.ResourceManager.Authorization.Models.RoleManagementScheduleRequestType,Azure.ResourceManager.Authorization.Models.RoleManagementScheduleRequestType)">
            <summary> Determines if two <see cref="T:Azure.ResourceManager.Authorization.Models.RoleManagementScheduleRequestType" /> values are the same. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.Models.RoleManagementScheduleRequestType.op_Inequality(Azure.ResourceManager.Authorization.Models.RoleManagementScheduleRequestType,Azure.ResourceManager.Authorization.Models.RoleManagementScheduleRequestType)">
            <summary> Determines if two <see cref="T:Azure.ResourceManager.Authorization.Models.RoleManagementScheduleRequestType" /> values are not the same. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.Models.RoleManagementScheduleRequestType.op_Implicit(System.String)~Azure.ResourceManager.Authorization.Models.RoleManagementScheduleRequestType">
            <summary> Converts a string to a <see cref="T:Azure.ResourceManager.Authorization.Models.RoleManagementScheduleRequestType" />. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.Models.RoleManagementScheduleRequestType.Equals(System.Object)">
            <summary>Indicates whether this instance and a specified object are equal.</summary><param name="obj">The object to compare with the current instance.</param><returns><see langword="true" /> if <paramref name="obj" /> and this instance are the same type and represent the same value; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.Models.RoleManagementScheduleRequestType.Equals(Azure.ResourceManager.Authorization.Models.RoleManagementScheduleRequestType)">
            <summary>Indicates whether the current object is equal to another object of the same type.</summary><param name="other">An object to compare with this object.</param><returns><see langword="true" /> if the current object is equal to the <paramref name="other" /> parameter; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.Models.RoleManagementScheduleRequestType.GetHashCode">
            <summary>Returns the hash code for this instance.</summary><returns>A 32-bit signed integer that is the hash code for this instance.</returns>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.Models.RoleManagementScheduleRequestType.ToString">
            <summary>Returns the fully qualified type name of this instance.</summary><returns>The fully qualified type name.</returns>
        </member>
        <member name="T:Azure.ResourceManager.Authorization.Models.RoleManagementScheduleStatus">
            <summary> The status of the role assignment schedule. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.Models.RoleManagementScheduleStatus.#ctor(System.String)">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Authorization.Models.RoleManagementScheduleStatus" />. </summary>
            <exception cref="T:System.ArgumentNullException"> <paramref name="value" /> is null. </exception>
        </member>
        <member name="P:Azure.ResourceManager.Authorization.Models.RoleManagementScheduleStatus.Accepted">
            <summary> Accepted. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Authorization.Models.RoleManagementScheduleStatus.PendingEvaluation">
            <summary> PendingEvaluation. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Authorization.Models.RoleManagementScheduleStatus.Granted">
            <summary> Granted. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Authorization.Models.RoleManagementScheduleStatus.Denied">
            <summary> Denied. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Authorization.Models.RoleManagementScheduleStatus.PendingProvisioning">
            <summary> PendingProvisioning. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Authorization.Models.RoleManagementScheduleStatus.Provisioned">
            <summary> Provisioned. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Authorization.Models.RoleManagementScheduleStatus.PendingRevocation">
            <summary> PendingRevocation. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Authorization.Models.RoleManagementScheduleStatus.Revoked">
            <summary> Revoked. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Authorization.Models.RoleManagementScheduleStatus.Canceled">
            <summary> Canceled. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Authorization.Models.RoleManagementScheduleStatus.Failed">
            <summary> Failed. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Authorization.Models.RoleManagementScheduleStatus.PendingApprovalProvisioning">
            <summary> PendingApprovalProvisioning. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Authorization.Models.RoleManagementScheduleStatus.PendingApproval">
            <summary> PendingApproval. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Authorization.Models.RoleManagementScheduleStatus.FailedAsResourceIsLocked">
            <summary> FailedAsResourceIsLocked. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Authorization.Models.RoleManagementScheduleStatus.PendingAdminDecision">
            <summary> PendingAdminDecision. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Authorization.Models.RoleManagementScheduleStatus.AdminApproved">
            <summary> AdminApproved. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Authorization.Models.RoleManagementScheduleStatus.AdminDenied">
            <summary> AdminDenied. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Authorization.Models.RoleManagementScheduleStatus.TimedOut">
            <summary> TimedOut. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Authorization.Models.RoleManagementScheduleStatus.ProvisioningStarted">
            <summary> ProvisioningStarted. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Authorization.Models.RoleManagementScheduleStatus.Invalid">
            <summary> Invalid. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Authorization.Models.RoleManagementScheduleStatus.PendingScheduleCreation">
            <summary> PendingScheduleCreation. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Authorization.Models.RoleManagementScheduleStatus.ScheduleCreated">
            <summary> ScheduleCreated. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Authorization.Models.RoleManagementScheduleStatus.PendingExternalProvisioning">
            <summary> PendingExternalProvisioning. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.Models.RoleManagementScheduleStatus.op_Equality(Azure.ResourceManager.Authorization.Models.RoleManagementScheduleStatus,Azure.ResourceManager.Authorization.Models.RoleManagementScheduleStatus)">
            <summary> Determines if two <see cref="T:Azure.ResourceManager.Authorization.Models.RoleManagementScheduleStatus" /> values are the same. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.Models.RoleManagementScheduleStatus.op_Inequality(Azure.ResourceManager.Authorization.Models.RoleManagementScheduleStatus,Azure.ResourceManager.Authorization.Models.RoleManagementScheduleStatus)">
            <summary> Determines if two <see cref="T:Azure.ResourceManager.Authorization.Models.RoleManagementScheduleStatus" /> values are not the same. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.Models.RoleManagementScheduleStatus.op_Implicit(System.String)~Azure.ResourceManager.Authorization.Models.RoleManagementScheduleStatus">
            <summary> Converts a string to a <see cref="T:Azure.ResourceManager.Authorization.Models.RoleManagementScheduleStatus" />. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.Models.RoleManagementScheduleStatus.Equals(System.Object)">
            <summary>Indicates whether this instance and a specified object are equal.</summary><param name="obj">The object to compare with the current instance.</param><returns><see langword="true" /> if <paramref name="obj" /> and this instance are the same type and represent the same value; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.Models.RoleManagementScheduleStatus.Equals(Azure.ResourceManager.Authorization.Models.RoleManagementScheduleStatus)">
            <summary>Indicates whether the current object is equal to another object of the same type.</summary><param name="other">An object to compare with this object.</param><returns><see langword="true" /> if the current object is equal to the <paramref name="other" /> parameter; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.Models.RoleManagementScheduleStatus.GetHashCode">
            <summary>Returns the hash code for this instance.</summary><returns>A 32-bit signed integer that is the hash code for this instance.</returns>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.Models.RoleManagementScheduleStatus.ToString">
            <summary>Returns the fully qualified type name of this instance.</summary><returns>The fully qualified type name.</returns>
        </member>
        <member name="T:Azure.ResourceManager.Authorization.Models.RoleManagementScopeType">
            <summary> Type of the scope. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.Models.RoleManagementScopeType.#ctor(System.String)">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Authorization.Models.RoleManagementScopeType" />. </summary>
            <exception cref="T:System.ArgumentNullException"> <paramref name="value" /> is null. </exception>
        </member>
        <member name="P:Azure.ResourceManager.Authorization.Models.RoleManagementScopeType.Subscription">
            <summary> subscription. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Authorization.Models.RoleManagementScopeType.ManagementGroup">
            <summary> managementgroup. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Authorization.Models.RoleManagementScopeType.ResourceGroup">
            <summary> resourcegroup. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.Models.RoleManagementScopeType.op_Equality(Azure.ResourceManager.Authorization.Models.RoleManagementScopeType,Azure.ResourceManager.Authorization.Models.RoleManagementScopeType)">
            <summary> Determines if two <see cref="T:Azure.ResourceManager.Authorization.Models.RoleManagementScopeType" /> values are the same. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.Models.RoleManagementScopeType.op_Inequality(Azure.ResourceManager.Authorization.Models.RoleManagementScopeType,Azure.ResourceManager.Authorization.Models.RoleManagementScopeType)">
            <summary> Determines if two <see cref="T:Azure.ResourceManager.Authorization.Models.RoleManagementScopeType" /> values are not the same. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.Models.RoleManagementScopeType.op_Implicit(System.String)~Azure.ResourceManager.Authorization.Models.RoleManagementScopeType">
            <summary> Converts a string to a <see cref="T:Azure.ResourceManager.Authorization.Models.RoleManagementScopeType" />. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.Models.RoleManagementScopeType.Equals(System.Object)">
            <summary>Indicates whether this instance and a specified object are equal.</summary><param name="obj">The object to compare with the current instance.</param><returns><see langword="true" /> if <paramref name="obj" /> and this instance are the same type and represent the same value; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.Models.RoleManagementScopeType.Equals(Azure.ResourceManager.Authorization.Models.RoleManagementScopeType)">
            <summary>Indicates whether the current object is equal to another object of the same type.</summary><param name="other">An object to compare with this object.</param><returns><see langword="true" /> if the current object is equal to the <paramref name="other" /> parameter; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.Models.RoleManagementScopeType.GetHashCode">
            <summary>Returns the hash code for this instance.</summary><returns>A 32-bit signed integer that is the hash code for this instance.</returns>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.Models.RoleManagementScopeType.ToString">
            <summary>Returns the fully qualified type name of this instance.</summary><returns>The fully qualified type name.</returns>
        </member>
        <member name="T:Azure.ResourceManager.Authorization.Models.RoleManagementUserInfo">
            <summary> The detail of a user. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.Models.RoleManagementUserInfo.#ctor">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Authorization.Models.RoleManagementUserInfo" />. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.Models.RoleManagementUserInfo.#ctor(System.Nullable{Azure.ResourceManager.Authorization.Models.RoleManagementUserType},System.Nullable{System.Boolean},System.String,System.String,System.Collections.Generic.IDictionary{System.String,System.BinaryData})">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Authorization.Models.RoleManagementUserInfo" />. </summary>
            <param name="userType"> The type of user. </param>
            <param name="isBackup"> The value indicating whether the user is a backup fallback approver. </param>
            <param name="id"> The object id of the user. </param>
            <param name="description"> The description of the user. </param>
            <param name="serializedAdditionalRawData"> Keeps track of any properties unknown to the library. </param>
        </member>
        <member name="P:Azure.ResourceManager.Authorization.Models.RoleManagementUserInfo.UserType">
            <summary> The type of user. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Authorization.Models.RoleManagementUserInfo.IsBackup">
            <summary> The value indicating whether the user is a backup fallback approver. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Authorization.Models.RoleManagementUserInfo.Id">
            <summary> The object id of the user. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Authorization.Models.RoleManagementUserInfo.Description">
            <summary> The description of the user. </summary>
        </member>
        <member name="T:Azure.ResourceManager.Authorization.Models.RoleManagementUserType">
            <summary> The type of user. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.Models.RoleManagementUserType.#ctor(System.String)">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Authorization.Models.RoleManagementUserType" />. </summary>
            <exception cref="T:System.ArgumentNullException"> <paramref name="value" /> is null. </exception>
        </member>
        <member name="P:Azure.ResourceManager.Authorization.Models.RoleManagementUserType.User">
            <summary> User. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Authorization.Models.RoleManagementUserType.Group">
            <summary> Group. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.Models.RoleManagementUserType.op_Equality(Azure.ResourceManager.Authorization.Models.RoleManagementUserType,Azure.ResourceManager.Authorization.Models.RoleManagementUserType)">
            <summary> Determines if two <see cref="T:Azure.ResourceManager.Authorization.Models.RoleManagementUserType" /> values are the same. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.Models.RoleManagementUserType.op_Inequality(Azure.ResourceManager.Authorization.Models.RoleManagementUserType,Azure.ResourceManager.Authorization.Models.RoleManagementUserType)">
            <summary> Determines if two <see cref="T:Azure.ResourceManager.Authorization.Models.RoleManagementUserType" /> values are not the same. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.Models.RoleManagementUserType.op_Implicit(System.String)~Azure.ResourceManager.Authorization.Models.RoleManagementUserType">
            <summary> Converts a string to a <see cref="T:Azure.ResourceManager.Authorization.Models.RoleManagementUserType" />. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.Models.RoleManagementUserType.Equals(System.Object)">
            <summary>Indicates whether this instance and a specified object are equal.</summary><param name="obj">The object to compare with the current instance.</param><returns><see langword="true" /> if <paramref name="obj" /> and this instance are the same type and represent the same value; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.Models.RoleManagementUserType.Equals(Azure.ResourceManager.Authorization.Models.RoleManagementUserType)">
            <summary>Indicates whether the current object is equal to another object of the same type.</summary><param name="other">An object to compare with this object.</param><returns><see langword="true" /> if the current object is equal to the <paramref name="other" /> parameter; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.Models.RoleManagementUserType.GetHashCode">
            <summary>Returns the hash code for this instance.</summary><returns>A 32-bit signed integer that is the hash code for this instance.</returns>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.Models.RoleManagementUserType.ToString">
            <summary>Returns the fully qualified type name of this instance.</summary><returns>The fully qualified type name.</returns>
        </member>
        <member name="T:Azure.ResourceManager.Authorization.Models.UnknownRoleManagementPolicyRule">
            <summary> Unknown version of RoleManagementPolicyRule. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.Models.UnknownRoleManagementPolicyRule.#ctor(System.String,Azure.ResourceManager.Authorization.Models.RoleManagementPolicyRuleType,Azure.ResourceManager.Authorization.Models.RoleManagementPolicyRuleTarget,System.Collections.Generic.IDictionary{System.String,System.BinaryData})">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Authorization.Models.UnknownRoleManagementPolicyRule" />. </summary>
            <param name="id"> The id of the rule. </param>
            <param name="ruleType"> The type of rule. </param>
            <param name="target"> The target of the current rule. </param>
            <param name="serializedAdditionalRawData"> Keeps track of any properties unknown to the library. </param>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.Models.UnknownRoleManagementPolicyRule.#ctor">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Authorization.Models.UnknownRoleManagementPolicyRule" /> for deserialization. </summary>
        </member>
        <member name="T:Azure.ResourceManager.Authorization.AuthorizationProviderOperationsMetadataCollection">
            <summary>
            A class representing a collection of <see cref="T:Azure.ResourceManager.Authorization.AuthorizationProviderOperationsMetadataResource" /> and their operations.
            Each <see cref="T:Azure.ResourceManager.Authorization.AuthorizationProviderOperationsMetadataResource" /> in the collection will belong to the same instance of <see cref="T:Azure.ResourceManager.Resources.TenantResource" />.
            To get an <see cref="T:Azure.ResourceManager.Authorization.AuthorizationProviderOperationsMetadataCollection" /> instance call the GetAuthorizationProviderOperationsMetadata method from an instance of <see cref="T:Azure.ResourceManager.Resources.TenantResource" />.
            </summary>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.AuthorizationProviderOperationsMetadataCollection.#ctor">
            <summary> Initializes a new instance of the <see cref="T:Azure.ResourceManager.Authorization.AuthorizationProviderOperationsMetadataCollection" /> class for mocking. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.AuthorizationProviderOperationsMetadataCollection.#ctor(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)">
            <summary> Initializes a new instance of the <see cref="T:Azure.ResourceManager.Authorization.AuthorizationProviderOperationsMetadataCollection" /> class. </summary>
            <param name="client"> The client parameters to use in these operations. </param>
            <param name="id"> The identifier of the parent resource that is the target of operations. </param>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.AuthorizationProviderOperationsMetadataCollection.GetAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Gets provider operations metadata for the specified resource provider.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/providers/Microsoft.Authorization/providerOperations/{resourceProviderNamespace}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>ProviderOperationsMetadata_Get</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2022-04-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.Authorization.AuthorizationProviderOperationsMetadataResource" /></description>
            </item>
            </list>
            </summary>
            <param name="resourceProviderNamespace"> The namespace of the resource provider. </param>
            <param name="expand"> Specifies whether to expand the values. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="resourceProviderNamespace" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.AuthorizationProviderOperationsMetadataCollection.Get(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Gets provider operations metadata for the specified resource provider.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/providers/Microsoft.Authorization/providerOperations/{resourceProviderNamespace}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>ProviderOperationsMetadata_Get</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2022-04-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.Authorization.AuthorizationProviderOperationsMetadataResource" /></description>
            </item>
            </list>
            </summary>
            <param name="resourceProviderNamespace"> The namespace of the resource provider. </param>
            <param name="expand"> Specifies whether to expand the values. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="resourceProviderNamespace" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.AuthorizationProviderOperationsMetadataCollection.GetAllAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Gets provider operations metadata for all resource providers.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/providers/Microsoft.Authorization/providerOperations</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>ProviderOperationsMetadata_List</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2022-04-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.Authorization.AuthorizationProviderOperationsMetadataResource" /></description>
            </item>
            </list>
            </summary>
            <param name="expand"> Specifies whether to expand the values. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <returns> An async collection of <see cref="T:Azure.ResourceManager.Authorization.AuthorizationProviderOperationsMetadataResource" /> that may take multiple service requests to iterate over. </returns>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.AuthorizationProviderOperationsMetadataCollection.GetAll(System.String,System.Threading.CancellationToken)">
            <summary>
            Gets provider operations metadata for all resource providers.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/providers/Microsoft.Authorization/providerOperations</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>ProviderOperationsMetadata_List</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2022-04-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.Authorization.AuthorizationProviderOperationsMetadataResource" /></description>
            </item>
            </list>
            </summary>
            <param name="expand"> Specifies whether to expand the values. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <returns> A collection of <see cref="T:Azure.ResourceManager.Authorization.AuthorizationProviderOperationsMetadataResource" /> that may take multiple service requests to iterate over. </returns>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.AuthorizationProviderOperationsMetadataCollection.ExistsAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Checks to see if the resource exists in azure.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/providers/Microsoft.Authorization/providerOperations/{resourceProviderNamespace}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>ProviderOperationsMetadata_Get</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2022-04-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.Authorization.AuthorizationProviderOperationsMetadataResource" /></description>
            </item>
            </list>
            </summary>
            <param name="resourceProviderNamespace"> The namespace of the resource provider. </param>
            <param name="expand"> Specifies whether to expand the values. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="resourceProviderNamespace" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.AuthorizationProviderOperationsMetadataCollection.Exists(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Checks to see if the resource exists in azure.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/providers/Microsoft.Authorization/providerOperations/{resourceProviderNamespace}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>ProviderOperationsMetadata_Get</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2022-04-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.Authorization.AuthorizationProviderOperationsMetadataResource" /></description>
            </item>
            </list>
            </summary>
            <param name="resourceProviderNamespace"> The namespace of the resource provider. </param>
            <param name="expand"> Specifies whether to expand the values. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="resourceProviderNamespace" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.AuthorizationProviderOperationsMetadataCollection.GetIfExistsAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Tries to get details for this resource from the service.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/providers/Microsoft.Authorization/providerOperations/{resourceProviderNamespace}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>ProviderOperationsMetadata_Get</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2022-04-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.Authorization.AuthorizationProviderOperationsMetadataResource" /></description>
            </item>
            </list>
            </summary>
            <param name="resourceProviderNamespace"> The namespace of the resource provider. </param>
            <param name="expand"> Specifies whether to expand the values. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="resourceProviderNamespace" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.AuthorizationProviderOperationsMetadataCollection.GetIfExists(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Tries to get details for this resource from the service.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/providers/Microsoft.Authorization/providerOperations/{resourceProviderNamespace}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>ProviderOperationsMetadata_Get</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2022-04-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.Authorization.AuthorizationProviderOperationsMetadataResource" /></description>
            </item>
            </list>
            </summary>
            <param name="resourceProviderNamespace"> The namespace of the resource provider. </param>
            <param name="expand"> Specifies whether to expand the values. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="resourceProviderNamespace" /> is null. </exception>
        </member>
        <member name="T:Azure.ResourceManager.Authorization.AuthorizationProviderOperationsMetadataData">
            <summary>
            A class representing the AuthorizationProviderOperationsMetadata data model.
            Provider Operations metadata
            </summary>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.AuthorizationProviderOperationsMetadataData.#ctor">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Authorization.AuthorizationProviderOperationsMetadataData" />. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.AuthorizationProviderOperationsMetadataData.#ctor(Azure.Core.ResourceIdentifier,System.String,Azure.Core.ResourceType,Azure.ResourceManager.Models.SystemData,System.String,System.Collections.Generic.IReadOnlyList{Azure.ResourceManager.Authorization.Models.AuthorizationProviderResourceType},System.Collections.Generic.IReadOnlyList{Azure.ResourceManager.Authorization.Models.AuthorizationProviderOperationInfo},System.Collections.Generic.IDictionary{System.String,System.BinaryData})">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Authorization.AuthorizationProviderOperationsMetadataData" />. </summary>
            <param name="id"> The id. </param>
            <param name="name"> The name. </param>
            <param name="resourceType"> The resourceType. </param>
            <param name="systemData"> The systemData. </param>
            <param name="displayName"> The provider display name. </param>
            <param name="resourceTypes"> The provider resource types. </param>
            <param name="operations"> The provider operations. </param>
            <param name="serializedAdditionalRawData"> Keeps track of any properties unknown to the library. </param>
        </member>
        <member name="P:Azure.ResourceManager.Authorization.AuthorizationProviderOperationsMetadataData.DisplayName">
            <summary> The provider display name. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Authorization.AuthorizationProviderOperationsMetadataData.ResourceTypes">
            <summary> The provider resource types. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Authorization.AuthorizationProviderOperationsMetadataData.Operations">
            <summary> The provider operations. </summary>
        </member>
        <member name="T:Azure.ResourceManager.Authorization.AuthorizationProviderOperationsMetadataResource">
            <summary>
            A Class representing an AuthorizationProviderOperationsMetadata along with the instance operations that can be performed on it.
            If you have a <see cref="T:Azure.Core.ResourceIdentifier" /> you can construct an <see cref="T:Azure.ResourceManager.Authorization.AuthorizationProviderOperationsMetadataResource" />
            from an instance of <see cref="T:Azure.ResourceManager.ArmClient" /> using the GetAuthorizationProviderOperationsMetadataResource method.
            Otherwise you can get one from its parent resource <see cref="T:Azure.ResourceManager.Resources.TenantResource" /> using the GetAuthorizationProviderOperationsMetadata method.
            </summary>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.AuthorizationProviderOperationsMetadataResource.CreateResourceIdentifier(System.String)">
            <summary> Generate the resource identifier of a <see cref="T:Azure.ResourceManager.Authorization.AuthorizationProviderOperationsMetadataResource" /> instance. </summary>
            <param name="resourceProviderNamespace"> The resourceProviderNamespace. </param>
        </member>
        <member name="F:Azure.ResourceManager.Authorization.AuthorizationProviderOperationsMetadataResource.ResourceType">
            <summary> Gets the resource type for the operations. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.AuthorizationProviderOperationsMetadataResource.#ctor">
            <summary> Initializes a new instance of the <see cref="T:Azure.ResourceManager.Authorization.AuthorizationProviderOperationsMetadataResource" /> class for mocking. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.AuthorizationProviderOperationsMetadataResource.#ctor(Azure.ResourceManager.ArmClient,Azure.ResourceManager.Authorization.AuthorizationProviderOperationsMetadataData)">
            <summary> Initializes a new instance of the <see cref="T:Azure.ResourceManager.Authorization.AuthorizationProviderOperationsMetadataResource" /> class. </summary>
            <param name="client"> The client parameters to use in these operations. </param>
            <param name="data"> The resource that is the target of operations. </param>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.AuthorizationProviderOperationsMetadataResource.#ctor(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)">
            <summary> Initializes a new instance of the <see cref="T:Azure.ResourceManager.Authorization.AuthorizationProviderOperationsMetadataResource" /> class. </summary>
            <param name="client"> The client parameters to use in these operations. </param>
            <param name="id"> The identifier of the resource that is the target of operations. </param>
        </member>
        <member name="P:Azure.ResourceManager.Authorization.AuthorizationProviderOperationsMetadataResource.HasData">
            <summary> Gets whether or not the current instance has data. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Authorization.AuthorizationProviderOperationsMetadataResource.Data">
            <summary> Gets the data representing this Feature. </summary>
            <exception cref="T:System.InvalidOperationException"> Throws if there is no data loaded in the current instance. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.AuthorizationProviderOperationsMetadataResource.GetAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Gets provider operations metadata for the specified resource provider.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/providers/Microsoft.Authorization/providerOperations/{resourceProviderNamespace}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>ProviderOperationsMetadata_Get</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2022-04-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.Authorization.AuthorizationProviderOperationsMetadataResource" /></description>
            </item>
            </list>
            </summary>
            <param name="expand"> Specifies whether to expand the values. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.AuthorizationProviderOperationsMetadataResource.Get(System.String,System.Threading.CancellationToken)">
            <summary>
            Gets provider operations metadata for the specified resource provider.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/providers/Microsoft.Authorization/providerOperations/{resourceProviderNamespace}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>ProviderOperationsMetadata_Get</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2022-04-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.Authorization.AuthorizationProviderOperationsMetadataResource" /></description>
            </item>
            </list>
            </summary>
            <param name="expand"> Specifies whether to expand the values. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
        </member>
        <member name="T:Azure.ResourceManager.Authorization.AuthorizationRoleDefinitionCollection">
            <summary>
            A class representing a collection of <see cref="T:Azure.ResourceManager.Authorization.AuthorizationRoleDefinitionResource" /> and their operations.
            Each <see cref="T:Azure.ResourceManager.Authorization.AuthorizationRoleDefinitionResource" /> in the collection will belong to the same instance of <see cref="T:Azure.ResourceManager.ArmResource" />.
            To get an <see cref="T:Azure.ResourceManager.Authorization.AuthorizationRoleDefinitionCollection" /> instance call the GetAuthorizationRoleDefinitions method from an instance of <see cref="T:Azure.ResourceManager.ArmResource" />.
            </summary>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.AuthorizationRoleDefinitionCollection.#ctor">
            <summary> Initializes a new instance of the <see cref="T:Azure.ResourceManager.Authorization.AuthorizationRoleDefinitionCollection" /> class for mocking. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.AuthorizationRoleDefinitionCollection.#ctor(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)">
            <summary> Initializes a new instance of the <see cref="T:Azure.ResourceManager.Authorization.AuthorizationRoleDefinitionCollection" /> class. </summary>
            <param name="client"> The client parameters to use in these operations. </param>
            <param name="id"> The identifier of the parent resource that is the target of operations. </param>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.AuthorizationRoleDefinitionCollection.CreateOrUpdateAsync(Azure.WaitUntil,Azure.Core.ResourceIdentifier,Azure.ResourceManager.Authorization.AuthorizationRoleDefinitionData,System.Threading.CancellationToken)">
            <summary>
            Creates or updates a role definition.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/{scope}/providers/Microsoft.Authorization/roleDefinitions/{roleDefinitionId}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>RoleDefinitions_CreateOrUpdate</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2022-04-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.Authorization.AuthorizationRoleDefinitionResource" /></description>
            </item>
            </list>
            </summary>
            <param name="waitUntil"> <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
            <param name="roleDefinitionId"> The ID of the role definition. </param>
            <param name="data"> The values for the role definition. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="roleDefinitionId" /> or <paramref name="data" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.AuthorizationRoleDefinitionCollection.CreateOrUpdate(Azure.WaitUntil,Azure.Core.ResourceIdentifier,Azure.ResourceManager.Authorization.AuthorizationRoleDefinitionData,System.Threading.CancellationToken)">
            <summary>
            Creates or updates a role definition.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/{scope}/providers/Microsoft.Authorization/roleDefinitions/{roleDefinitionId}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>RoleDefinitions_CreateOrUpdate</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2022-04-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.Authorization.AuthorizationRoleDefinitionResource" /></description>
            </item>
            </list>
            </summary>
            <param name="waitUntil"> <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
            <param name="roleDefinitionId"> The ID of the role definition. </param>
            <param name="data"> The values for the role definition. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="roleDefinitionId" /> or <paramref name="data" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.AuthorizationRoleDefinitionCollection.GetAsync(Azure.Core.ResourceIdentifier,System.Threading.CancellationToken)">
            <summary>
            Get role definition by name (GUID).
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/{scope}/providers/Microsoft.Authorization/roleDefinitions/{roleDefinitionId}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>RoleDefinitions_Get</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2022-04-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.Authorization.AuthorizationRoleDefinitionResource" /></description>
            </item>
            </list>
            </summary>
            <param name="roleDefinitionId"> The ID of the role definition. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="roleDefinitionId" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.AuthorizationRoleDefinitionCollection.Get(Azure.Core.ResourceIdentifier,System.Threading.CancellationToken)">
            <summary>
            Get role definition by name (GUID).
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/{scope}/providers/Microsoft.Authorization/roleDefinitions/{roleDefinitionId}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>RoleDefinitions_Get</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2022-04-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.Authorization.AuthorizationRoleDefinitionResource" /></description>
            </item>
            </list>
            </summary>
            <param name="roleDefinitionId"> The ID of the role definition. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="roleDefinitionId" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.AuthorizationRoleDefinitionCollection.GetAllAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Get all role definitions that are applicable at scope and above.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/{scope}/providers/Microsoft.Authorization/roleDefinitions</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>RoleDefinitions_List</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2022-04-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.Authorization.AuthorizationRoleDefinitionResource" /></description>
            </item>
            </list>
            </summary>
            <param name="filter"> The filter to apply on the operation. Use atScopeAndBelow filter to search below the given scope as well. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <returns> An async collection of <see cref="T:Azure.ResourceManager.Authorization.AuthorizationRoleDefinitionResource" /> that may take multiple service requests to iterate over. </returns>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.AuthorizationRoleDefinitionCollection.GetAll(System.String,System.Threading.CancellationToken)">
            <summary>
            Get all role definitions that are applicable at scope and above.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/{scope}/providers/Microsoft.Authorization/roleDefinitions</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>RoleDefinitions_List</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2022-04-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.Authorization.AuthorizationRoleDefinitionResource" /></description>
            </item>
            </list>
            </summary>
            <param name="filter"> The filter to apply on the operation. Use atScopeAndBelow filter to search below the given scope as well. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <returns> A collection of <see cref="T:Azure.ResourceManager.Authorization.AuthorizationRoleDefinitionResource" /> that may take multiple service requests to iterate over. </returns>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.AuthorizationRoleDefinitionCollection.ExistsAsync(Azure.Core.ResourceIdentifier,System.Threading.CancellationToken)">
            <summary>
            Checks to see if the resource exists in azure.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/{scope}/providers/Microsoft.Authorization/roleDefinitions/{roleDefinitionId}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>RoleDefinitions_Get</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2022-04-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.Authorization.AuthorizationRoleDefinitionResource" /></description>
            </item>
            </list>
            </summary>
            <param name="roleDefinitionId"> The ID of the role definition. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="roleDefinitionId" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.AuthorizationRoleDefinitionCollection.Exists(Azure.Core.ResourceIdentifier,System.Threading.CancellationToken)">
            <summary>
            Checks to see if the resource exists in azure.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/{scope}/providers/Microsoft.Authorization/roleDefinitions/{roleDefinitionId}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>RoleDefinitions_Get</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2022-04-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.Authorization.AuthorizationRoleDefinitionResource" /></description>
            </item>
            </list>
            </summary>
            <param name="roleDefinitionId"> The ID of the role definition. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="roleDefinitionId" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.AuthorizationRoleDefinitionCollection.GetIfExistsAsync(Azure.Core.ResourceIdentifier,System.Threading.CancellationToken)">
            <summary>
            Tries to get details for this resource from the service.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/{scope}/providers/Microsoft.Authorization/roleDefinitions/{roleDefinitionId}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>RoleDefinitions_Get</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2022-04-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.Authorization.AuthorizationRoleDefinitionResource" /></description>
            </item>
            </list>
            </summary>
            <param name="roleDefinitionId"> The ID of the role definition. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="roleDefinitionId" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.AuthorizationRoleDefinitionCollection.GetIfExists(Azure.Core.ResourceIdentifier,System.Threading.CancellationToken)">
            <summary>
            Tries to get details for this resource from the service.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/{scope}/providers/Microsoft.Authorization/roleDefinitions/{roleDefinitionId}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>RoleDefinitions_Get</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2022-04-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.Authorization.AuthorizationRoleDefinitionResource" /></description>
            </item>
            </list>
            </summary>
            <param name="roleDefinitionId"> The ID of the role definition. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="roleDefinitionId" /> is null. </exception>
        </member>
        <member name="T:Azure.ResourceManager.Authorization.AuthorizationRoleDefinitionData">
            <summary>
            A class representing the AuthorizationRoleDefinition data model.
            Role definition.
            </summary>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.AuthorizationRoleDefinitionData.#ctor">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Authorization.AuthorizationRoleDefinitionData" />. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.AuthorizationRoleDefinitionData.#ctor(Azure.Core.ResourceIdentifier,System.String,Azure.Core.ResourceType,Azure.ResourceManager.Models.SystemData,System.String,System.String,System.Nullable{Azure.ResourceManager.Authorization.Models.AuthorizationRoleType},System.Collections.Generic.IList{Azure.ResourceManager.Authorization.Models.RoleDefinitionPermission},System.Collections.Generic.IList{System.String},System.Collections.Generic.IDictionary{System.String,System.BinaryData})">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Authorization.AuthorizationRoleDefinitionData" />. </summary>
            <param name="id"> The id. </param>
            <param name="name"> The name. </param>
            <param name="resourceType"> The resourceType. </param>
            <param name="systemData"> The systemData. </param>
            <param name="roleName"> The role name. </param>
            <param name="description"> The role definition description. </param>
            <param name="roleType"> The role type. </param>
            <param name="permissions"> Role definition permissions. </param>
            <param name="assignableScopes"> Role definition assignable scopes. </param>
            <param name="serializedAdditionalRawData"> Keeps track of any properties unknown to the library. </param>
        </member>
        <member name="P:Azure.ResourceManager.Authorization.AuthorizationRoleDefinitionData.RoleName">
            <summary> The role name. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Authorization.AuthorizationRoleDefinitionData.Description">
            <summary> The role definition description. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Authorization.AuthorizationRoleDefinitionData.RoleType">
            <summary> The role type. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Authorization.AuthorizationRoleDefinitionData.Permissions">
            <summary> Role definition permissions. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Authorization.AuthorizationRoleDefinitionData.AssignableScopes">
            <summary> Role definition assignable scopes. </summary>
        </member>
        <member name="T:Azure.ResourceManager.Authorization.AuthorizationRoleDefinitionResource">
            <summary>
            A Class representing an AuthorizationRoleDefinition along with the instance operations that can be performed on it.
            If you have a <see cref="T:Azure.Core.ResourceIdentifier" /> you can construct an <see cref="T:Azure.ResourceManager.Authorization.AuthorizationRoleDefinitionResource" />
            from an instance of <see cref="T:Azure.ResourceManager.ArmClient" /> using the GetAuthorizationRoleDefinitionResource method.
            Otherwise you can get one from its parent resource <see cref="T:Azure.ResourceManager.ArmResource" /> using the GetAuthorizationRoleDefinition method.
            </summary>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.AuthorizationRoleDefinitionResource.CreateResourceIdentifier(System.String,Azure.Core.ResourceIdentifier)">
            <summary> Generate the resource identifier of a <see cref="T:Azure.ResourceManager.Authorization.AuthorizationRoleDefinitionResource" /> instance. </summary>
            <param name="scope"> The scope. </param>
            <param name="roleDefinitionId"> The roleDefinitionId. </param>
        </member>
        <member name="F:Azure.ResourceManager.Authorization.AuthorizationRoleDefinitionResource.ResourceType">
            <summary> Gets the resource type for the operations. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.AuthorizationRoleDefinitionResource.#ctor">
            <summary> Initializes a new instance of the <see cref="T:Azure.ResourceManager.Authorization.AuthorizationRoleDefinitionResource" /> class for mocking. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.AuthorizationRoleDefinitionResource.#ctor(Azure.ResourceManager.ArmClient,Azure.ResourceManager.Authorization.AuthorizationRoleDefinitionData)">
            <summary> Initializes a new instance of the <see cref="T:Azure.ResourceManager.Authorization.AuthorizationRoleDefinitionResource" /> class. </summary>
            <param name="client"> The client parameters to use in these operations. </param>
            <param name="data"> The resource that is the target of operations. </param>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.AuthorizationRoleDefinitionResource.#ctor(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)">
            <summary> Initializes a new instance of the <see cref="T:Azure.ResourceManager.Authorization.AuthorizationRoleDefinitionResource" /> class. </summary>
            <param name="client"> The client parameters to use in these operations. </param>
            <param name="id"> The identifier of the resource that is the target of operations. </param>
        </member>
        <member name="P:Azure.ResourceManager.Authorization.AuthorizationRoleDefinitionResource.HasData">
            <summary> Gets whether or not the current instance has data. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Authorization.AuthorizationRoleDefinitionResource.Data">
            <summary> Gets the data representing this Feature. </summary>
            <exception cref="T:System.InvalidOperationException"> Throws if there is no data loaded in the current instance. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.AuthorizationRoleDefinitionResource.GetAsync(System.Threading.CancellationToken)">
            <summary>
            Get role definition by name (GUID).
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/{scope}/providers/Microsoft.Authorization/roleDefinitions/{roleDefinitionId}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>RoleDefinitions_Get</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2022-04-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.Authorization.AuthorizationRoleDefinitionResource" /></description>
            </item>
            </list>
            </summary>
            <param name="cancellationToken"> The cancellation token to use. </param>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.AuthorizationRoleDefinitionResource.Get(System.Threading.CancellationToken)">
            <summary>
            Get role definition by name (GUID).
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/{scope}/providers/Microsoft.Authorization/roleDefinitions/{roleDefinitionId}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>RoleDefinitions_Get</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2022-04-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.Authorization.AuthorizationRoleDefinitionResource" /></description>
            </item>
            </list>
            </summary>
            <param name="cancellationToken"> The cancellation token to use. </param>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.AuthorizationRoleDefinitionResource.DeleteAsync(Azure.WaitUntil,System.Threading.CancellationToken)">
            <summary>
            Deletes a role definition.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/{scope}/providers/Microsoft.Authorization/roleDefinitions/{roleDefinitionId}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>RoleDefinitions_Delete</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2022-04-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.Authorization.AuthorizationRoleDefinitionResource" /></description>
            </item>
            </list>
            </summary>
            <param name="waitUntil"> <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.AuthorizationRoleDefinitionResource.Delete(Azure.WaitUntil,System.Threading.CancellationToken)">
            <summary>
            Deletes a role definition.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/{scope}/providers/Microsoft.Authorization/roleDefinitions/{roleDefinitionId}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>RoleDefinitions_Delete</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2022-04-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.Authorization.AuthorizationRoleDefinitionResource" /></description>
            </item>
            </list>
            </summary>
            <param name="waitUntil"> <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.AuthorizationRoleDefinitionResource.UpdateAsync(Azure.WaitUntil,Azure.ResourceManager.Authorization.AuthorizationRoleDefinitionData,System.Threading.CancellationToken)">
            <summary>
            Creates or updates a role definition.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/{scope}/providers/Microsoft.Authorization/roleDefinitions/{roleDefinitionId}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>RoleDefinitions_CreateOrUpdate</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2022-04-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.Authorization.AuthorizationRoleDefinitionResource" /></description>
            </item>
            </list>
            </summary>
            <param name="waitUntil"> <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
            <param name="data"> The values for the role definition. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="data" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.AuthorizationRoleDefinitionResource.Update(Azure.WaitUntil,Azure.ResourceManager.Authorization.AuthorizationRoleDefinitionData,System.Threading.CancellationToken)">
            <summary>
            Creates or updates a role definition.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/{scope}/providers/Microsoft.Authorization/roleDefinitions/{roleDefinitionId}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>RoleDefinitions_CreateOrUpdate</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2022-04-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.Authorization.AuthorizationRoleDefinitionResource" /></description>
            </item>
            </list>
            </summary>
            <param name="waitUntil"> <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
            <param name="data"> The values for the role definition. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="data" /> is null. </exception>
        </member>
        <member name="T:Azure.ResourceManager.Authorization.DenyAssignmentCollection">
            <summary>
            A class representing a collection of <see cref="T:Azure.ResourceManager.Authorization.DenyAssignmentResource" /> and their operations.
            Each <see cref="T:Azure.ResourceManager.Authorization.DenyAssignmentResource" /> in the collection will belong to the same instance of <see cref="T:Azure.ResourceManager.ArmResource" />.
            To get a <see cref="T:Azure.ResourceManager.Authorization.DenyAssignmentCollection" /> instance call the GetDenyAssignments method from an instance of <see cref="T:Azure.ResourceManager.ArmResource" />.
            </summary>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.DenyAssignmentCollection.#ctor">
            <summary> Initializes a new instance of the <see cref="T:Azure.ResourceManager.Authorization.DenyAssignmentCollection" /> class for mocking. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.DenyAssignmentCollection.#ctor(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)">
            <summary> Initializes a new instance of the <see cref="T:Azure.ResourceManager.Authorization.DenyAssignmentCollection" /> class. </summary>
            <param name="client"> The client parameters to use in these operations. </param>
            <param name="id"> The identifier of the parent resource that is the target of operations. </param>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.DenyAssignmentCollection.GetAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Get the specified deny assignment.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/{scope}/providers/Microsoft.Authorization/denyAssignments/{denyAssignmentId}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>DenyAssignments_Get</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2022-04-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.Authorization.DenyAssignmentResource" /></description>
            </item>
            </list>
            </summary>
            <param name="denyAssignmentId"> The ID of the deny assignment to get. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentException"> <paramref name="denyAssignmentId" /> is an empty string, and was expected to be non-empty. </exception>
            <exception cref="T:System.ArgumentNullException"> <paramref name="denyAssignmentId" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.DenyAssignmentCollection.Get(System.String,System.Threading.CancellationToken)">
            <summary>
            Get the specified deny assignment.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/{scope}/providers/Microsoft.Authorization/denyAssignments/{denyAssignmentId}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>DenyAssignments_Get</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2022-04-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.Authorization.DenyAssignmentResource" /></description>
            </item>
            </list>
            </summary>
            <param name="denyAssignmentId"> The ID of the deny assignment to get. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentException"> <paramref name="denyAssignmentId" /> is an empty string, and was expected to be non-empty. </exception>
            <exception cref="T:System.ArgumentNullException"> <paramref name="denyAssignmentId" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.DenyAssignmentCollection.GetAllAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Gets deny assignments for a scope.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/{scope}/providers/Microsoft.Authorization/denyAssignments</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>DenyAssignments_ListForScope</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2022-04-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.Authorization.DenyAssignmentResource" /></description>
            </item>
            </list>
            </summary>
            <param name="filter"> The filter to apply on the operation. Use $filter=atScope() to return all deny assignments at or above the scope. Use $filter=denyAssignmentName eq '{name}' to search deny assignments by name at specified scope. Use $filter=principalId eq '{id}' to return all deny assignments at, above and below the scope for the specified principal. Use $filter=gdprExportPrincipalId eq '{id}' to return all deny assignments at, above and below the scope for the specified principal. This filter is different from the principalId filter as it returns not only those deny assignments that contain the specified principal is the Principals list but also those deny assignments that contain the specified principal is the ExcludePrincipals list. Additionally, when gdprExportPrincipalId filter is used, only the deny assignment name and description properties are returned. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <returns> An async collection of <see cref="T:Azure.ResourceManager.Authorization.DenyAssignmentResource" /> that may take multiple service requests to iterate over. </returns>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.DenyAssignmentCollection.GetAll(System.String,System.Threading.CancellationToken)">
            <summary>
            Gets deny assignments for a scope.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/{scope}/providers/Microsoft.Authorization/denyAssignments</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>DenyAssignments_ListForScope</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2022-04-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.Authorization.DenyAssignmentResource" /></description>
            </item>
            </list>
            </summary>
            <param name="filter"> The filter to apply on the operation. Use $filter=atScope() to return all deny assignments at or above the scope. Use $filter=denyAssignmentName eq '{name}' to search deny assignments by name at specified scope. Use $filter=principalId eq '{id}' to return all deny assignments at, above and below the scope for the specified principal. Use $filter=gdprExportPrincipalId eq '{id}' to return all deny assignments at, above and below the scope for the specified principal. This filter is different from the principalId filter as it returns not only those deny assignments that contain the specified principal is the Principals list but also those deny assignments that contain the specified principal is the ExcludePrincipals list. Additionally, when gdprExportPrincipalId filter is used, only the deny assignment name and description properties are returned. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <returns> A collection of <see cref="T:Azure.ResourceManager.Authorization.DenyAssignmentResource" /> that may take multiple service requests to iterate over. </returns>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.DenyAssignmentCollection.ExistsAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Checks to see if the resource exists in azure.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/{scope}/providers/Microsoft.Authorization/denyAssignments/{denyAssignmentId}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>DenyAssignments_Get</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2022-04-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.Authorization.DenyAssignmentResource" /></description>
            </item>
            </list>
            </summary>
            <param name="denyAssignmentId"> The ID of the deny assignment to get. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentException"> <paramref name="denyAssignmentId" /> is an empty string, and was expected to be non-empty. </exception>
            <exception cref="T:System.ArgumentNullException"> <paramref name="denyAssignmentId" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.DenyAssignmentCollection.Exists(System.String,System.Threading.CancellationToken)">
            <summary>
            Checks to see if the resource exists in azure.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/{scope}/providers/Microsoft.Authorization/denyAssignments/{denyAssignmentId}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>DenyAssignments_Get</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2022-04-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.Authorization.DenyAssignmentResource" /></description>
            </item>
            </list>
            </summary>
            <param name="denyAssignmentId"> The ID of the deny assignment to get. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentException"> <paramref name="denyAssignmentId" /> is an empty string, and was expected to be non-empty. </exception>
            <exception cref="T:System.ArgumentNullException"> <paramref name="denyAssignmentId" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.DenyAssignmentCollection.GetIfExistsAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Tries to get details for this resource from the service.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/{scope}/providers/Microsoft.Authorization/denyAssignments/{denyAssignmentId}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>DenyAssignments_Get</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2022-04-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.Authorization.DenyAssignmentResource" /></description>
            </item>
            </list>
            </summary>
            <param name="denyAssignmentId"> The ID of the deny assignment to get. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentException"> <paramref name="denyAssignmentId" /> is an empty string, and was expected to be non-empty. </exception>
            <exception cref="T:System.ArgumentNullException"> <paramref name="denyAssignmentId" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.DenyAssignmentCollection.GetIfExists(System.String,System.Threading.CancellationToken)">
            <summary>
            Tries to get details for this resource from the service.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/{scope}/providers/Microsoft.Authorization/denyAssignments/{denyAssignmentId}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>DenyAssignments_Get</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2022-04-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.Authorization.DenyAssignmentResource" /></description>
            </item>
            </list>
            </summary>
            <param name="denyAssignmentId"> The ID of the deny assignment to get. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentException"> <paramref name="denyAssignmentId" /> is an empty string, and was expected to be non-empty. </exception>
            <exception cref="T:System.ArgumentNullException"> <paramref name="denyAssignmentId" /> is null. </exception>
        </member>
        <member name="T:Azure.ResourceManager.Authorization.DenyAssignmentData">
            <summary>
            A class representing the DenyAssignment data model.
            Deny Assignment
            </summary>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.DenyAssignmentData.#ctor">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Authorization.DenyAssignmentData" />. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.DenyAssignmentData.#ctor(Azure.Core.ResourceIdentifier,System.String,Azure.Core.ResourceType,Azure.ResourceManager.Models.SystemData,System.String,System.String,System.Collections.Generic.IReadOnlyList{Azure.ResourceManager.Authorization.Models.DenyAssignmentPermission},System.String,System.Nullable{System.Boolean},System.Collections.Generic.IReadOnlyList{Azure.ResourceManager.Authorization.Models.RoleManagementPrincipal},System.Collections.Generic.IReadOnlyList{Azure.ResourceManager.Authorization.Models.RoleManagementPrincipal},System.Nullable{System.Boolean},System.Collections.Generic.IDictionary{System.String,System.BinaryData})">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Authorization.DenyAssignmentData" />. </summary>
            <param name="id"> The id. </param>
            <param name="name"> The name. </param>
            <param name="resourceType"> The resourceType. </param>
            <param name="systemData"> The systemData. </param>
            <param name="denyAssignmentName"> The display name of the deny assignment. </param>
            <param name="description"> The description of the deny assignment. </param>
            <param name="permissions"> An array of permissions that are denied by the deny assignment. </param>
            <param name="scope"> The deny assignment scope. </param>
            <param name="isAppliedToChildScopes"> Determines if the deny assignment applies to child scopes. Default value is false. </param>
            <param name="principals"> Array of principals to which the deny assignment applies. </param>
            <param name="excludePrincipals"> Array of principals to which the deny assignment does not apply. </param>
            <param name="isSystemProtected"> Specifies whether this deny assignment was created by Azure and cannot be edited or deleted. </param>
            <param name="serializedAdditionalRawData"> Keeps track of any properties unknown to the library. </param>
        </member>
        <member name="P:Azure.ResourceManager.Authorization.DenyAssignmentData.DenyAssignmentName">
            <summary> The display name of the deny assignment. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Authorization.DenyAssignmentData.Description">
            <summary> The description of the deny assignment. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Authorization.DenyAssignmentData.Permissions">
            <summary> An array of permissions that are denied by the deny assignment. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Authorization.DenyAssignmentData.Scope">
            <summary> The deny assignment scope. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Authorization.DenyAssignmentData.IsAppliedToChildScopes">
            <summary> Determines if the deny assignment applies to child scopes. Default value is false. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Authorization.DenyAssignmentData.Principals">
            <summary> Array of principals to which the deny assignment applies. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Authorization.DenyAssignmentData.ExcludePrincipals">
            <summary> Array of principals to which the deny assignment does not apply. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Authorization.DenyAssignmentData.IsSystemProtected">
            <summary> Specifies whether this deny assignment was created by Azure and cannot be edited or deleted. </summary>
        </member>
        <member name="T:Azure.ResourceManager.Authorization.DenyAssignmentResource">
            <summary>
            A Class representing a DenyAssignment along with the instance operations that can be performed on it.
            If you have a <see cref="T:Azure.Core.ResourceIdentifier" /> you can construct a <see cref="T:Azure.ResourceManager.Authorization.DenyAssignmentResource" />
            from an instance of <see cref="T:Azure.ResourceManager.ArmClient" /> using the GetDenyAssignmentResource method.
            Otherwise you can get one from its parent resource <see cref="T:Azure.ResourceManager.ArmResource" /> using the GetDenyAssignment method.
            </summary>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.DenyAssignmentResource.CreateResourceIdentifier(System.String,System.String)">
            <summary> Generate the resource identifier of a <see cref="T:Azure.ResourceManager.Authorization.DenyAssignmentResource" /> instance. </summary>
            <param name="scope"> The scope. </param>
            <param name="denyAssignmentId"> The denyAssignmentId. </param>
        </member>
        <member name="F:Azure.ResourceManager.Authorization.DenyAssignmentResource.ResourceType">
            <summary> Gets the resource type for the operations. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.DenyAssignmentResource.#ctor">
            <summary> Initializes a new instance of the <see cref="T:Azure.ResourceManager.Authorization.DenyAssignmentResource" /> class for mocking. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.DenyAssignmentResource.#ctor(Azure.ResourceManager.ArmClient,Azure.ResourceManager.Authorization.DenyAssignmentData)">
            <summary> Initializes a new instance of the <see cref="T:Azure.ResourceManager.Authorization.DenyAssignmentResource" /> class. </summary>
            <param name="client"> The client parameters to use in these operations. </param>
            <param name="data"> The resource that is the target of operations. </param>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.DenyAssignmentResource.#ctor(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)">
            <summary> Initializes a new instance of the <see cref="T:Azure.ResourceManager.Authorization.DenyAssignmentResource" /> class. </summary>
            <param name="client"> The client parameters to use in these operations. </param>
            <param name="id"> The identifier of the resource that is the target of operations. </param>
        </member>
        <member name="P:Azure.ResourceManager.Authorization.DenyAssignmentResource.HasData">
            <summary> Gets whether or not the current instance has data. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Authorization.DenyAssignmentResource.Data">
            <summary> Gets the data representing this Feature. </summary>
            <exception cref="T:System.InvalidOperationException"> Throws if there is no data loaded in the current instance. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.DenyAssignmentResource.GetAsync(System.Threading.CancellationToken)">
            <summary>
            Get the specified deny assignment.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/{scope}/providers/Microsoft.Authorization/denyAssignments/{denyAssignmentId}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>DenyAssignments_Get</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2022-04-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.Authorization.DenyAssignmentResource" /></description>
            </item>
            </list>
            </summary>
            <param name="cancellationToken"> The cancellation token to use. </param>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.DenyAssignmentResource.Get(System.Threading.CancellationToken)">
            <summary>
            Get the specified deny assignment.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/{scope}/providers/Microsoft.Authorization/denyAssignments/{denyAssignmentId}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>DenyAssignments_Get</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2022-04-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.Authorization.DenyAssignmentResource" /></description>
            </item>
            </list>
            </summary>
            <param name="cancellationToken"> The cancellation token to use. </param>
        </member>
        <member name="T:Azure.ResourceManager.Authorization.AuthorizationExtensions">
            <summary> A class to add extension methods to Azure.ResourceManager.Authorization. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.AuthorizationExtensions.GetDenyAssignments(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)">
            <summary>
            Gets a collection of DenyAssignmentResources in the ArmClient.
            <item>
            <term>Mocking</term>
            <description>To mock this method, please mock <see cref="M:Azure.ResourceManager.Authorization.Mocking.MockableAuthorizationArmClient.GetDenyAssignments(Azure.Core.ResourceIdentifier)" /> instead.</description>
            </item>
            </summary>
            <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
            <param name="scope"> The scope that the resource will apply against. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="client" /> is null. </exception>
            <returns> An object representing collection of DenyAssignmentResources and their operations over a DenyAssignmentResource. </returns>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.AuthorizationExtensions.GetDenyAssignmentAsync(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier,System.String,System.Threading.CancellationToken)">
            <summary>
            Get the specified deny assignment.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/{scope}/providers/Microsoft.Authorization/denyAssignments/{denyAssignmentId}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>DenyAssignments_Get</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2022-04-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.Authorization.DenyAssignmentResource" /></description>
            </item>
            </list>
            <item>
            <term>Mocking</term>
            <description>To mock this method, please mock <see cref="M:Azure.ResourceManager.Authorization.Mocking.MockableAuthorizationArmClient.GetDenyAssignmentAsync(Azure.Core.ResourceIdentifier,System.String,System.Threading.CancellationToken)" /> instead.</description>
            </item>
            </summary>
            <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
            <param name="scope"> The scope that the resource will apply against. </param>
            <param name="denyAssignmentId"> The ID of the deny assignment to get. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="client" /> or <paramref name="denyAssignmentId" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="denyAssignmentId" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.AuthorizationExtensions.GetDenyAssignment(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier,System.String,System.Threading.CancellationToken)">
            <summary>
            Get the specified deny assignment.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/{scope}/providers/Microsoft.Authorization/denyAssignments/{denyAssignmentId}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>DenyAssignments_Get</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2022-04-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.Authorization.DenyAssignmentResource" /></description>
            </item>
            </list>
            <item>
            <term>Mocking</term>
            <description>To mock this method, please mock <see cref="M:Azure.ResourceManager.Authorization.Mocking.MockableAuthorizationArmClient.GetDenyAssignment(Azure.Core.ResourceIdentifier,System.String,System.Threading.CancellationToken)" /> instead.</description>
            </item>
            </summary>
            <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
            <param name="scope"> The scope that the resource will apply against. </param>
            <param name="denyAssignmentId"> The ID of the deny assignment to get. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="client" /> or <paramref name="denyAssignmentId" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="denyAssignmentId" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.AuthorizationExtensions.GetRoleAssignments(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)">
            <summary>
            Gets a collection of RoleAssignmentResources in the ArmClient.
            <item>
            <term>Mocking</term>
            <description>To mock this method, please mock <see cref="M:Azure.ResourceManager.Authorization.Mocking.MockableAuthorizationArmClient.GetRoleAssignments(Azure.Core.ResourceIdentifier)" /> instead.</description>
            </item>
            </summary>
            <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
            <param name="scope"> The scope that the resource will apply against. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="client" /> is null. </exception>
            <returns> An object representing collection of RoleAssignmentResources and their operations over a RoleAssignmentResource. </returns>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.AuthorizationExtensions.GetRoleAssignmentAsync(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Get a role assignment by scope and name.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/{scope}/providers/Microsoft.Authorization/roleAssignments/{roleAssignmentName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>RoleAssignments_Get</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2022-04-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.Authorization.RoleAssignmentResource" /></description>
            </item>
            </list>
            <item>
            <term>Mocking</term>
            <description>To mock this method, please mock <see cref="M:Azure.ResourceManager.Authorization.Mocking.MockableAuthorizationArmClient.GetRoleAssignmentAsync(Azure.Core.ResourceIdentifier,System.String,System.String,System.Threading.CancellationToken)" /> instead.</description>
            </item>
            </summary>
            <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
            <param name="scope"> The scope that the resource will apply against. </param>
            <param name="roleAssignmentName"> The name of the role assignment. It can be any valid GUID. </param>
            <param name="tenantId"> Tenant ID for cross-tenant request. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="client" /> or <paramref name="roleAssignmentName" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.AuthorizationExtensions.GetRoleAssignment(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Get a role assignment by scope and name.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/{scope}/providers/Microsoft.Authorization/roleAssignments/{roleAssignmentName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>RoleAssignments_Get</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2022-04-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.Authorization.RoleAssignmentResource" /></description>
            </item>
            </list>
            <item>
            <term>Mocking</term>
            <description>To mock this method, please mock <see cref="M:Azure.ResourceManager.Authorization.Mocking.MockableAuthorizationArmClient.GetRoleAssignment(Azure.Core.ResourceIdentifier,System.String,System.String,System.Threading.CancellationToken)" /> instead.</description>
            </item>
            </summary>
            <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
            <param name="scope"> The scope that the resource will apply against. </param>
            <param name="roleAssignmentName"> The name of the role assignment. It can be any valid GUID. </param>
            <param name="tenantId"> Tenant ID for cross-tenant request. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="client" /> or <paramref name="roleAssignmentName" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.AuthorizationExtensions.GetAuthorizationRoleDefinitions(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)">
            <summary>
            Gets a collection of AuthorizationRoleDefinitionResources in the ArmClient.
            <item>
            <term>Mocking</term>
            <description>To mock this method, please mock <see cref="M:Azure.ResourceManager.Authorization.Mocking.MockableAuthorizationArmClient.GetAuthorizationRoleDefinitions(Azure.Core.ResourceIdentifier)" /> instead.</description>
            </item>
            </summary>
            <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
            <param name="scope"> The scope that the resource will apply against. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="client" /> is null. </exception>
            <returns> An object representing collection of AuthorizationRoleDefinitionResources and their operations over a AuthorizationRoleDefinitionResource. </returns>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.AuthorizationExtensions.GetAuthorizationRoleDefinitionAsync(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier,Azure.Core.ResourceIdentifier,System.Threading.CancellationToken)">
            <summary>
            Get role definition by name (GUID).
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/{scope}/providers/Microsoft.Authorization/roleDefinitions/{roleDefinitionId}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>RoleDefinitions_Get</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2022-04-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.Authorization.AuthorizationRoleDefinitionResource" /></description>
            </item>
            </list>
            <item>
            <term>Mocking</term>
            <description>To mock this method, please mock <see cref="M:Azure.ResourceManager.Authorization.Mocking.MockableAuthorizationArmClient.GetAuthorizationRoleDefinitionAsync(Azure.Core.ResourceIdentifier,Azure.Core.ResourceIdentifier,System.Threading.CancellationToken)" /> instead.</description>
            </item>
            </summary>
            <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
            <param name="scope"> The scope that the resource will apply against. </param>
            <param name="roleDefinitionId"> The ID of the role definition. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="client" /> or <paramref name="roleDefinitionId" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.AuthorizationExtensions.GetAuthorizationRoleDefinition(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier,Azure.Core.ResourceIdentifier,System.Threading.CancellationToken)">
            <summary>
            Get role definition by name (GUID).
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/{scope}/providers/Microsoft.Authorization/roleDefinitions/{roleDefinitionId}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>RoleDefinitions_Get</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2022-04-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.Authorization.AuthorizationRoleDefinitionResource" /></description>
            </item>
            </list>
            <item>
            <term>Mocking</term>
            <description>To mock this method, please mock <see cref="M:Azure.ResourceManager.Authorization.Mocking.MockableAuthorizationArmClient.GetAuthorizationRoleDefinition(Azure.Core.ResourceIdentifier,Azure.Core.ResourceIdentifier,System.Threading.CancellationToken)" /> instead.</description>
            </item>
            </summary>
            <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
            <param name="scope"> The scope that the resource will apply against. </param>
            <param name="roleDefinitionId"> The ID of the role definition. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="client" /> or <paramref name="roleDefinitionId" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.AuthorizationExtensions.GetRoleAssignmentSchedules(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)">
            <summary>
            Gets a collection of RoleAssignmentScheduleResources in the ArmClient.
            <item>
            <term>Mocking</term>
            <description>To mock this method, please mock <see cref="M:Azure.ResourceManager.Authorization.Mocking.MockableAuthorizationArmClient.GetRoleAssignmentSchedules(Azure.Core.ResourceIdentifier)" /> instead.</description>
            </item>
            </summary>
            <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
            <param name="scope"> The scope that the resource will apply against. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="client" /> is null. </exception>
            <returns> An object representing collection of RoleAssignmentScheduleResources and their operations over a RoleAssignmentScheduleResource. </returns>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.AuthorizationExtensions.GetRoleAssignmentScheduleAsync(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier,System.String,System.Threading.CancellationToken)">
            <summary>
            Get the specified role assignment schedule for a resource scope
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/{scope}/providers/Microsoft.Authorization/roleAssignmentSchedules/{roleAssignmentScheduleName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>RoleAssignmentSchedules_Get</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2020-10-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.Authorization.RoleAssignmentScheduleResource" /></description>
            </item>
            </list>
            <item>
            <term>Mocking</term>
            <description>To mock this method, please mock <see cref="M:Azure.ResourceManager.Authorization.Mocking.MockableAuthorizationArmClient.GetRoleAssignmentScheduleAsync(Azure.Core.ResourceIdentifier,System.String,System.Threading.CancellationToken)" /> instead.</description>
            </item>
            </summary>
            <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
            <param name="scope"> The scope that the resource will apply against. </param>
            <param name="roleAssignmentScheduleName"> The name (guid) of the role assignment schedule to get. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="client" /> or <paramref name="roleAssignmentScheduleName" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="roleAssignmentScheduleName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.AuthorizationExtensions.GetRoleAssignmentSchedule(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier,System.String,System.Threading.CancellationToken)">
            <summary>
            Get the specified role assignment schedule for a resource scope
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/{scope}/providers/Microsoft.Authorization/roleAssignmentSchedules/{roleAssignmentScheduleName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>RoleAssignmentSchedules_Get</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2020-10-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.Authorization.RoleAssignmentScheduleResource" /></description>
            </item>
            </list>
            <item>
            <term>Mocking</term>
            <description>To mock this method, please mock <see cref="M:Azure.ResourceManager.Authorization.Mocking.MockableAuthorizationArmClient.GetRoleAssignmentSchedule(Azure.Core.ResourceIdentifier,System.String,System.Threading.CancellationToken)" /> instead.</description>
            </item>
            </summary>
            <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
            <param name="scope"> The scope that the resource will apply against. </param>
            <param name="roleAssignmentScheduleName"> The name (guid) of the role assignment schedule to get. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="client" /> or <paramref name="roleAssignmentScheduleName" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="roleAssignmentScheduleName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.AuthorizationExtensions.GetRoleAssignmentScheduleInstances(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)">
            <summary>
            Gets a collection of RoleAssignmentScheduleInstanceResources in the ArmClient.
            <item>
            <term>Mocking</term>
            <description>To mock this method, please mock <see cref="M:Azure.ResourceManager.Authorization.Mocking.MockableAuthorizationArmClient.GetRoleAssignmentScheduleInstances(Azure.Core.ResourceIdentifier)" /> instead.</description>
            </item>
            </summary>
            <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
            <param name="scope"> The scope that the resource will apply against. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="client" /> is null. </exception>
            <returns> An object representing collection of RoleAssignmentScheduleInstanceResources and their operations over a RoleAssignmentScheduleInstanceResource. </returns>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.AuthorizationExtensions.GetRoleAssignmentScheduleInstanceAsync(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier,System.String,System.Threading.CancellationToken)">
            <summary>
            Gets the specified role assignment schedule instance.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/{scope}/providers/Microsoft.Authorization/roleAssignmentScheduleInstances/{roleAssignmentScheduleInstanceName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>RoleAssignmentScheduleInstances_Get</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2020-10-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.Authorization.RoleAssignmentScheduleInstanceResource" /></description>
            </item>
            </list>
            <item>
            <term>Mocking</term>
            <description>To mock this method, please mock <see cref="M:Azure.ResourceManager.Authorization.Mocking.MockableAuthorizationArmClient.GetRoleAssignmentScheduleInstanceAsync(Azure.Core.ResourceIdentifier,System.String,System.Threading.CancellationToken)" /> instead.</description>
            </item>
            </summary>
            <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
            <param name="scope"> The scope that the resource will apply against. </param>
            <param name="roleAssignmentScheduleInstanceName"> The name (hash of schedule name + time) of the role assignment schedule to get. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="client" /> or <paramref name="roleAssignmentScheduleInstanceName" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="roleAssignmentScheduleInstanceName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.AuthorizationExtensions.GetRoleAssignmentScheduleInstance(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier,System.String,System.Threading.CancellationToken)">
            <summary>
            Gets the specified role assignment schedule instance.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/{scope}/providers/Microsoft.Authorization/roleAssignmentScheduleInstances/{roleAssignmentScheduleInstanceName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>RoleAssignmentScheduleInstances_Get</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2020-10-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.Authorization.RoleAssignmentScheduleInstanceResource" /></description>
            </item>
            </list>
            <item>
            <term>Mocking</term>
            <description>To mock this method, please mock <see cref="M:Azure.ResourceManager.Authorization.Mocking.MockableAuthorizationArmClient.GetRoleAssignmentScheduleInstance(Azure.Core.ResourceIdentifier,System.String,System.Threading.CancellationToken)" /> instead.</description>
            </item>
            </summary>
            <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
            <param name="scope"> The scope that the resource will apply against. </param>
            <param name="roleAssignmentScheduleInstanceName"> The name (hash of schedule name + time) of the role assignment schedule to get. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="client" /> or <paramref name="roleAssignmentScheduleInstanceName" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="roleAssignmentScheduleInstanceName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.AuthorizationExtensions.GetRoleAssignmentScheduleRequests(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)">
            <summary>
            Gets a collection of RoleAssignmentScheduleRequestResources in the ArmClient.
            <item>
            <term>Mocking</term>
            <description>To mock this method, please mock <see cref="M:Azure.ResourceManager.Authorization.Mocking.MockableAuthorizationArmClient.GetRoleAssignmentScheduleRequests(Azure.Core.ResourceIdentifier)" /> instead.</description>
            </item>
            </summary>
            <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
            <param name="scope"> The scope that the resource will apply against. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="client" /> is null. </exception>
            <returns> An object representing collection of RoleAssignmentScheduleRequestResources and their operations over a RoleAssignmentScheduleRequestResource. </returns>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.AuthorizationExtensions.GetRoleAssignmentScheduleRequestAsync(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier,System.String,System.Threading.CancellationToken)">
            <summary>
            Get the specified role assignment schedule request.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/{scope}/providers/Microsoft.Authorization/roleAssignmentScheduleRequests/{roleAssignmentScheduleRequestName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>RoleAssignmentScheduleRequests_Get</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2020-10-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.Authorization.RoleAssignmentScheduleRequestResource" /></description>
            </item>
            </list>
            <item>
            <term>Mocking</term>
            <description>To mock this method, please mock <see cref="M:Azure.ResourceManager.Authorization.Mocking.MockableAuthorizationArmClient.GetRoleAssignmentScheduleRequestAsync(Azure.Core.ResourceIdentifier,System.String,System.Threading.CancellationToken)" /> instead.</description>
            </item>
            </summary>
            <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
            <param name="scope"> The scope that the resource will apply against. </param>
            <param name="roleAssignmentScheduleRequestName"> The name (guid) of the role assignment schedule request to get. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="client" /> or <paramref name="roleAssignmentScheduleRequestName" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="roleAssignmentScheduleRequestName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.AuthorizationExtensions.GetRoleAssignmentScheduleRequest(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier,System.String,System.Threading.CancellationToken)">
            <summary>
            Get the specified role assignment schedule request.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/{scope}/providers/Microsoft.Authorization/roleAssignmentScheduleRequests/{roleAssignmentScheduleRequestName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>RoleAssignmentScheduleRequests_Get</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2020-10-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.Authorization.RoleAssignmentScheduleRequestResource" /></description>
            </item>
            </list>
            <item>
            <term>Mocking</term>
            <description>To mock this method, please mock <see cref="M:Azure.ResourceManager.Authorization.Mocking.MockableAuthorizationArmClient.GetRoleAssignmentScheduleRequest(Azure.Core.ResourceIdentifier,System.String,System.Threading.CancellationToken)" /> instead.</description>
            </item>
            </summary>
            <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
            <param name="scope"> The scope that the resource will apply against. </param>
            <param name="roleAssignmentScheduleRequestName"> The name (guid) of the role assignment schedule request to get. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="client" /> or <paramref name="roleAssignmentScheduleRequestName" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="roleAssignmentScheduleRequestName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.AuthorizationExtensions.GetRoleEligibilitySchedules(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)">
            <summary>
            Gets a collection of RoleEligibilityScheduleResources in the ArmClient.
            <item>
            <term>Mocking</term>
            <description>To mock this method, please mock <see cref="M:Azure.ResourceManager.Authorization.Mocking.MockableAuthorizationArmClient.GetRoleEligibilitySchedules(Azure.Core.ResourceIdentifier)" /> instead.</description>
            </item>
            </summary>
            <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
            <param name="scope"> The scope that the resource will apply against. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="client" /> is null. </exception>
            <returns> An object representing collection of RoleEligibilityScheduleResources and their operations over a RoleEligibilityScheduleResource. </returns>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.AuthorizationExtensions.GetRoleEligibilityScheduleAsync(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier,System.String,System.Threading.CancellationToken)">
            <summary>
            Get the specified role eligibility schedule for a resource scope
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/{scope}/providers/Microsoft.Authorization/roleEligibilitySchedules/{roleEligibilityScheduleName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>RoleEligibilitySchedules_Get</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2020-10-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.Authorization.RoleEligibilityScheduleResource" /></description>
            </item>
            </list>
            <item>
            <term>Mocking</term>
            <description>To mock this method, please mock <see cref="M:Azure.ResourceManager.Authorization.Mocking.MockableAuthorizationArmClient.GetRoleEligibilityScheduleAsync(Azure.Core.ResourceIdentifier,System.String,System.Threading.CancellationToken)" /> instead.</description>
            </item>
            </summary>
            <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
            <param name="scope"> The scope that the resource will apply against. </param>
            <param name="roleEligibilityScheduleName"> The name (guid) of the role eligibility schedule to get. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="client" /> or <paramref name="roleEligibilityScheduleName" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="roleEligibilityScheduleName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.AuthorizationExtensions.GetRoleEligibilitySchedule(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier,System.String,System.Threading.CancellationToken)">
            <summary>
            Get the specified role eligibility schedule for a resource scope
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/{scope}/providers/Microsoft.Authorization/roleEligibilitySchedules/{roleEligibilityScheduleName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>RoleEligibilitySchedules_Get</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2020-10-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.Authorization.RoleEligibilityScheduleResource" /></description>
            </item>
            </list>
            <item>
            <term>Mocking</term>
            <description>To mock this method, please mock <see cref="M:Azure.ResourceManager.Authorization.Mocking.MockableAuthorizationArmClient.GetRoleEligibilitySchedule(Azure.Core.ResourceIdentifier,System.String,System.Threading.CancellationToken)" /> instead.</description>
            </item>
            </summary>
            <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
            <param name="scope"> The scope that the resource will apply against. </param>
            <param name="roleEligibilityScheduleName"> The name (guid) of the role eligibility schedule to get. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="client" /> or <paramref name="roleEligibilityScheduleName" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="roleEligibilityScheduleName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.AuthorizationExtensions.GetRoleEligibilityScheduleInstances(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)">
            <summary>
            Gets a collection of RoleEligibilityScheduleInstanceResources in the ArmClient.
            <item>
            <term>Mocking</term>
            <description>To mock this method, please mock <see cref="M:Azure.ResourceManager.Authorization.Mocking.MockableAuthorizationArmClient.GetRoleEligibilityScheduleInstances(Azure.Core.ResourceIdentifier)" /> instead.</description>
            </item>
            </summary>
            <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
            <param name="scope"> The scope that the resource will apply against. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="client" /> is null. </exception>
            <returns> An object representing collection of RoleEligibilityScheduleInstanceResources and their operations over a RoleEligibilityScheduleInstanceResource. </returns>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.AuthorizationExtensions.GetRoleEligibilityScheduleInstanceAsync(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier,System.String,System.Threading.CancellationToken)">
            <summary>
            Gets the specified role eligibility schedule instance.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/{scope}/providers/Microsoft.Authorization/roleEligibilityScheduleInstances/{roleEligibilityScheduleInstanceName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>RoleEligibilityScheduleInstances_Get</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2020-10-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.Authorization.RoleEligibilityScheduleInstanceResource" /></description>
            </item>
            </list>
            <item>
            <term>Mocking</term>
            <description>To mock this method, please mock <see cref="M:Azure.ResourceManager.Authorization.Mocking.MockableAuthorizationArmClient.GetRoleEligibilityScheduleInstanceAsync(Azure.Core.ResourceIdentifier,System.String,System.Threading.CancellationToken)" /> instead.</description>
            </item>
            </summary>
            <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
            <param name="scope"> The scope that the resource will apply against. </param>
            <param name="roleEligibilityScheduleInstanceName"> The name (hash of schedule name + time) of the role eligibility schedule to get. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="client" /> or <paramref name="roleEligibilityScheduleInstanceName" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="roleEligibilityScheduleInstanceName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.AuthorizationExtensions.GetRoleEligibilityScheduleInstance(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier,System.String,System.Threading.CancellationToken)">
            <summary>
            Gets the specified role eligibility schedule instance.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/{scope}/providers/Microsoft.Authorization/roleEligibilityScheduleInstances/{roleEligibilityScheduleInstanceName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>RoleEligibilityScheduleInstances_Get</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2020-10-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.Authorization.RoleEligibilityScheduleInstanceResource" /></description>
            </item>
            </list>
            <item>
            <term>Mocking</term>
            <description>To mock this method, please mock <see cref="M:Azure.ResourceManager.Authorization.Mocking.MockableAuthorizationArmClient.GetRoleEligibilityScheduleInstance(Azure.Core.ResourceIdentifier,System.String,System.Threading.CancellationToken)" /> instead.</description>
            </item>
            </summary>
            <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
            <param name="scope"> The scope that the resource will apply against. </param>
            <param name="roleEligibilityScheduleInstanceName"> The name (hash of schedule name + time) of the role eligibility schedule to get. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="client" /> or <paramref name="roleEligibilityScheduleInstanceName" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="roleEligibilityScheduleInstanceName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.AuthorizationExtensions.GetRoleEligibilityScheduleRequests(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)">
            <summary>
            Gets a collection of RoleEligibilityScheduleRequestResources in the ArmClient.
            <item>
            <term>Mocking</term>
            <description>To mock this method, please mock <see cref="M:Azure.ResourceManager.Authorization.Mocking.MockableAuthorizationArmClient.GetRoleEligibilityScheduleRequests(Azure.Core.ResourceIdentifier)" /> instead.</description>
            </item>
            </summary>
            <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
            <param name="scope"> The scope that the resource will apply against. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="client" /> is null. </exception>
            <returns> An object representing collection of RoleEligibilityScheduleRequestResources and their operations over a RoleEligibilityScheduleRequestResource. </returns>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.AuthorizationExtensions.GetRoleEligibilityScheduleRequestAsync(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier,System.String,System.Threading.CancellationToken)">
            <summary>
            Get the specified role eligibility schedule request.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/{scope}/providers/Microsoft.Authorization/roleEligibilityScheduleRequests/{roleEligibilityScheduleRequestName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>RoleEligibilityScheduleRequests_Get</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2020-10-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.Authorization.RoleEligibilityScheduleRequestResource" /></description>
            </item>
            </list>
            <item>
            <term>Mocking</term>
            <description>To mock this method, please mock <see cref="M:Azure.ResourceManager.Authorization.Mocking.MockableAuthorizationArmClient.GetRoleEligibilityScheduleRequestAsync(Azure.Core.ResourceIdentifier,System.String,System.Threading.CancellationToken)" /> instead.</description>
            </item>
            </summary>
            <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
            <param name="scope"> The scope that the resource will apply against. </param>
            <param name="roleEligibilityScheduleRequestName"> The name (guid) of the role eligibility schedule request to get. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="client" /> or <paramref name="roleEligibilityScheduleRequestName" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="roleEligibilityScheduleRequestName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.AuthorizationExtensions.GetRoleEligibilityScheduleRequest(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier,System.String,System.Threading.CancellationToken)">
            <summary>
            Get the specified role eligibility schedule request.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/{scope}/providers/Microsoft.Authorization/roleEligibilityScheduleRequests/{roleEligibilityScheduleRequestName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>RoleEligibilityScheduleRequests_Get</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2020-10-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.Authorization.RoleEligibilityScheduleRequestResource" /></description>
            </item>
            </list>
            <item>
            <term>Mocking</term>
            <description>To mock this method, please mock <see cref="M:Azure.ResourceManager.Authorization.Mocking.MockableAuthorizationArmClient.GetRoleEligibilityScheduleRequest(Azure.Core.ResourceIdentifier,System.String,System.Threading.CancellationToken)" /> instead.</description>
            </item>
            </summary>
            <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
            <param name="scope"> The scope that the resource will apply against. </param>
            <param name="roleEligibilityScheduleRequestName"> The name (guid) of the role eligibility schedule request to get. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="client" /> or <paramref name="roleEligibilityScheduleRequestName" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="roleEligibilityScheduleRequestName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.AuthorizationExtensions.GetRoleManagementPolicies(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)">
            <summary>
            Gets a collection of RoleManagementPolicyResources in the ArmClient.
            <item>
            <term>Mocking</term>
            <description>To mock this method, please mock <see cref="M:Azure.ResourceManager.Authorization.Mocking.MockableAuthorizationArmClient.GetRoleManagementPolicies(Azure.Core.ResourceIdentifier)" /> instead.</description>
            </item>
            </summary>
            <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
            <param name="scope"> The scope that the resource will apply against. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="client" /> is null. </exception>
            <returns> An object representing collection of RoleManagementPolicyResources and their operations over a RoleManagementPolicyResource. </returns>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.AuthorizationExtensions.GetRoleManagementPolicyAsync(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier,System.String,System.Threading.CancellationToken)">
            <summary>
            Get the specified role management policy for a resource scope
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/{scope}/providers/Microsoft.Authorization/roleManagementPolicies/{roleManagementPolicyName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>RoleManagementPolicies_Get</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2020-10-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.Authorization.RoleManagementPolicyResource" /></description>
            </item>
            </list>
            <item>
            <term>Mocking</term>
            <description>To mock this method, please mock <see cref="M:Azure.ResourceManager.Authorization.Mocking.MockableAuthorizationArmClient.GetRoleManagementPolicyAsync(Azure.Core.ResourceIdentifier,System.String,System.Threading.CancellationToken)" /> instead.</description>
            </item>
            </summary>
            <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
            <param name="scope"> The scope that the resource will apply against. </param>
            <param name="roleManagementPolicyName"> The name (guid) of the role management policy to get. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="client" /> or <paramref name="roleManagementPolicyName" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="roleManagementPolicyName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.AuthorizationExtensions.GetRoleManagementPolicy(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier,System.String,System.Threading.CancellationToken)">
            <summary>
            Get the specified role management policy for a resource scope
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/{scope}/providers/Microsoft.Authorization/roleManagementPolicies/{roleManagementPolicyName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>RoleManagementPolicies_Get</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2020-10-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.Authorization.RoleManagementPolicyResource" /></description>
            </item>
            </list>
            <item>
            <term>Mocking</term>
            <description>To mock this method, please mock <see cref="M:Azure.ResourceManager.Authorization.Mocking.MockableAuthorizationArmClient.GetRoleManagementPolicy(Azure.Core.ResourceIdentifier,System.String,System.Threading.CancellationToken)" /> instead.</description>
            </item>
            </summary>
            <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
            <param name="scope"> The scope that the resource will apply against. </param>
            <param name="roleManagementPolicyName"> The name (guid) of the role management policy to get. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="client" /> or <paramref name="roleManagementPolicyName" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="roleManagementPolicyName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.AuthorizationExtensions.GetRoleManagementPolicyAssignments(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)">
            <summary>
            Gets a collection of RoleManagementPolicyAssignmentResources in the ArmClient.
            <item>
            <term>Mocking</term>
            <description>To mock this method, please mock <see cref="M:Azure.ResourceManager.Authorization.Mocking.MockableAuthorizationArmClient.GetRoleManagementPolicyAssignments(Azure.Core.ResourceIdentifier)" /> instead.</description>
            </item>
            </summary>
            <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
            <param name="scope"> The scope that the resource will apply against. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="client" /> is null. </exception>
            <returns> An object representing collection of RoleManagementPolicyAssignmentResources and their operations over a RoleManagementPolicyAssignmentResource. </returns>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.AuthorizationExtensions.GetRoleManagementPolicyAssignmentAsync(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier,System.String,System.Threading.CancellationToken)">
            <summary>
            Get the specified role management policy assignment for a resource scope
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/{scope}/providers/Microsoft.Authorization/roleManagementPolicyAssignments/{roleManagementPolicyAssignmentName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>RoleManagementPolicyAssignments_Get</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2020-10-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.Authorization.RoleManagementPolicyAssignmentResource" /></description>
            </item>
            </list>
            <item>
            <term>Mocking</term>
            <description>To mock this method, please mock <see cref="M:Azure.ResourceManager.Authorization.Mocking.MockableAuthorizationArmClient.GetRoleManagementPolicyAssignmentAsync(Azure.Core.ResourceIdentifier,System.String,System.Threading.CancellationToken)" /> instead.</description>
            </item>
            </summary>
            <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
            <param name="scope"> The scope that the resource will apply against. </param>
            <param name="roleManagementPolicyAssignmentName"> The name of format {guid_guid} the role management policy assignment to get. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="client" /> or <paramref name="roleManagementPolicyAssignmentName" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="roleManagementPolicyAssignmentName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.AuthorizationExtensions.GetRoleManagementPolicyAssignment(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier,System.String,System.Threading.CancellationToken)">
            <summary>
            Get the specified role management policy assignment for a resource scope
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/{scope}/providers/Microsoft.Authorization/roleManagementPolicyAssignments/{roleManagementPolicyAssignmentName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>RoleManagementPolicyAssignments_Get</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2020-10-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.Authorization.RoleManagementPolicyAssignmentResource" /></description>
            </item>
            </list>
            <item>
            <term>Mocking</term>
            <description>To mock this method, please mock <see cref="M:Azure.ResourceManager.Authorization.Mocking.MockableAuthorizationArmClient.GetRoleManagementPolicyAssignment(Azure.Core.ResourceIdentifier,System.String,System.Threading.CancellationToken)" /> instead.</description>
            </item>
            </summary>
            <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
            <param name="scope"> The scope that the resource will apply against. </param>
            <param name="roleManagementPolicyAssignmentName"> The name of format {guid_guid} the role management policy assignment to get. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="client" /> or <paramref name="roleManagementPolicyAssignmentName" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="roleManagementPolicyAssignmentName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.AuthorizationExtensions.GetEligibleChildResourcesAsync(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier,System.String,System.Threading.CancellationToken)">
            <summary>
            Get the child resources of a resource on which user has eligible access
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/{scope}/providers/Microsoft.Authorization/eligibleChildResources</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>EligibleChildResources_Get</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2020-10-01</description>
            </item>
            </list>
            <item>
            <term>Mocking</term>
            <description>To mock this method, please mock <see cref="M:Azure.ResourceManager.Authorization.Mocking.MockableAuthorizationArmClient.GetEligibleChildResources(Azure.Core.ResourceIdentifier,System.String,System.Threading.CancellationToken)" /> instead.</description>
            </item>
            </summary>
            <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
            <param name="scope"> The scope that the resource will apply against. </param>
            <param name="filter"> The filter to apply on the operation. Use $filter=resourceType+eq+'Subscription' to filter on only resource of type = 'Subscription'. Use $filter=resourceType+eq+'subscription'+or+resourceType+eq+'resourcegroup' to filter on resource of type = 'Subscription' or 'ResourceGroup'. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="client" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.AuthorizationExtensions.GetEligibleChildResources(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier,System.String,System.Threading.CancellationToken)">
            <summary>
            Get the child resources of a resource on which user has eligible access
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/{scope}/providers/Microsoft.Authorization/eligibleChildResources</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>EligibleChildResources_Get</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2020-10-01</description>
            </item>
            </list>
            <item>
            <term>Mocking</term>
            <description>To mock this method, please mock <see cref="M:Azure.ResourceManager.Authorization.Mocking.MockableAuthorizationArmClient.GetEligibleChildResources(Azure.Core.ResourceIdentifier,System.String,System.Threading.CancellationToken)" /> instead.</description>
            </item>
            </summary>
            <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
            <param name="scope"> The scope that the resource will apply against. </param>
            <param name="filter"> The filter to apply on the operation. Use $filter=resourceType+eq+'Subscription' to filter on only resource of type = 'Subscription'. Use $filter=resourceType+eq+'subscription'+or+resourceType+eq+'resourcegroup' to filter on resource of type = 'Subscription' or 'ResourceGroup'. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="client" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.AuthorizationExtensions.GetDenyAssignmentResource(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)">
            <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Authorization.DenyAssignmentResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Authorization.DenyAssignmentResource.CreateResourceIdentifier(System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.Authorization.DenyAssignmentResource" /> <see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            <item>
            <term>Mocking</term>
            <description>To mock this method, please mock <see cref="M:Azure.ResourceManager.Authorization.Mocking.MockableAuthorizationArmClient.GetDenyAssignmentResource(Azure.Core.ResourceIdentifier)" /> instead.</description>
            </item>
            </summary>
            <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
            <param name="id"> The resource ID of the resource to get. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="client" /> is null. </exception>
            <returns> Returns a <see cref="T:Azure.ResourceManager.Authorization.DenyAssignmentResource" /> object. </returns>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.AuthorizationExtensions.GetAuthorizationProviderOperationsMetadataResource(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)">
            <summary>
            Gets an object representing an <see cref="T:Azure.ResourceManager.Authorization.AuthorizationProviderOperationsMetadataResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Authorization.AuthorizationProviderOperationsMetadataResource.CreateResourceIdentifier(System.String)" /> to create an <see cref="T:Azure.ResourceManager.Authorization.AuthorizationProviderOperationsMetadataResource" /> <see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            <item>
            <term>Mocking</term>
            <description>To mock this method, please mock <see cref="M:Azure.ResourceManager.Authorization.Mocking.MockableAuthorizationArmClient.GetAuthorizationProviderOperationsMetadataResource(Azure.Core.ResourceIdentifier)" /> instead.</description>
            </item>
            </summary>
            <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
            <param name="id"> The resource ID of the resource to get. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="client" /> is null. </exception>
            <returns> Returns a <see cref="T:Azure.ResourceManager.Authorization.AuthorizationProviderOperationsMetadataResource" /> object. </returns>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.AuthorizationExtensions.GetRoleAssignmentResource(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)">
            <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Authorization.RoleAssignmentResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Authorization.RoleAssignmentResource.CreateResourceIdentifier(System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.Authorization.RoleAssignmentResource" /> <see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            <item>
            <term>Mocking</term>
            <description>To mock this method, please mock <see cref="M:Azure.ResourceManager.Authorization.Mocking.MockableAuthorizationArmClient.GetRoleAssignmentResource(Azure.Core.ResourceIdentifier)" /> instead.</description>
            </item>
            </summary>
            <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
            <param name="id"> The resource ID of the resource to get. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="client" /> is null. </exception>
            <returns> Returns a <see cref="T:Azure.ResourceManager.Authorization.RoleAssignmentResource" /> object. </returns>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.AuthorizationExtensions.GetAuthorizationRoleDefinitionResource(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)">
            <summary>
            Gets an object representing an <see cref="T:Azure.ResourceManager.Authorization.AuthorizationRoleDefinitionResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Authorization.AuthorizationRoleDefinitionResource.CreateResourceIdentifier(System.String,Azure.Core.ResourceIdentifier)" /> to create an <see cref="T:Azure.ResourceManager.Authorization.AuthorizationRoleDefinitionResource" /> <see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            <item>
            <term>Mocking</term>
            <description>To mock this method, please mock <see cref="M:Azure.ResourceManager.Authorization.Mocking.MockableAuthorizationArmClient.GetAuthorizationRoleDefinitionResource(Azure.Core.ResourceIdentifier)" /> instead.</description>
            </item>
            </summary>
            <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
            <param name="id"> The resource ID of the resource to get. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="client" /> is null. </exception>
            <returns> Returns a <see cref="T:Azure.ResourceManager.Authorization.AuthorizationRoleDefinitionResource" /> object. </returns>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.AuthorizationExtensions.GetRoleAssignmentScheduleResource(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)">
            <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Authorization.RoleAssignmentScheduleResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Authorization.RoleAssignmentScheduleResource.CreateResourceIdentifier(System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.Authorization.RoleAssignmentScheduleResource" /> <see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            <item>
            <term>Mocking</term>
            <description>To mock this method, please mock <see cref="M:Azure.ResourceManager.Authorization.Mocking.MockableAuthorizationArmClient.GetRoleAssignmentScheduleResource(Azure.Core.ResourceIdentifier)" /> instead.</description>
            </item>
            </summary>
            <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
            <param name="id"> The resource ID of the resource to get. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="client" /> is null. </exception>
            <returns> Returns a <see cref="T:Azure.ResourceManager.Authorization.RoleAssignmentScheduleResource" /> object. </returns>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.AuthorizationExtensions.GetRoleAssignmentScheduleInstanceResource(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)">
            <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Authorization.RoleAssignmentScheduleInstanceResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Authorization.RoleAssignmentScheduleInstanceResource.CreateResourceIdentifier(System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.Authorization.RoleAssignmentScheduleInstanceResource" /> <see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            <item>
            <term>Mocking</term>
            <description>To mock this method, please mock <see cref="M:Azure.ResourceManager.Authorization.Mocking.MockableAuthorizationArmClient.GetRoleAssignmentScheduleInstanceResource(Azure.Core.ResourceIdentifier)" /> instead.</description>
            </item>
            </summary>
            <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
            <param name="id"> The resource ID of the resource to get. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="client" /> is null. </exception>
            <returns> Returns a <see cref="T:Azure.ResourceManager.Authorization.RoleAssignmentScheduleInstanceResource" /> object. </returns>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.AuthorizationExtensions.GetRoleAssignmentScheduleRequestResource(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)">
            <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Authorization.RoleAssignmentScheduleRequestResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Authorization.RoleAssignmentScheduleRequestResource.CreateResourceIdentifier(System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.Authorization.RoleAssignmentScheduleRequestResource" /> <see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            <item>
            <term>Mocking</term>
            <description>To mock this method, please mock <see cref="M:Azure.ResourceManager.Authorization.Mocking.MockableAuthorizationArmClient.GetRoleAssignmentScheduleRequestResource(Azure.Core.ResourceIdentifier)" /> instead.</description>
            </item>
            </summary>
            <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
            <param name="id"> The resource ID of the resource to get. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="client" /> is null. </exception>
            <returns> Returns a <see cref="T:Azure.ResourceManager.Authorization.RoleAssignmentScheduleRequestResource" /> object. </returns>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.AuthorizationExtensions.GetRoleEligibilityScheduleResource(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)">
            <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Authorization.RoleEligibilityScheduleResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Authorization.RoleEligibilityScheduleResource.CreateResourceIdentifier(System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.Authorization.RoleEligibilityScheduleResource" /> <see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            <item>
            <term>Mocking</term>
            <description>To mock this method, please mock <see cref="M:Azure.ResourceManager.Authorization.Mocking.MockableAuthorizationArmClient.GetRoleEligibilityScheduleResource(Azure.Core.ResourceIdentifier)" /> instead.</description>
            </item>
            </summary>
            <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
            <param name="id"> The resource ID of the resource to get. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="client" /> is null. </exception>
            <returns> Returns a <see cref="T:Azure.ResourceManager.Authorization.RoleEligibilityScheduleResource" /> object. </returns>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.AuthorizationExtensions.GetRoleEligibilityScheduleInstanceResource(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)">
            <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Authorization.RoleEligibilityScheduleInstanceResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Authorization.RoleEligibilityScheduleInstanceResource.CreateResourceIdentifier(System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.Authorization.RoleEligibilityScheduleInstanceResource" /> <see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            <item>
            <term>Mocking</term>
            <description>To mock this method, please mock <see cref="M:Azure.ResourceManager.Authorization.Mocking.MockableAuthorizationArmClient.GetRoleEligibilityScheduleInstanceResource(Azure.Core.ResourceIdentifier)" /> instead.</description>
            </item>
            </summary>
            <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
            <param name="id"> The resource ID of the resource to get. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="client" /> is null. </exception>
            <returns> Returns a <see cref="T:Azure.ResourceManager.Authorization.RoleEligibilityScheduleInstanceResource" /> object. </returns>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.AuthorizationExtensions.GetRoleEligibilityScheduleRequestResource(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)">
            <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Authorization.RoleEligibilityScheduleRequestResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Authorization.RoleEligibilityScheduleRequestResource.CreateResourceIdentifier(System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.Authorization.RoleEligibilityScheduleRequestResource" /> <see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            <item>
            <term>Mocking</term>
            <description>To mock this method, please mock <see cref="M:Azure.ResourceManager.Authorization.Mocking.MockableAuthorizationArmClient.GetRoleEligibilityScheduleRequestResource(Azure.Core.ResourceIdentifier)" /> instead.</description>
            </item>
            </summary>
            <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
            <param name="id"> The resource ID of the resource to get. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="client" /> is null. </exception>
            <returns> Returns a <see cref="T:Azure.ResourceManager.Authorization.RoleEligibilityScheduleRequestResource" /> object. </returns>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.AuthorizationExtensions.GetRoleManagementPolicyResource(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)">
            <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Authorization.RoleManagementPolicyResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Authorization.RoleManagementPolicyResource.CreateResourceIdentifier(System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.Authorization.RoleManagementPolicyResource" /> <see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            <item>
            <term>Mocking</term>
            <description>To mock this method, please mock <see cref="M:Azure.ResourceManager.Authorization.Mocking.MockableAuthorizationArmClient.GetRoleManagementPolicyResource(Azure.Core.ResourceIdentifier)" /> instead.</description>
            </item>
            </summary>
            <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
            <param name="id"> The resource ID of the resource to get. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="client" /> is null. </exception>
            <returns> Returns a <see cref="T:Azure.ResourceManager.Authorization.RoleManagementPolicyResource" /> object. </returns>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.AuthorizationExtensions.GetRoleManagementPolicyAssignmentResource(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)">
            <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Authorization.RoleManagementPolicyAssignmentResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Authorization.RoleManagementPolicyAssignmentResource.CreateResourceIdentifier(System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.Authorization.RoleManagementPolicyAssignmentResource" /> <see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            <item>
            <term>Mocking</term>
            <description>To mock this method, please mock <see cref="M:Azure.ResourceManager.Authorization.Mocking.MockableAuthorizationArmClient.GetRoleManagementPolicyAssignmentResource(Azure.Core.ResourceIdentifier)" /> instead.</description>
            </item>
            </summary>
            <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
            <param name="id"> The resource ID of the resource to get. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="client" /> is null. </exception>
            <returns> Returns a <see cref="T:Azure.ResourceManager.Authorization.RoleManagementPolicyAssignmentResource" /> object. </returns>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.AuthorizationExtensions.GetDenyAssignments(Azure.ResourceManager.ArmResource)">
            <summary>
            Gets a collection of DenyAssignmentResources in the ArmResource.
            <item>
            <term>Mocking</term>
            <description>To mock this method, please mock <see cref="M:Azure.ResourceManager.Authorization.Mocking.MockableAuthorizationArmResource.GetDenyAssignments" /> instead.</description>
            </item>
            </summary>
            <param name="armResource"> The <see cref="T:Azure.ResourceManager.ArmResource" /> instance the method will execute against. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="armResource" /> is null. </exception>
            <returns> An object representing collection of DenyAssignmentResources and their operations over a DenyAssignmentResource. </returns>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.AuthorizationExtensions.GetDenyAssignmentAsync(Azure.ResourceManager.ArmResource,System.String,System.Threading.CancellationToken)">
            <summary>
            Get the specified deny assignment.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/{scope}/providers/Microsoft.Authorization/denyAssignments/{denyAssignmentId}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>DenyAssignments_Get</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2022-04-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.Authorization.DenyAssignmentResource" /></description>
            </item>
            </list>
            <item>
            <term>Mocking</term>
            <description>To mock this method, please mock <see cref="M:Azure.ResourceManager.Authorization.Mocking.MockableAuthorizationArmResource.GetDenyAssignmentAsync(System.String,System.Threading.CancellationToken)" /> instead.</description>
            </item>
            </summary>
            <param name="armResource"> The <see cref="T:Azure.ResourceManager.ArmResource" /> instance the method will execute against. </param>
            <param name="denyAssignmentId"> The ID of the deny assignment to get. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="armResource" /> or <paramref name="denyAssignmentId" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="denyAssignmentId" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.AuthorizationExtensions.GetDenyAssignment(Azure.ResourceManager.ArmResource,System.String,System.Threading.CancellationToken)">
            <summary>
            Get the specified deny assignment.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/{scope}/providers/Microsoft.Authorization/denyAssignments/{denyAssignmentId}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>DenyAssignments_Get</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2022-04-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.Authorization.DenyAssignmentResource" /></description>
            </item>
            </list>
            <item>
            <term>Mocking</term>
            <description>To mock this method, please mock <see cref="M:Azure.ResourceManager.Authorization.Mocking.MockableAuthorizationArmResource.GetDenyAssignment(System.String,System.Threading.CancellationToken)" /> instead.</description>
            </item>
            </summary>
            <param name="armResource"> The <see cref="T:Azure.ResourceManager.ArmResource" /> instance the method will execute against. </param>
            <param name="denyAssignmentId"> The ID of the deny assignment to get. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="armResource" /> or <paramref name="denyAssignmentId" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="denyAssignmentId" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.AuthorizationExtensions.GetRoleAssignments(Azure.ResourceManager.ArmResource)">
            <summary>
            Gets a collection of RoleAssignmentResources in the ArmResource.
            <item>
            <term>Mocking</term>
            <description>To mock this method, please mock <see cref="M:Azure.ResourceManager.Authorization.Mocking.MockableAuthorizationArmResource.GetRoleAssignments" /> instead.</description>
            </item>
            </summary>
            <param name="armResource"> The <see cref="T:Azure.ResourceManager.ArmResource" /> instance the method will execute against. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="armResource" /> is null. </exception>
            <returns> An object representing collection of RoleAssignmentResources and their operations over a RoleAssignmentResource. </returns>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.AuthorizationExtensions.GetRoleAssignmentAsync(Azure.ResourceManager.ArmResource,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Get a role assignment by scope and name.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/{scope}/providers/Microsoft.Authorization/roleAssignments/{roleAssignmentName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>RoleAssignments_Get</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2022-04-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.Authorization.RoleAssignmentResource" /></description>
            </item>
            </list>
            <item>
            <term>Mocking</term>
            <description>To mock this method, please mock <see cref="M:Azure.ResourceManager.Authorization.Mocking.MockableAuthorizationArmResource.GetRoleAssignmentAsync(System.String,System.String,System.Threading.CancellationToken)" /> instead.</description>
            </item>
            </summary>
            <param name="armResource"> The <see cref="T:Azure.ResourceManager.ArmResource" /> instance the method will execute against. </param>
            <param name="roleAssignmentName"> The name of the role assignment. It can be any valid GUID. </param>
            <param name="tenantId"> Tenant ID for cross-tenant request. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="armResource" /> or <paramref name="roleAssignmentName" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.AuthorizationExtensions.GetRoleAssignment(Azure.ResourceManager.ArmResource,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Get a role assignment by scope and name.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/{scope}/providers/Microsoft.Authorization/roleAssignments/{roleAssignmentName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>RoleAssignments_Get</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2022-04-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.Authorization.RoleAssignmentResource" /></description>
            </item>
            </list>
            <item>
            <term>Mocking</term>
            <description>To mock this method, please mock <see cref="M:Azure.ResourceManager.Authorization.Mocking.MockableAuthorizationArmResource.GetRoleAssignment(System.String,System.String,System.Threading.CancellationToken)" /> instead.</description>
            </item>
            </summary>
            <param name="armResource"> The <see cref="T:Azure.ResourceManager.ArmResource" /> instance the method will execute against. </param>
            <param name="roleAssignmentName"> The name of the role assignment. It can be any valid GUID. </param>
            <param name="tenantId"> Tenant ID for cross-tenant request. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="armResource" /> or <paramref name="roleAssignmentName" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.AuthorizationExtensions.GetAuthorizationRoleDefinitions(Azure.ResourceManager.ArmResource)">
            <summary>
            Gets a collection of AuthorizationRoleDefinitionResources in the ArmResource.
            <item>
            <term>Mocking</term>
            <description>To mock this method, please mock <see cref="M:Azure.ResourceManager.Authorization.Mocking.MockableAuthorizationArmResource.GetAuthorizationRoleDefinitions" /> instead.</description>
            </item>
            </summary>
            <param name="armResource"> The <see cref="T:Azure.ResourceManager.ArmResource" /> instance the method will execute against. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="armResource" /> is null. </exception>
            <returns> An object representing collection of AuthorizationRoleDefinitionResources and their operations over a AuthorizationRoleDefinitionResource. </returns>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.AuthorizationExtensions.GetAuthorizationRoleDefinitionAsync(Azure.ResourceManager.ArmResource,Azure.Core.ResourceIdentifier,System.Threading.CancellationToken)">
            <summary>
            Get role definition by name (GUID).
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/{scope}/providers/Microsoft.Authorization/roleDefinitions/{roleDefinitionId}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>RoleDefinitions_Get</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2022-04-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.Authorization.AuthorizationRoleDefinitionResource" /></description>
            </item>
            </list>
            <item>
            <term>Mocking</term>
            <description>To mock this method, please mock <see cref="M:Azure.ResourceManager.Authorization.Mocking.MockableAuthorizationArmResource.GetAuthorizationRoleDefinitionAsync(Azure.Core.ResourceIdentifier,System.Threading.CancellationToken)" /> instead.</description>
            </item>
            </summary>
            <param name="armResource"> The <see cref="T:Azure.ResourceManager.ArmResource" /> instance the method will execute against. </param>
            <param name="roleDefinitionId"> The ID of the role definition. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="armResource" /> or <paramref name="roleDefinitionId" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.AuthorizationExtensions.GetAuthorizationRoleDefinition(Azure.ResourceManager.ArmResource,Azure.Core.ResourceIdentifier,System.Threading.CancellationToken)">
            <summary>
            Get role definition by name (GUID).
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/{scope}/providers/Microsoft.Authorization/roleDefinitions/{roleDefinitionId}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>RoleDefinitions_Get</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2022-04-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.Authorization.AuthorizationRoleDefinitionResource" /></description>
            </item>
            </list>
            <item>
            <term>Mocking</term>
            <description>To mock this method, please mock <see cref="M:Azure.ResourceManager.Authorization.Mocking.MockableAuthorizationArmResource.GetAuthorizationRoleDefinition(Azure.Core.ResourceIdentifier,System.Threading.CancellationToken)" /> instead.</description>
            </item>
            </summary>
            <param name="armResource"> The <see cref="T:Azure.ResourceManager.ArmResource" /> instance the method will execute against. </param>
            <param name="roleDefinitionId"> The ID of the role definition. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="armResource" /> or <paramref name="roleDefinitionId" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.AuthorizationExtensions.GetRoleAssignmentSchedules(Azure.ResourceManager.ArmResource)">
            <summary>
            Gets a collection of RoleAssignmentScheduleResources in the ArmResource.
            <item>
            <term>Mocking</term>
            <description>To mock this method, please mock <see cref="M:Azure.ResourceManager.Authorization.Mocking.MockableAuthorizationArmResource.GetRoleAssignmentSchedules" /> instead.</description>
            </item>
            </summary>
            <param name="armResource"> The <see cref="T:Azure.ResourceManager.ArmResource" /> instance the method will execute against. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="armResource" /> is null. </exception>
            <returns> An object representing collection of RoleAssignmentScheduleResources and their operations over a RoleAssignmentScheduleResource. </returns>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.AuthorizationExtensions.GetRoleAssignmentScheduleAsync(Azure.ResourceManager.ArmResource,System.String,System.Threading.CancellationToken)">
            <summary>
            Get the specified role assignment schedule for a resource scope
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/{scope}/providers/Microsoft.Authorization/roleAssignmentSchedules/{roleAssignmentScheduleName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>RoleAssignmentSchedules_Get</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2020-10-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.Authorization.RoleAssignmentScheduleResource" /></description>
            </item>
            </list>
            <item>
            <term>Mocking</term>
            <description>To mock this method, please mock <see cref="M:Azure.ResourceManager.Authorization.Mocking.MockableAuthorizationArmResource.GetRoleAssignmentScheduleAsync(System.String,System.Threading.CancellationToken)" /> instead.</description>
            </item>
            </summary>
            <param name="armResource"> The <see cref="T:Azure.ResourceManager.ArmResource" /> instance the method will execute against. </param>
            <param name="roleAssignmentScheduleName"> The name (guid) of the role assignment schedule to get. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="armResource" /> or <paramref name="roleAssignmentScheduleName" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="roleAssignmentScheduleName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.AuthorizationExtensions.GetRoleAssignmentSchedule(Azure.ResourceManager.ArmResource,System.String,System.Threading.CancellationToken)">
            <summary>
            Get the specified role assignment schedule for a resource scope
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/{scope}/providers/Microsoft.Authorization/roleAssignmentSchedules/{roleAssignmentScheduleName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>RoleAssignmentSchedules_Get</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2020-10-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.Authorization.RoleAssignmentScheduleResource" /></description>
            </item>
            </list>
            <item>
            <term>Mocking</term>
            <description>To mock this method, please mock <see cref="M:Azure.ResourceManager.Authorization.Mocking.MockableAuthorizationArmResource.GetRoleAssignmentSchedule(System.String,System.Threading.CancellationToken)" /> instead.</description>
            </item>
            </summary>
            <param name="armResource"> The <see cref="T:Azure.ResourceManager.ArmResource" /> instance the method will execute against. </param>
            <param name="roleAssignmentScheduleName"> The name (guid) of the role assignment schedule to get. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="armResource" /> or <paramref name="roleAssignmentScheduleName" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="roleAssignmentScheduleName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.AuthorizationExtensions.GetRoleAssignmentScheduleInstances(Azure.ResourceManager.ArmResource)">
            <summary>
            Gets a collection of RoleAssignmentScheduleInstanceResources in the ArmResource.
            <item>
            <term>Mocking</term>
            <description>To mock this method, please mock <see cref="M:Azure.ResourceManager.Authorization.Mocking.MockableAuthorizationArmResource.GetRoleAssignmentScheduleInstances" /> instead.</description>
            </item>
            </summary>
            <param name="armResource"> The <see cref="T:Azure.ResourceManager.ArmResource" /> instance the method will execute against. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="armResource" /> is null. </exception>
            <returns> An object representing collection of RoleAssignmentScheduleInstanceResources and their operations over a RoleAssignmentScheduleInstanceResource. </returns>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.AuthorizationExtensions.GetRoleAssignmentScheduleInstanceAsync(Azure.ResourceManager.ArmResource,System.String,System.Threading.CancellationToken)">
            <summary>
            Gets the specified role assignment schedule instance.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/{scope}/providers/Microsoft.Authorization/roleAssignmentScheduleInstances/{roleAssignmentScheduleInstanceName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>RoleAssignmentScheduleInstances_Get</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2020-10-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.Authorization.RoleAssignmentScheduleInstanceResource" /></description>
            </item>
            </list>
            <item>
            <term>Mocking</term>
            <description>To mock this method, please mock <see cref="M:Azure.ResourceManager.Authorization.Mocking.MockableAuthorizationArmResource.GetRoleAssignmentScheduleInstanceAsync(System.String,System.Threading.CancellationToken)" /> instead.</description>
            </item>
            </summary>
            <param name="armResource"> The <see cref="T:Azure.ResourceManager.ArmResource" /> instance the method will execute against. </param>
            <param name="roleAssignmentScheduleInstanceName"> The name (hash of schedule name + time) of the role assignment schedule to get. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="armResource" /> or <paramref name="roleAssignmentScheduleInstanceName" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="roleAssignmentScheduleInstanceName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.AuthorizationExtensions.GetRoleAssignmentScheduleInstance(Azure.ResourceManager.ArmResource,System.String,System.Threading.CancellationToken)">
            <summary>
            Gets the specified role assignment schedule instance.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/{scope}/providers/Microsoft.Authorization/roleAssignmentScheduleInstances/{roleAssignmentScheduleInstanceName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>RoleAssignmentScheduleInstances_Get</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2020-10-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.Authorization.RoleAssignmentScheduleInstanceResource" /></description>
            </item>
            </list>
            <item>
            <term>Mocking</term>
            <description>To mock this method, please mock <see cref="M:Azure.ResourceManager.Authorization.Mocking.MockableAuthorizationArmResource.GetRoleAssignmentScheduleInstance(System.String,System.Threading.CancellationToken)" /> instead.</description>
            </item>
            </summary>
            <param name="armResource"> The <see cref="T:Azure.ResourceManager.ArmResource" /> instance the method will execute against. </param>
            <param name="roleAssignmentScheduleInstanceName"> The name (hash of schedule name + time) of the role assignment schedule to get. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="armResource" /> or <paramref name="roleAssignmentScheduleInstanceName" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="roleAssignmentScheduleInstanceName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.AuthorizationExtensions.GetRoleAssignmentScheduleRequests(Azure.ResourceManager.ArmResource)">
            <summary>
            Gets a collection of RoleAssignmentScheduleRequestResources in the ArmResource.
            <item>
            <term>Mocking</term>
            <description>To mock this method, please mock <see cref="M:Azure.ResourceManager.Authorization.Mocking.MockableAuthorizationArmResource.GetRoleAssignmentScheduleRequests" /> instead.</description>
            </item>
            </summary>
            <param name="armResource"> The <see cref="T:Azure.ResourceManager.ArmResource" /> instance the method will execute against. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="armResource" /> is null. </exception>
            <returns> An object representing collection of RoleAssignmentScheduleRequestResources and their operations over a RoleAssignmentScheduleRequestResource. </returns>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.AuthorizationExtensions.GetRoleAssignmentScheduleRequestAsync(Azure.ResourceManager.ArmResource,System.String,System.Threading.CancellationToken)">
            <summary>
            Get the specified role assignment schedule request.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/{scope}/providers/Microsoft.Authorization/roleAssignmentScheduleRequests/{roleAssignmentScheduleRequestName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>RoleAssignmentScheduleRequests_Get</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2020-10-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.Authorization.RoleAssignmentScheduleRequestResource" /></description>
            </item>
            </list>
            <item>
            <term>Mocking</term>
            <description>To mock this method, please mock <see cref="M:Azure.ResourceManager.Authorization.Mocking.MockableAuthorizationArmResource.GetRoleAssignmentScheduleRequestAsync(System.String,System.Threading.CancellationToken)" /> instead.</description>
            </item>
            </summary>
            <param name="armResource"> The <see cref="T:Azure.ResourceManager.ArmResource" /> instance the method will execute against. </param>
            <param name="roleAssignmentScheduleRequestName"> The name (guid) of the role assignment schedule request to get. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="armResource" /> or <paramref name="roleAssignmentScheduleRequestName" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="roleAssignmentScheduleRequestName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.AuthorizationExtensions.GetRoleAssignmentScheduleRequest(Azure.ResourceManager.ArmResource,System.String,System.Threading.CancellationToken)">
            <summary>
            Get the specified role assignment schedule request.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/{scope}/providers/Microsoft.Authorization/roleAssignmentScheduleRequests/{roleAssignmentScheduleRequestName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>RoleAssignmentScheduleRequests_Get</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2020-10-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.Authorization.RoleAssignmentScheduleRequestResource" /></description>
            </item>
            </list>
            <item>
            <term>Mocking</term>
            <description>To mock this method, please mock <see cref="M:Azure.ResourceManager.Authorization.Mocking.MockableAuthorizationArmResource.GetRoleAssignmentScheduleRequest(System.String,System.Threading.CancellationToken)" /> instead.</description>
            </item>
            </summary>
            <param name="armResource"> The <see cref="T:Azure.ResourceManager.ArmResource" /> instance the method will execute against. </param>
            <param name="roleAssignmentScheduleRequestName"> The name (guid) of the role assignment schedule request to get. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="armResource" /> or <paramref name="roleAssignmentScheduleRequestName" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="roleAssignmentScheduleRequestName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.AuthorizationExtensions.GetRoleEligibilitySchedules(Azure.ResourceManager.ArmResource)">
            <summary>
            Gets a collection of RoleEligibilityScheduleResources in the ArmResource.
            <item>
            <term>Mocking</term>
            <description>To mock this method, please mock <see cref="M:Azure.ResourceManager.Authorization.Mocking.MockableAuthorizationArmResource.GetRoleEligibilitySchedules" /> instead.</description>
            </item>
            </summary>
            <param name="armResource"> The <see cref="T:Azure.ResourceManager.ArmResource" /> instance the method will execute against. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="armResource" /> is null. </exception>
            <returns> An object representing collection of RoleEligibilityScheduleResources and their operations over a RoleEligibilityScheduleResource. </returns>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.AuthorizationExtensions.GetRoleEligibilityScheduleAsync(Azure.ResourceManager.ArmResource,System.String,System.Threading.CancellationToken)">
            <summary>
            Get the specified role eligibility schedule for a resource scope
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/{scope}/providers/Microsoft.Authorization/roleEligibilitySchedules/{roleEligibilityScheduleName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>RoleEligibilitySchedules_Get</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2020-10-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.Authorization.RoleEligibilityScheduleResource" /></description>
            </item>
            </list>
            <item>
            <term>Mocking</term>
            <description>To mock this method, please mock <see cref="M:Azure.ResourceManager.Authorization.Mocking.MockableAuthorizationArmResource.GetRoleEligibilityScheduleAsync(System.String,System.Threading.CancellationToken)" /> instead.</description>
            </item>
            </summary>
            <param name="armResource"> The <see cref="T:Azure.ResourceManager.ArmResource" /> instance the method will execute against. </param>
            <param name="roleEligibilityScheduleName"> The name (guid) of the role eligibility schedule to get. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="armResource" /> or <paramref name="roleEligibilityScheduleName" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="roleEligibilityScheduleName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.AuthorizationExtensions.GetRoleEligibilitySchedule(Azure.ResourceManager.ArmResource,System.String,System.Threading.CancellationToken)">
            <summary>
            Get the specified role eligibility schedule for a resource scope
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/{scope}/providers/Microsoft.Authorization/roleEligibilitySchedules/{roleEligibilityScheduleName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>RoleEligibilitySchedules_Get</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2020-10-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.Authorization.RoleEligibilityScheduleResource" /></description>
            </item>
            </list>
            <item>
            <term>Mocking</term>
            <description>To mock this method, please mock <see cref="M:Azure.ResourceManager.Authorization.Mocking.MockableAuthorizationArmResource.GetRoleEligibilitySchedule(System.String,System.Threading.CancellationToken)" /> instead.</description>
            </item>
            </summary>
            <param name="armResource"> The <see cref="T:Azure.ResourceManager.ArmResource" /> instance the method will execute against. </param>
            <param name="roleEligibilityScheduleName"> The name (guid) of the role eligibility schedule to get. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="armResource" /> or <paramref name="roleEligibilityScheduleName" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="roleEligibilityScheduleName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.AuthorizationExtensions.GetRoleEligibilityScheduleInstances(Azure.ResourceManager.ArmResource)">
            <summary>
            Gets a collection of RoleEligibilityScheduleInstanceResources in the ArmResource.
            <item>
            <term>Mocking</term>
            <description>To mock this method, please mock <see cref="M:Azure.ResourceManager.Authorization.Mocking.MockableAuthorizationArmResource.GetRoleEligibilityScheduleInstances" /> instead.</description>
            </item>
            </summary>
            <param name="armResource"> The <see cref="T:Azure.ResourceManager.ArmResource" /> instance the method will execute against. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="armResource" /> is null. </exception>
            <returns> An object representing collection of RoleEligibilityScheduleInstanceResources and their operations over a RoleEligibilityScheduleInstanceResource. </returns>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.AuthorizationExtensions.GetRoleEligibilityScheduleInstanceAsync(Azure.ResourceManager.ArmResource,System.String,System.Threading.CancellationToken)">
            <summary>
            Gets the specified role eligibility schedule instance.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/{scope}/providers/Microsoft.Authorization/roleEligibilityScheduleInstances/{roleEligibilityScheduleInstanceName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>RoleEligibilityScheduleInstances_Get</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2020-10-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.Authorization.RoleEligibilityScheduleInstanceResource" /></description>
            </item>
            </list>
            <item>
            <term>Mocking</term>
            <description>To mock this method, please mock <see cref="M:Azure.ResourceManager.Authorization.Mocking.MockableAuthorizationArmResource.GetRoleEligibilityScheduleInstanceAsync(System.String,System.Threading.CancellationToken)" /> instead.</description>
            </item>
            </summary>
            <param name="armResource"> The <see cref="T:Azure.ResourceManager.ArmResource" /> instance the method will execute against. </param>
            <param name="roleEligibilityScheduleInstanceName"> The name (hash of schedule name + time) of the role eligibility schedule to get. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="armResource" /> or <paramref name="roleEligibilityScheduleInstanceName" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="roleEligibilityScheduleInstanceName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.AuthorizationExtensions.GetRoleEligibilityScheduleInstance(Azure.ResourceManager.ArmResource,System.String,System.Threading.CancellationToken)">
            <summary>
            Gets the specified role eligibility schedule instance.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/{scope}/providers/Microsoft.Authorization/roleEligibilityScheduleInstances/{roleEligibilityScheduleInstanceName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>RoleEligibilityScheduleInstances_Get</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2020-10-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.Authorization.RoleEligibilityScheduleInstanceResource" /></description>
            </item>
            </list>
            <item>
            <term>Mocking</term>
            <description>To mock this method, please mock <see cref="M:Azure.ResourceManager.Authorization.Mocking.MockableAuthorizationArmResource.GetRoleEligibilityScheduleInstance(System.String,System.Threading.CancellationToken)" /> instead.</description>
            </item>
            </summary>
            <param name="armResource"> The <see cref="T:Azure.ResourceManager.ArmResource" /> instance the method will execute against. </param>
            <param name="roleEligibilityScheduleInstanceName"> The name (hash of schedule name + time) of the role eligibility schedule to get. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="armResource" /> or <paramref name="roleEligibilityScheduleInstanceName" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="roleEligibilityScheduleInstanceName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.AuthorizationExtensions.GetRoleEligibilityScheduleRequests(Azure.ResourceManager.ArmResource)">
            <summary>
            Gets a collection of RoleEligibilityScheduleRequestResources in the ArmResource.
            <item>
            <term>Mocking</term>
            <description>To mock this method, please mock <see cref="M:Azure.ResourceManager.Authorization.Mocking.MockableAuthorizationArmResource.GetRoleEligibilityScheduleRequests" /> instead.</description>
            </item>
            </summary>
            <param name="armResource"> The <see cref="T:Azure.ResourceManager.ArmResource" /> instance the method will execute against. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="armResource" /> is null. </exception>
            <returns> An object representing collection of RoleEligibilityScheduleRequestResources and their operations over a RoleEligibilityScheduleRequestResource. </returns>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.AuthorizationExtensions.GetRoleEligibilityScheduleRequestAsync(Azure.ResourceManager.ArmResource,System.String,System.Threading.CancellationToken)">
            <summary>
            Get the specified role eligibility schedule request.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/{scope}/providers/Microsoft.Authorization/roleEligibilityScheduleRequests/{roleEligibilityScheduleRequestName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>RoleEligibilityScheduleRequests_Get</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2020-10-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.Authorization.RoleEligibilityScheduleRequestResource" /></description>
            </item>
            </list>
            <item>
            <term>Mocking</term>
            <description>To mock this method, please mock <see cref="M:Azure.ResourceManager.Authorization.Mocking.MockableAuthorizationArmResource.GetRoleEligibilityScheduleRequestAsync(System.String,System.Threading.CancellationToken)" /> instead.</description>
            </item>
            </summary>
            <param name="armResource"> The <see cref="T:Azure.ResourceManager.ArmResource" /> instance the method will execute against. </param>
            <param name="roleEligibilityScheduleRequestName"> The name (guid) of the role eligibility schedule request to get. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="armResource" /> or <paramref name="roleEligibilityScheduleRequestName" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="roleEligibilityScheduleRequestName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.AuthorizationExtensions.GetRoleEligibilityScheduleRequest(Azure.ResourceManager.ArmResource,System.String,System.Threading.CancellationToken)">
            <summary>
            Get the specified role eligibility schedule request.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/{scope}/providers/Microsoft.Authorization/roleEligibilityScheduleRequests/{roleEligibilityScheduleRequestName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>RoleEligibilityScheduleRequests_Get</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2020-10-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.Authorization.RoleEligibilityScheduleRequestResource" /></description>
            </item>
            </list>
            <item>
            <term>Mocking</term>
            <description>To mock this method, please mock <see cref="M:Azure.ResourceManager.Authorization.Mocking.MockableAuthorizationArmResource.GetRoleEligibilityScheduleRequest(System.String,System.Threading.CancellationToken)" /> instead.</description>
            </item>
            </summary>
            <param name="armResource"> The <see cref="T:Azure.ResourceManager.ArmResource" /> instance the method will execute against. </param>
            <param name="roleEligibilityScheduleRequestName"> The name (guid) of the role eligibility schedule request to get. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="armResource" /> or <paramref name="roleEligibilityScheduleRequestName" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="roleEligibilityScheduleRequestName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.AuthorizationExtensions.GetRoleManagementPolicies(Azure.ResourceManager.ArmResource)">
            <summary>
            Gets a collection of RoleManagementPolicyResources in the ArmResource.
            <item>
            <term>Mocking</term>
            <description>To mock this method, please mock <see cref="M:Azure.ResourceManager.Authorization.Mocking.MockableAuthorizationArmResource.GetRoleManagementPolicies" /> instead.</description>
            </item>
            </summary>
            <param name="armResource"> The <see cref="T:Azure.ResourceManager.ArmResource" /> instance the method will execute against. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="armResource" /> is null. </exception>
            <returns> An object representing collection of RoleManagementPolicyResources and their operations over a RoleManagementPolicyResource. </returns>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.AuthorizationExtensions.GetRoleManagementPolicyAsync(Azure.ResourceManager.ArmResource,System.String,System.Threading.CancellationToken)">
            <summary>
            Get the specified role management policy for a resource scope
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/{scope}/providers/Microsoft.Authorization/roleManagementPolicies/{roleManagementPolicyName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>RoleManagementPolicies_Get</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2020-10-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.Authorization.RoleManagementPolicyResource" /></description>
            </item>
            </list>
            <item>
            <term>Mocking</term>
            <description>To mock this method, please mock <see cref="M:Azure.ResourceManager.Authorization.Mocking.MockableAuthorizationArmResource.GetRoleManagementPolicyAsync(System.String,System.Threading.CancellationToken)" /> instead.</description>
            </item>
            </summary>
            <param name="armResource"> The <see cref="T:Azure.ResourceManager.ArmResource" /> instance the method will execute against. </param>
            <param name="roleManagementPolicyName"> The name (guid) of the role management policy to get. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="armResource" /> or <paramref name="roleManagementPolicyName" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="roleManagementPolicyName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.AuthorizationExtensions.GetRoleManagementPolicy(Azure.ResourceManager.ArmResource,System.String,System.Threading.CancellationToken)">
            <summary>
            Get the specified role management policy for a resource scope
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/{scope}/providers/Microsoft.Authorization/roleManagementPolicies/{roleManagementPolicyName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>RoleManagementPolicies_Get</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2020-10-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.Authorization.RoleManagementPolicyResource" /></description>
            </item>
            </list>
            <item>
            <term>Mocking</term>
            <description>To mock this method, please mock <see cref="M:Azure.ResourceManager.Authorization.Mocking.MockableAuthorizationArmResource.GetRoleManagementPolicy(System.String,System.Threading.CancellationToken)" /> instead.</description>
            </item>
            </summary>
            <param name="armResource"> The <see cref="T:Azure.ResourceManager.ArmResource" /> instance the method will execute against. </param>
            <param name="roleManagementPolicyName"> The name (guid) of the role management policy to get. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="armResource" /> or <paramref name="roleManagementPolicyName" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="roleManagementPolicyName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.AuthorizationExtensions.GetRoleManagementPolicyAssignments(Azure.ResourceManager.ArmResource)">
            <summary>
            Gets a collection of RoleManagementPolicyAssignmentResources in the ArmResource.
            <item>
            <term>Mocking</term>
            <description>To mock this method, please mock <see cref="M:Azure.ResourceManager.Authorization.Mocking.MockableAuthorizationArmResource.GetRoleManagementPolicyAssignments" /> instead.</description>
            </item>
            </summary>
            <param name="armResource"> The <see cref="T:Azure.ResourceManager.ArmResource" /> instance the method will execute against. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="armResource" /> is null. </exception>
            <returns> An object representing collection of RoleManagementPolicyAssignmentResources and their operations over a RoleManagementPolicyAssignmentResource. </returns>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.AuthorizationExtensions.GetRoleManagementPolicyAssignmentAsync(Azure.ResourceManager.ArmResource,System.String,System.Threading.CancellationToken)">
            <summary>
            Get the specified role management policy assignment for a resource scope
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/{scope}/providers/Microsoft.Authorization/roleManagementPolicyAssignments/{roleManagementPolicyAssignmentName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>RoleManagementPolicyAssignments_Get</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2020-10-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.Authorization.RoleManagementPolicyAssignmentResource" /></description>
            </item>
            </list>
            <item>
            <term>Mocking</term>
            <description>To mock this method, please mock <see cref="M:Azure.ResourceManager.Authorization.Mocking.MockableAuthorizationArmResource.GetRoleManagementPolicyAssignmentAsync(System.String,System.Threading.CancellationToken)" /> instead.</description>
            </item>
            </summary>
            <param name="armResource"> The <see cref="T:Azure.ResourceManager.ArmResource" /> instance the method will execute against. </param>
            <param name="roleManagementPolicyAssignmentName"> The name of format {guid_guid} the role management policy assignment to get. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="armResource" /> or <paramref name="roleManagementPolicyAssignmentName" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="roleManagementPolicyAssignmentName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.AuthorizationExtensions.GetRoleManagementPolicyAssignment(Azure.ResourceManager.ArmResource,System.String,System.Threading.CancellationToken)">
            <summary>
            Get the specified role management policy assignment for a resource scope
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/{scope}/providers/Microsoft.Authorization/roleManagementPolicyAssignments/{roleManagementPolicyAssignmentName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>RoleManagementPolicyAssignments_Get</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2020-10-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.Authorization.RoleManagementPolicyAssignmentResource" /></description>
            </item>
            </list>
            <item>
            <term>Mocking</term>
            <description>To mock this method, please mock <see cref="M:Azure.ResourceManager.Authorization.Mocking.MockableAuthorizationArmResource.GetRoleManagementPolicyAssignment(System.String,System.Threading.CancellationToken)" /> instead.</description>
            </item>
            </summary>
            <param name="armResource"> The <see cref="T:Azure.ResourceManager.ArmResource" /> instance the method will execute against. </param>
            <param name="roleManagementPolicyAssignmentName"> The name of format {guid_guid} the role management policy assignment to get. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="armResource" /> or <paramref name="roleManagementPolicyAssignmentName" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="roleManagementPolicyAssignmentName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.AuthorizationExtensions.GetAzurePermissionsForResourceGroupsAsync(Azure.ResourceManager.Resources.ResourceGroupResource,System.Threading.CancellationToken)">
            <summary>
            Gets all permissions the caller has for a resource group.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/Microsoft.Authorization/permissions</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>AzurePermissionsForResourceGroup_List</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2022-04-01</description>
            </item>
            </list>
            <item>
            <term>Mocking</term>
            <description>To mock this method, please mock <see cref="M:Azure.ResourceManager.Authorization.Mocking.MockableAuthorizationResourceGroupResource.GetAzurePermissionsForResourceGroups(System.Threading.CancellationToken)" /> instead.</description>
            </item>
            </summary>
            <param name="resourceGroupResource"> The <see cref="T:Azure.ResourceManager.Resources.ResourceGroupResource" /> instance the method will execute against. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="resourceGroupResource" /> is null. </exception>
            <returns> An async collection of <see cref="T:Azure.ResourceManager.Authorization.Models.RoleDefinitionPermission" /> that may take multiple service requests to iterate over. </returns>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.AuthorizationExtensions.GetAzurePermissionsForResourceGroups(Azure.ResourceManager.Resources.ResourceGroupResource,System.Threading.CancellationToken)">
            <summary>
            Gets all permissions the caller has for a resource group.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/Microsoft.Authorization/permissions</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>AzurePermissionsForResourceGroup_List</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2022-04-01</description>
            </item>
            </list>
            <item>
            <term>Mocking</term>
            <description>To mock this method, please mock <see cref="M:Azure.ResourceManager.Authorization.Mocking.MockableAuthorizationResourceGroupResource.GetAzurePermissionsForResourceGroups(System.Threading.CancellationToken)" /> instead.</description>
            </item>
            </summary>
            <param name="resourceGroupResource"> The <see cref="T:Azure.ResourceManager.Resources.ResourceGroupResource" /> instance the method will execute against. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="resourceGroupResource" /> is null. </exception>
            <returns> A collection of <see cref="T:Azure.ResourceManager.Authorization.Models.RoleDefinitionPermission" /> that may take multiple service requests to iterate over. </returns>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.AuthorizationExtensions.GetAzurePermissionsForResourcesAsync(Azure.ResourceManager.Resources.ResourceGroupResource,System.String,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Gets all permissions the caller has for a resource.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{parentResourcePath}/{resourceType}/{resourceName}/providers/Microsoft.Authorization/permissions</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>AzurePermissionsForResource_List</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2022-04-01</description>
            </item>
            </list>
            <item>
            <term>Mocking</term>
            <description>To mock this method, please mock <see cref="M:Azure.ResourceManager.Authorization.Mocking.MockableAuthorizationResourceGroupResource.GetAzurePermissionsForResources(System.String,System.String,System.String,System.String,System.Threading.CancellationToken)" /> instead.</description>
            </item>
            </summary>
            <param name="resourceGroupResource"> The <see cref="T:Azure.ResourceManager.Resources.ResourceGroupResource" /> instance the method will execute against. </param>
            <param name="resourceProviderNamespace"> The namespace of the resource provider. </param>
            <param name="parentResourcePath"> The parent resource identity. </param>
            <param name="resourceType"> The resource type of the resource. </param>
            <param name="resourceName"> The name of the resource to get the permissions for. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentException"> <paramref name="resourceName" /> is an empty string, and was expected to be non-empty. </exception>
            <exception cref="T:System.ArgumentNullException"> <paramref name="resourceGroupResource" />, <paramref name="resourceProviderNamespace" />, <paramref name="parentResourcePath" />, <paramref name="resourceType" /> or <paramref name="resourceName" /> is null. </exception>
            <returns> An async collection of <see cref="T:Azure.ResourceManager.Authorization.Models.RoleDefinitionPermission" /> that may take multiple service requests to iterate over. </returns>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.AuthorizationExtensions.GetAzurePermissionsForResources(Azure.ResourceManager.Resources.ResourceGroupResource,System.String,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Gets all permissions the caller has for a resource.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{parentResourcePath}/{resourceType}/{resourceName}/providers/Microsoft.Authorization/permissions</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>AzurePermissionsForResource_List</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2022-04-01</description>
            </item>
            </list>
            <item>
            <term>Mocking</term>
            <description>To mock this method, please mock <see cref="M:Azure.ResourceManager.Authorization.Mocking.MockableAuthorizationResourceGroupResource.GetAzurePermissionsForResources(System.String,System.String,System.String,System.String,System.Threading.CancellationToken)" /> instead.</description>
            </item>
            </summary>
            <param name="resourceGroupResource"> The <see cref="T:Azure.ResourceManager.Resources.ResourceGroupResource" /> instance the method will execute against. </param>
            <param name="resourceProviderNamespace"> The namespace of the resource provider. </param>
            <param name="parentResourcePath"> The parent resource identity. </param>
            <param name="resourceType"> The resource type of the resource. </param>
            <param name="resourceName"> The name of the resource to get the permissions for. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentException"> <paramref name="resourceName" /> is an empty string, and was expected to be non-empty. </exception>
            <exception cref="T:System.ArgumentNullException"> <paramref name="resourceGroupResource" />, <paramref name="resourceProviderNamespace" />, <paramref name="parentResourcePath" />, <paramref name="resourceType" /> or <paramref name="resourceName" /> is null. </exception>
            <returns> A collection of <see cref="T:Azure.ResourceManager.Authorization.Models.RoleDefinitionPermission" /> that may take multiple service requests to iterate over. </returns>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.AuthorizationExtensions.GetClassicAdministratorsAsync(Azure.ResourceManager.Resources.SubscriptionResource,System.Threading.CancellationToken)">
            <summary>
            Gets service administrator, account administrator, and co-administrators for the subscription.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/providers/Microsoft.Authorization/classicAdministrators</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>ClassicAdministrators_List</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2015-07-01</description>
            </item>
            </list>
            <item>
            <term>Mocking</term>
            <description>To mock this method, please mock <see cref="M:Azure.ResourceManager.Authorization.Mocking.MockableAuthorizationSubscriptionResource.GetClassicAdministrators(System.Threading.CancellationToken)" /> instead.</description>
            </item>
            </summary>
            <param name="subscriptionResource"> The <see cref="T:Azure.ResourceManager.Resources.SubscriptionResource" /> instance the method will execute against. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="subscriptionResource" /> is null. </exception>
            <returns> An async collection of <see cref="T:Azure.ResourceManager.Authorization.Models.AuthorizationClassicAdministrator" /> that may take multiple service requests to iterate over. </returns>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.AuthorizationExtensions.GetClassicAdministrators(Azure.ResourceManager.Resources.SubscriptionResource,System.Threading.CancellationToken)">
            <summary>
            Gets service administrator, account administrator, and co-administrators for the subscription.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/providers/Microsoft.Authorization/classicAdministrators</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>ClassicAdministrators_List</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2015-07-01</description>
            </item>
            </list>
            <item>
            <term>Mocking</term>
            <description>To mock this method, please mock <see cref="M:Azure.ResourceManager.Authorization.Mocking.MockableAuthorizationSubscriptionResource.GetClassicAdministrators(System.Threading.CancellationToken)" /> instead.</description>
            </item>
            </summary>
            <param name="subscriptionResource"> The <see cref="T:Azure.ResourceManager.Resources.SubscriptionResource" /> instance the method will execute against. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="subscriptionResource" /> is null. </exception>
            <returns> A collection of <see cref="T:Azure.ResourceManager.Authorization.Models.AuthorizationClassicAdministrator" /> that may take multiple service requests to iterate over. </returns>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.AuthorizationExtensions.GetAllAuthorizationProviderOperationsMetadata(Azure.ResourceManager.Resources.TenantResource)">
            <summary>
            Gets a collection of AuthorizationProviderOperationsMetadataResources in the TenantResource.
            <item>
            <term>Mocking</term>
            <description>To mock this method, please mock <see cref="M:Azure.ResourceManager.Authorization.Mocking.MockableAuthorizationTenantResource.GetAllAuthorizationProviderOperationsMetadata" /> instead.</description>
            </item>
            </summary>
            <param name="tenantResource"> The <see cref="T:Azure.ResourceManager.Resources.TenantResource" /> instance the method will execute against. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="tenantResource" /> is null. </exception>
            <returns> An object representing collection of AuthorizationProviderOperationsMetadataResources and their operations over a AuthorizationProviderOperationsMetadataResource. </returns>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.AuthorizationExtensions.GetAuthorizationProviderOperationsMetadataAsync(Azure.ResourceManager.Resources.TenantResource,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Gets provider operations metadata for the specified resource provider.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/providers/Microsoft.Authorization/providerOperations/{resourceProviderNamespace}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>ProviderOperationsMetadata_Get</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2022-04-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.Authorization.AuthorizationProviderOperationsMetadataResource" /></description>
            </item>
            </list>
            <item>
            <term>Mocking</term>
            <description>To mock this method, please mock <see cref="M:Azure.ResourceManager.Authorization.Mocking.MockableAuthorizationTenantResource.GetAuthorizationProviderOperationsMetadataAsync(System.String,System.String,System.Threading.CancellationToken)" /> instead.</description>
            </item>
            </summary>
            <param name="tenantResource"> The <see cref="T:Azure.ResourceManager.Resources.TenantResource" /> instance the method will execute against. </param>
            <param name="resourceProviderNamespace"> The namespace of the resource provider. </param>
            <param name="expand"> Specifies whether to expand the values. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="tenantResource" /> or <paramref name="resourceProviderNamespace" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.AuthorizationExtensions.GetAuthorizationProviderOperationsMetadata(Azure.ResourceManager.Resources.TenantResource,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Gets provider operations metadata for the specified resource provider.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/providers/Microsoft.Authorization/providerOperations/{resourceProviderNamespace}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>ProviderOperationsMetadata_Get</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2022-04-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.Authorization.AuthorizationProviderOperationsMetadataResource" /></description>
            </item>
            </list>
            <item>
            <term>Mocking</term>
            <description>To mock this method, please mock <see cref="M:Azure.ResourceManager.Authorization.Mocking.MockableAuthorizationTenantResource.GetAuthorizationProviderOperationsMetadata(System.String,System.String,System.Threading.CancellationToken)" /> instead.</description>
            </item>
            </summary>
            <param name="tenantResource"> The <see cref="T:Azure.ResourceManager.Resources.TenantResource" /> instance the method will execute against. </param>
            <param name="resourceProviderNamespace"> The namespace of the resource provider. </param>
            <param name="expand"> Specifies whether to expand the values. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="tenantResource" /> or <paramref name="resourceProviderNamespace" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.AuthorizationExtensions.ElevateAccessGlobalAdministratorAsync(Azure.ResourceManager.Resources.TenantResource,System.Threading.CancellationToken)">
            <summary>
            Elevates access for a Global Administrator.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/providers/Microsoft.Authorization/elevateAccess</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>GlobalAdministrator_ElevateAccess</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2015-07-01</description>
            </item>
            </list>
            <item>
            <term>Mocking</term>
            <description>To mock this method, please mock <see cref="M:Azure.ResourceManager.Authorization.Mocking.MockableAuthorizationTenantResource.ElevateAccessGlobalAdministrator(System.Threading.CancellationToken)" /> instead.</description>
            </item>
            </summary>
            <param name="tenantResource"> The <see cref="T:Azure.ResourceManager.Resources.TenantResource" /> instance the method will execute against. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="tenantResource" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.AuthorizationExtensions.ElevateAccessGlobalAdministrator(Azure.ResourceManager.Resources.TenantResource,System.Threading.CancellationToken)">
            <summary>
            Elevates access for a Global Administrator.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/providers/Microsoft.Authorization/elevateAccess</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>GlobalAdministrator_ElevateAccess</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2015-07-01</description>
            </item>
            </list>
            <item>
            <term>Mocking</term>
            <description>To mock this method, please mock <see cref="M:Azure.ResourceManager.Authorization.Mocking.MockableAuthorizationTenantResource.ElevateAccessGlobalAdministrator(System.Threading.CancellationToken)" /> instead.</description>
            </item>
            </summary>
            <param name="tenantResource"> The <see cref="T:Azure.ResourceManager.Resources.TenantResource" /> instance the method will execute against. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="tenantResource" /> is null. </exception>
        </member>
        <member name="T:Azure.ResourceManager.Authorization.Mocking.MockableAuthorizationArmClient">
            <summary> A class to add extension methods to ArmClient. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.Mocking.MockableAuthorizationArmClient.#ctor">
            <summary> Initializes a new instance of the <see cref="T:Azure.ResourceManager.Authorization.Mocking.MockableAuthorizationArmClient" /> class for mocking. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.Mocking.MockableAuthorizationArmClient.#ctor(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)">
            <summary> Initializes a new instance of the <see cref="T:Azure.ResourceManager.Authorization.Mocking.MockableAuthorizationArmClient" /> class. </summary>
            <param name="client"> The client parameters to use in these operations. </param>
            <param name="id"> The identifier of the resource that is the target of operations. </param>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.Mocking.MockableAuthorizationArmClient.GetDenyAssignments(Azure.Core.ResourceIdentifier)">
            <summary> Gets a collection of DenyAssignmentResources in the ArmClient. </summary>
            <param name="scope"> The scope that the resource will apply against. </param>
            <returns> An object representing collection of DenyAssignmentResources and their operations over a DenyAssignmentResource. </returns>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.Mocking.MockableAuthorizationArmClient.GetDenyAssignmentAsync(Azure.Core.ResourceIdentifier,System.String,System.Threading.CancellationToken)">
            <summary>
            Get the specified deny assignment.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/{scope}/providers/Microsoft.Authorization/denyAssignments/{denyAssignmentId}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>DenyAssignments_Get</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2022-04-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.Authorization.DenyAssignmentResource" /></description>
            </item>
            </list>
            </summary>
            <param name="scope"> The scope that the resource will apply against. </param>
            <param name="denyAssignmentId"> The ID of the deny assignment to get. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="denyAssignmentId" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="denyAssignmentId" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.Mocking.MockableAuthorizationArmClient.GetDenyAssignment(Azure.Core.ResourceIdentifier,System.String,System.Threading.CancellationToken)">
            <summary>
            Get the specified deny assignment.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/{scope}/providers/Microsoft.Authorization/denyAssignments/{denyAssignmentId}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>DenyAssignments_Get</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2022-04-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.Authorization.DenyAssignmentResource" /></description>
            </item>
            </list>
            </summary>
            <param name="scope"> The scope that the resource will apply against. </param>
            <param name="denyAssignmentId"> The ID of the deny assignment to get. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="denyAssignmentId" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="denyAssignmentId" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.Mocking.MockableAuthorizationArmClient.GetRoleAssignments(Azure.Core.ResourceIdentifier)">
            <summary> Gets a collection of RoleAssignmentResources in the ArmClient. </summary>
            <param name="scope"> The scope that the resource will apply against. </param>
            <returns> An object representing collection of RoleAssignmentResources and their operations over a RoleAssignmentResource. </returns>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.Mocking.MockableAuthorizationArmClient.GetRoleAssignmentAsync(Azure.Core.ResourceIdentifier,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Get a role assignment by scope and name.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/{scope}/providers/Microsoft.Authorization/roleAssignments/{roleAssignmentName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>RoleAssignments_Get</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2022-04-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.Authorization.RoleAssignmentResource" /></description>
            </item>
            </list>
            </summary>
            <param name="scope"> The scope that the resource will apply against. </param>
            <param name="roleAssignmentName"> The name of the role assignment. It can be any valid GUID. </param>
            <param name="tenantId"> Tenant ID for cross-tenant request. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="roleAssignmentName" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.Mocking.MockableAuthorizationArmClient.GetRoleAssignment(Azure.Core.ResourceIdentifier,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Get a role assignment by scope and name.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/{scope}/providers/Microsoft.Authorization/roleAssignments/{roleAssignmentName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>RoleAssignments_Get</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2022-04-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.Authorization.RoleAssignmentResource" /></description>
            </item>
            </list>
            </summary>
            <param name="scope"> The scope that the resource will apply against. </param>
            <param name="roleAssignmentName"> The name of the role assignment. It can be any valid GUID. </param>
            <param name="tenantId"> Tenant ID for cross-tenant request. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="roleAssignmentName" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.Mocking.MockableAuthorizationArmClient.GetAuthorizationRoleDefinitions(Azure.Core.ResourceIdentifier)">
            <summary> Gets a collection of AuthorizationRoleDefinitionResources in the ArmClient. </summary>
            <param name="scope"> The scope that the resource will apply against. </param>
            <returns> An object representing collection of AuthorizationRoleDefinitionResources and their operations over a AuthorizationRoleDefinitionResource. </returns>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.Mocking.MockableAuthorizationArmClient.GetAuthorizationRoleDefinitionAsync(Azure.Core.ResourceIdentifier,Azure.Core.ResourceIdentifier,System.Threading.CancellationToken)">
            <summary>
            Get role definition by name (GUID).
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/{scope}/providers/Microsoft.Authorization/roleDefinitions/{roleDefinitionId}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>RoleDefinitions_Get</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2022-04-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.Authorization.AuthorizationRoleDefinitionResource" /></description>
            </item>
            </list>
            </summary>
            <param name="scope"> The scope that the resource will apply against. </param>
            <param name="roleDefinitionId"> The ID of the role definition. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="roleDefinitionId" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.Mocking.MockableAuthorizationArmClient.GetAuthorizationRoleDefinition(Azure.Core.ResourceIdentifier,Azure.Core.ResourceIdentifier,System.Threading.CancellationToken)">
            <summary>
            Get role definition by name (GUID).
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/{scope}/providers/Microsoft.Authorization/roleDefinitions/{roleDefinitionId}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>RoleDefinitions_Get</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2022-04-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.Authorization.AuthorizationRoleDefinitionResource" /></description>
            </item>
            </list>
            </summary>
            <param name="scope"> The scope that the resource will apply against. </param>
            <param name="roleDefinitionId"> The ID of the role definition. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="roleDefinitionId" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.Mocking.MockableAuthorizationArmClient.GetRoleAssignmentSchedules(Azure.Core.ResourceIdentifier)">
            <summary> Gets a collection of RoleAssignmentScheduleResources in the ArmClient. </summary>
            <param name="scope"> The scope that the resource will apply against. </param>
            <returns> An object representing collection of RoleAssignmentScheduleResources and their operations over a RoleAssignmentScheduleResource. </returns>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.Mocking.MockableAuthorizationArmClient.GetRoleAssignmentScheduleAsync(Azure.Core.ResourceIdentifier,System.String,System.Threading.CancellationToken)">
            <summary>
            Get the specified role assignment schedule for a resource scope
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/{scope}/providers/Microsoft.Authorization/roleAssignmentSchedules/{roleAssignmentScheduleName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>RoleAssignmentSchedules_Get</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2020-10-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.Authorization.RoleAssignmentScheduleResource" /></description>
            </item>
            </list>
            </summary>
            <param name="scope"> The scope that the resource will apply against. </param>
            <param name="roleAssignmentScheduleName"> The name (guid) of the role assignment schedule to get. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="roleAssignmentScheduleName" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="roleAssignmentScheduleName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.Mocking.MockableAuthorizationArmClient.GetRoleAssignmentSchedule(Azure.Core.ResourceIdentifier,System.String,System.Threading.CancellationToken)">
            <summary>
            Get the specified role assignment schedule for a resource scope
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/{scope}/providers/Microsoft.Authorization/roleAssignmentSchedules/{roleAssignmentScheduleName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>RoleAssignmentSchedules_Get</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2020-10-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.Authorization.RoleAssignmentScheduleResource" /></description>
            </item>
            </list>
            </summary>
            <param name="scope"> The scope that the resource will apply against. </param>
            <param name="roleAssignmentScheduleName"> The name (guid) of the role assignment schedule to get. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="roleAssignmentScheduleName" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="roleAssignmentScheduleName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.Mocking.MockableAuthorizationArmClient.GetRoleAssignmentScheduleInstances(Azure.Core.ResourceIdentifier)">
            <summary> Gets a collection of RoleAssignmentScheduleInstanceResources in the ArmClient. </summary>
            <param name="scope"> The scope that the resource will apply against. </param>
            <returns> An object representing collection of RoleAssignmentScheduleInstanceResources and their operations over a RoleAssignmentScheduleInstanceResource. </returns>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.Mocking.MockableAuthorizationArmClient.GetRoleAssignmentScheduleInstanceAsync(Azure.Core.ResourceIdentifier,System.String,System.Threading.CancellationToken)">
            <summary>
            Gets the specified role assignment schedule instance.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/{scope}/providers/Microsoft.Authorization/roleAssignmentScheduleInstances/{roleAssignmentScheduleInstanceName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>RoleAssignmentScheduleInstances_Get</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2020-10-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.Authorization.RoleAssignmentScheduleInstanceResource" /></description>
            </item>
            </list>
            </summary>
            <param name="scope"> The scope that the resource will apply against. </param>
            <param name="roleAssignmentScheduleInstanceName"> The name (hash of schedule name + time) of the role assignment schedule to get. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="roleAssignmentScheduleInstanceName" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="roleAssignmentScheduleInstanceName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.Mocking.MockableAuthorizationArmClient.GetRoleAssignmentScheduleInstance(Azure.Core.ResourceIdentifier,System.String,System.Threading.CancellationToken)">
            <summary>
            Gets the specified role assignment schedule instance.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/{scope}/providers/Microsoft.Authorization/roleAssignmentScheduleInstances/{roleAssignmentScheduleInstanceName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>RoleAssignmentScheduleInstances_Get</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2020-10-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.Authorization.RoleAssignmentScheduleInstanceResource" /></description>
            </item>
            </list>
            </summary>
            <param name="scope"> The scope that the resource will apply against. </param>
            <param name="roleAssignmentScheduleInstanceName"> The name (hash of schedule name + time) of the role assignment schedule to get. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="roleAssignmentScheduleInstanceName" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="roleAssignmentScheduleInstanceName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.Mocking.MockableAuthorizationArmClient.GetRoleAssignmentScheduleRequests(Azure.Core.ResourceIdentifier)">
            <summary> Gets a collection of RoleAssignmentScheduleRequestResources in the ArmClient. </summary>
            <param name="scope"> The scope that the resource will apply against. </param>
            <returns> An object representing collection of RoleAssignmentScheduleRequestResources and their operations over a RoleAssignmentScheduleRequestResource. </returns>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.Mocking.MockableAuthorizationArmClient.GetRoleAssignmentScheduleRequestAsync(Azure.Core.ResourceIdentifier,System.String,System.Threading.CancellationToken)">
            <summary>
            Get the specified role assignment schedule request.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/{scope}/providers/Microsoft.Authorization/roleAssignmentScheduleRequests/{roleAssignmentScheduleRequestName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>RoleAssignmentScheduleRequests_Get</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2020-10-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.Authorization.RoleAssignmentScheduleRequestResource" /></description>
            </item>
            </list>
            </summary>
            <param name="scope"> The scope that the resource will apply against. </param>
            <param name="roleAssignmentScheduleRequestName"> The name (guid) of the role assignment schedule request to get. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="roleAssignmentScheduleRequestName" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="roleAssignmentScheduleRequestName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.Mocking.MockableAuthorizationArmClient.GetRoleAssignmentScheduleRequest(Azure.Core.ResourceIdentifier,System.String,System.Threading.CancellationToken)">
            <summary>
            Get the specified role assignment schedule request.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/{scope}/providers/Microsoft.Authorization/roleAssignmentScheduleRequests/{roleAssignmentScheduleRequestName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>RoleAssignmentScheduleRequests_Get</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2020-10-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.Authorization.RoleAssignmentScheduleRequestResource" /></description>
            </item>
            </list>
            </summary>
            <param name="scope"> The scope that the resource will apply against. </param>
            <param name="roleAssignmentScheduleRequestName"> The name (guid) of the role assignment schedule request to get. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="roleAssignmentScheduleRequestName" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="roleAssignmentScheduleRequestName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.Mocking.MockableAuthorizationArmClient.GetRoleEligibilitySchedules(Azure.Core.ResourceIdentifier)">
            <summary> Gets a collection of RoleEligibilityScheduleResources in the ArmClient. </summary>
            <param name="scope"> The scope that the resource will apply against. </param>
            <returns> An object representing collection of RoleEligibilityScheduleResources and their operations over a RoleEligibilityScheduleResource. </returns>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.Mocking.MockableAuthorizationArmClient.GetRoleEligibilityScheduleAsync(Azure.Core.ResourceIdentifier,System.String,System.Threading.CancellationToken)">
            <summary>
            Get the specified role eligibility schedule for a resource scope
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/{scope}/providers/Microsoft.Authorization/roleEligibilitySchedules/{roleEligibilityScheduleName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>RoleEligibilitySchedules_Get</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2020-10-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.Authorization.RoleEligibilityScheduleResource" /></description>
            </item>
            </list>
            </summary>
            <param name="scope"> The scope that the resource will apply against. </param>
            <param name="roleEligibilityScheduleName"> The name (guid) of the role eligibility schedule to get. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="roleEligibilityScheduleName" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="roleEligibilityScheduleName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.Mocking.MockableAuthorizationArmClient.GetRoleEligibilitySchedule(Azure.Core.ResourceIdentifier,System.String,System.Threading.CancellationToken)">
            <summary>
            Get the specified role eligibility schedule for a resource scope
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/{scope}/providers/Microsoft.Authorization/roleEligibilitySchedules/{roleEligibilityScheduleName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>RoleEligibilitySchedules_Get</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2020-10-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.Authorization.RoleEligibilityScheduleResource" /></description>
            </item>
            </list>
            </summary>
            <param name="scope"> The scope that the resource will apply against. </param>
            <param name="roleEligibilityScheduleName"> The name (guid) of the role eligibility schedule to get. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="roleEligibilityScheduleName" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="roleEligibilityScheduleName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.Mocking.MockableAuthorizationArmClient.GetRoleEligibilityScheduleInstances(Azure.Core.ResourceIdentifier)">
            <summary> Gets a collection of RoleEligibilityScheduleInstanceResources in the ArmClient. </summary>
            <param name="scope"> The scope that the resource will apply against. </param>
            <returns> An object representing collection of RoleEligibilityScheduleInstanceResources and their operations over a RoleEligibilityScheduleInstanceResource. </returns>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.Mocking.MockableAuthorizationArmClient.GetRoleEligibilityScheduleInstanceAsync(Azure.Core.ResourceIdentifier,System.String,System.Threading.CancellationToken)">
            <summary>
            Gets the specified role eligibility schedule instance.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/{scope}/providers/Microsoft.Authorization/roleEligibilityScheduleInstances/{roleEligibilityScheduleInstanceName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>RoleEligibilityScheduleInstances_Get</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2020-10-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.Authorization.RoleEligibilityScheduleInstanceResource" /></description>
            </item>
            </list>
            </summary>
            <param name="scope"> The scope that the resource will apply against. </param>
            <param name="roleEligibilityScheduleInstanceName"> The name (hash of schedule name + time) of the role eligibility schedule to get. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="roleEligibilityScheduleInstanceName" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="roleEligibilityScheduleInstanceName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.Mocking.MockableAuthorizationArmClient.GetRoleEligibilityScheduleInstance(Azure.Core.ResourceIdentifier,System.String,System.Threading.CancellationToken)">
            <summary>
            Gets the specified role eligibility schedule instance.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/{scope}/providers/Microsoft.Authorization/roleEligibilityScheduleInstances/{roleEligibilityScheduleInstanceName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>RoleEligibilityScheduleInstances_Get</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2020-10-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.Authorization.RoleEligibilityScheduleInstanceResource" /></description>
            </item>
            </list>
            </summary>
            <param name="scope"> The scope that the resource will apply against. </param>
            <param name="roleEligibilityScheduleInstanceName"> The name (hash of schedule name + time) of the role eligibility schedule to get. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="roleEligibilityScheduleInstanceName" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="roleEligibilityScheduleInstanceName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.Mocking.MockableAuthorizationArmClient.GetRoleEligibilityScheduleRequests(Azure.Core.ResourceIdentifier)">
            <summary> Gets a collection of RoleEligibilityScheduleRequestResources in the ArmClient. </summary>
            <param name="scope"> The scope that the resource will apply against. </param>
            <returns> An object representing collection of RoleEligibilityScheduleRequestResources and their operations over a RoleEligibilityScheduleRequestResource. </returns>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.Mocking.MockableAuthorizationArmClient.GetRoleEligibilityScheduleRequestAsync(Azure.Core.ResourceIdentifier,System.String,System.Threading.CancellationToken)">
            <summary>
            Get the specified role eligibility schedule request.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/{scope}/providers/Microsoft.Authorization/roleEligibilityScheduleRequests/{roleEligibilityScheduleRequestName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>RoleEligibilityScheduleRequests_Get</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2020-10-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.Authorization.RoleEligibilityScheduleRequestResource" /></description>
            </item>
            </list>
            </summary>
            <param name="scope"> The scope that the resource will apply against. </param>
            <param name="roleEligibilityScheduleRequestName"> The name (guid) of the role eligibility schedule request to get. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="roleEligibilityScheduleRequestName" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="roleEligibilityScheduleRequestName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.Mocking.MockableAuthorizationArmClient.GetRoleEligibilityScheduleRequest(Azure.Core.ResourceIdentifier,System.String,System.Threading.CancellationToken)">
            <summary>
            Get the specified role eligibility schedule request.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/{scope}/providers/Microsoft.Authorization/roleEligibilityScheduleRequests/{roleEligibilityScheduleRequestName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>RoleEligibilityScheduleRequests_Get</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2020-10-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.Authorization.RoleEligibilityScheduleRequestResource" /></description>
            </item>
            </list>
            </summary>
            <param name="scope"> The scope that the resource will apply against. </param>
            <param name="roleEligibilityScheduleRequestName"> The name (guid) of the role eligibility schedule request to get. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="roleEligibilityScheduleRequestName" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="roleEligibilityScheduleRequestName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.Mocking.MockableAuthorizationArmClient.GetRoleManagementPolicies(Azure.Core.ResourceIdentifier)">
            <summary> Gets a collection of RoleManagementPolicyResources in the ArmClient. </summary>
            <param name="scope"> The scope that the resource will apply against. </param>
            <returns> An object representing collection of RoleManagementPolicyResources and their operations over a RoleManagementPolicyResource. </returns>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.Mocking.MockableAuthorizationArmClient.GetRoleManagementPolicyAsync(Azure.Core.ResourceIdentifier,System.String,System.Threading.CancellationToken)">
            <summary>
            Get the specified role management policy for a resource scope
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/{scope}/providers/Microsoft.Authorization/roleManagementPolicies/{roleManagementPolicyName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>RoleManagementPolicies_Get</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2020-10-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.Authorization.RoleManagementPolicyResource" /></description>
            </item>
            </list>
            </summary>
            <param name="scope"> The scope that the resource will apply against. </param>
            <param name="roleManagementPolicyName"> The name (guid) of the role management policy to get. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="roleManagementPolicyName" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="roleManagementPolicyName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.Mocking.MockableAuthorizationArmClient.GetRoleManagementPolicy(Azure.Core.ResourceIdentifier,System.String,System.Threading.CancellationToken)">
            <summary>
            Get the specified role management policy for a resource scope
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/{scope}/providers/Microsoft.Authorization/roleManagementPolicies/{roleManagementPolicyName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>RoleManagementPolicies_Get</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2020-10-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.Authorization.RoleManagementPolicyResource" /></description>
            </item>
            </list>
            </summary>
            <param name="scope"> The scope that the resource will apply against. </param>
            <param name="roleManagementPolicyName"> The name (guid) of the role management policy to get. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="roleManagementPolicyName" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="roleManagementPolicyName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.Mocking.MockableAuthorizationArmClient.GetRoleManagementPolicyAssignments(Azure.Core.ResourceIdentifier)">
            <summary> Gets a collection of RoleManagementPolicyAssignmentResources in the ArmClient. </summary>
            <param name="scope"> The scope that the resource will apply against. </param>
            <returns> An object representing collection of RoleManagementPolicyAssignmentResources and their operations over a RoleManagementPolicyAssignmentResource. </returns>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.Mocking.MockableAuthorizationArmClient.GetRoleManagementPolicyAssignmentAsync(Azure.Core.ResourceIdentifier,System.String,System.Threading.CancellationToken)">
            <summary>
            Get the specified role management policy assignment for a resource scope
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/{scope}/providers/Microsoft.Authorization/roleManagementPolicyAssignments/{roleManagementPolicyAssignmentName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>RoleManagementPolicyAssignments_Get</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2020-10-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.Authorization.RoleManagementPolicyAssignmentResource" /></description>
            </item>
            </list>
            </summary>
            <param name="scope"> The scope that the resource will apply against. </param>
            <param name="roleManagementPolicyAssignmentName"> The name of format {guid_guid} the role management policy assignment to get. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="roleManagementPolicyAssignmentName" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="roleManagementPolicyAssignmentName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.Mocking.MockableAuthorizationArmClient.GetRoleManagementPolicyAssignment(Azure.Core.ResourceIdentifier,System.String,System.Threading.CancellationToken)">
            <summary>
            Get the specified role management policy assignment for a resource scope
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/{scope}/providers/Microsoft.Authorization/roleManagementPolicyAssignments/{roleManagementPolicyAssignmentName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>RoleManagementPolicyAssignments_Get</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2020-10-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.Authorization.RoleManagementPolicyAssignmentResource" /></description>
            </item>
            </list>
            </summary>
            <param name="scope"> The scope that the resource will apply against. </param>
            <param name="roleManagementPolicyAssignmentName"> The name of format {guid_guid} the role management policy assignment to get. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="roleManagementPolicyAssignmentName" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="roleManagementPolicyAssignmentName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.Mocking.MockableAuthorizationArmClient.GetEligibleChildResourcesAsync(Azure.Core.ResourceIdentifier,System.String,System.Threading.CancellationToken)">
            <summary>
            Get the child resources of a resource on which user has eligible access
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/{scope}/providers/Microsoft.Authorization/eligibleChildResources</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>EligibleChildResources_Get</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2020-10-01</description>
            </item>
            </list>
            </summary>
            <param name="scope"> The scope that the resource will apply against. </param>
            <param name="filter"> The filter to apply on the operation. Use $filter=resourceType+eq+'Subscription' to filter on only resource of type = 'Subscription'. Use $filter=resourceType+eq+'subscription'+or+resourceType+eq+'resourcegroup' to filter on resource of type = 'Subscription' or 'ResourceGroup'. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="scope" /> is null. </exception>
            <returns> An async collection of <see cref="T:Azure.ResourceManager.Authorization.Models.EligibleChildResource" /> that may take multiple service requests to iterate over. </returns>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.Mocking.MockableAuthorizationArmClient.GetEligibleChildResources(Azure.Core.ResourceIdentifier,System.String,System.Threading.CancellationToken)">
            <summary>
            Get the child resources of a resource on which user has eligible access
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/{scope}/providers/Microsoft.Authorization/eligibleChildResources</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>EligibleChildResources_Get</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2020-10-01</description>
            </item>
            </list>
            </summary>
            <param name="scope"> The scope that the resource will apply against. </param>
            <param name="filter"> The filter to apply on the operation. Use $filter=resourceType+eq+'Subscription' to filter on only resource of type = 'Subscription'. Use $filter=resourceType+eq+'subscription'+or+resourceType+eq+'resourcegroup' to filter on resource of type = 'Subscription' or 'ResourceGroup'. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="scope" /> is null. </exception>
            <returns> A collection of <see cref="T:Azure.ResourceManager.Authorization.Models.EligibleChildResource" /> that may take multiple service requests to iterate over. </returns>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.Mocking.MockableAuthorizationArmClient.GetDenyAssignmentResource(Azure.Core.ResourceIdentifier)">
            <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Authorization.DenyAssignmentResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Authorization.DenyAssignmentResource.CreateResourceIdentifier(System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.Authorization.DenyAssignmentResource" /> <see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
            <param name="id"> The resource ID of the resource to get. </param>
            <returns> Returns a <see cref="T:Azure.ResourceManager.Authorization.DenyAssignmentResource" /> object. </returns>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.Mocking.MockableAuthorizationArmClient.GetAuthorizationProviderOperationsMetadataResource(Azure.Core.ResourceIdentifier)">
            <summary>
            Gets an object representing an <see cref="T:Azure.ResourceManager.Authorization.AuthorizationProviderOperationsMetadataResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Authorization.AuthorizationProviderOperationsMetadataResource.CreateResourceIdentifier(System.String)" /> to create an <see cref="T:Azure.ResourceManager.Authorization.AuthorizationProviderOperationsMetadataResource" /> <see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
            <param name="id"> The resource ID of the resource to get. </param>
            <returns> Returns a <see cref="T:Azure.ResourceManager.Authorization.AuthorizationProviderOperationsMetadataResource" /> object. </returns>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.Mocking.MockableAuthorizationArmClient.GetRoleAssignmentResource(Azure.Core.ResourceIdentifier)">
            <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Authorization.RoleAssignmentResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Authorization.RoleAssignmentResource.CreateResourceIdentifier(System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.Authorization.RoleAssignmentResource" /> <see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
            <param name="id"> The resource ID of the resource to get. </param>
            <returns> Returns a <see cref="T:Azure.ResourceManager.Authorization.RoleAssignmentResource" /> object. </returns>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.Mocking.MockableAuthorizationArmClient.GetAuthorizationRoleDefinitionResource(Azure.Core.ResourceIdentifier)">
            <summary>
            Gets an object representing an <see cref="T:Azure.ResourceManager.Authorization.AuthorizationRoleDefinitionResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Authorization.AuthorizationRoleDefinitionResource.CreateResourceIdentifier(System.String,Azure.Core.ResourceIdentifier)" /> to create an <see cref="T:Azure.ResourceManager.Authorization.AuthorizationRoleDefinitionResource" /> <see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
            <param name="id"> The resource ID of the resource to get. </param>
            <returns> Returns a <see cref="T:Azure.ResourceManager.Authorization.AuthorizationRoleDefinitionResource" /> object. </returns>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.Mocking.MockableAuthorizationArmClient.GetRoleAssignmentScheduleResource(Azure.Core.ResourceIdentifier)">
            <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Authorization.RoleAssignmentScheduleResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Authorization.RoleAssignmentScheduleResource.CreateResourceIdentifier(System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.Authorization.RoleAssignmentScheduleResource" /> <see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
            <param name="id"> The resource ID of the resource to get. </param>
            <returns> Returns a <see cref="T:Azure.ResourceManager.Authorization.RoleAssignmentScheduleResource" /> object. </returns>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.Mocking.MockableAuthorizationArmClient.GetRoleAssignmentScheduleInstanceResource(Azure.Core.ResourceIdentifier)">
            <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Authorization.RoleAssignmentScheduleInstanceResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Authorization.RoleAssignmentScheduleInstanceResource.CreateResourceIdentifier(System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.Authorization.RoleAssignmentScheduleInstanceResource" /> <see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
            <param name="id"> The resource ID of the resource to get. </param>
            <returns> Returns a <see cref="T:Azure.ResourceManager.Authorization.RoleAssignmentScheduleInstanceResource" /> object. </returns>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.Mocking.MockableAuthorizationArmClient.GetRoleAssignmentScheduleRequestResource(Azure.Core.ResourceIdentifier)">
            <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Authorization.RoleAssignmentScheduleRequestResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Authorization.RoleAssignmentScheduleRequestResource.CreateResourceIdentifier(System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.Authorization.RoleAssignmentScheduleRequestResource" /> <see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
            <param name="id"> The resource ID of the resource to get. </param>
            <returns> Returns a <see cref="T:Azure.ResourceManager.Authorization.RoleAssignmentScheduleRequestResource" /> object. </returns>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.Mocking.MockableAuthorizationArmClient.GetRoleEligibilityScheduleResource(Azure.Core.ResourceIdentifier)">
            <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Authorization.RoleEligibilityScheduleResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Authorization.RoleEligibilityScheduleResource.CreateResourceIdentifier(System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.Authorization.RoleEligibilityScheduleResource" /> <see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
            <param name="id"> The resource ID of the resource to get. </param>
            <returns> Returns a <see cref="T:Azure.ResourceManager.Authorization.RoleEligibilityScheduleResource" /> object. </returns>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.Mocking.MockableAuthorizationArmClient.GetRoleEligibilityScheduleInstanceResource(Azure.Core.ResourceIdentifier)">
            <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Authorization.RoleEligibilityScheduleInstanceResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Authorization.RoleEligibilityScheduleInstanceResource.CreateResourceIdentifier(System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.Authorization.RoleEligibilityScheduleInstanceResource" /> <see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
            <param name="id"> The resource ID of the resource to get. </param>
            <returns> Returns a <see cref="T:Azure.ResourceManager.Authorization.RoleEligibilityScheduleInstanceResource" /> object. </returns>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.Mocking.MockableAuthorizationArmClient.GetRoleEligibilityScheduleRequestResource(Azure.Core.ResourceIdentifier)">
            <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Authorization.RoleEligibilityScheduleRequestResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Authorization.RoleEligibilityScheduleRequestResource.CreateResourceIdentifier(System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.Authorization.RoleEligibilityScheduleRequestResource" /> <see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
            <param name="id"> The resource ID of the resource to get. </param>
            <returns> Returns a <see cref="T:Azure.ResourceManager.Authorization.RoleEligibilityScheduleRequestResource" /> object. </returns>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.Mocking.MockableAuthorizationArmClient.GetRoleManagementPolicyResource(Azure.Core.ResourceIdentifier)">
            <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Authorization.RoleManagementPolicyResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Authorization.RoleManagementPolicyResource.CreateResourceIdentifier(System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.Authorization.RoleManagementPolicyResource" /> <see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
            <param name="id"> The resource ID of the resource to get. </param>
            <returns> Returns a <see cref="T:Azure.ResourceManager.Authorization.RoleManagementPolicyResource" /> object. </returns>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.Mocking.MockableAuthorizationArmClient.GetRoleManagementPolicyAssignmentResource(Azure.Core.ResourceIdentifier)">
            <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.Authorization.RoleManagementPolicyAssignmentResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.Authorization.RoleManagementPolicyAssignmentResource.CreateResourceIdentifier(System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.Authorization.RoleManagementPolicyAssignmentResource" /> <see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
            <param name="id"> The resource ID of the resource to get. </param>
            <returns> Returns a <see cref="T:Azure.ResourceManager.Authorization.RoleManagementPolicyAssignmentResource" /> object. </returns>
        </member>
        <member name="T:Azure.ResourceManager.Authorization.Mocking.MockableAuthorizationArmResource">
            <summary> A class to add extension methods to ArmResource. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.Mocking.MockableAuthorizationArmResource.#ctor">
            <summary> Initializes a new instance of the <see cref="T:Azure.ResourceManager.Authorization.Mocking.MockableAuthorizationArmResource" /> class for mocking. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.Mocking.MockableAuthorizationArmResource.#ctor(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)">
            <summary> Initializes a new instance of the <see cref="T:Azure.ResourceManager.Authorization.Mocking.MockableAuthorizationArmResource" /> class. </summary>
            <param name="client"> The client parameters to use in these operations. </param>
            <param name="id"> The identifier of the resource that is the target of operations. </param>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.Mocking.MockableAuthorizationArmResource.GetDenyAssignments">
            <summary> Gets a collection of DenyAssignmentResources in the ArmResource. </summary>
            <returns> An object representing collection of DenyAssignmentResources and their operations over a DenyAssignmentResource. </returns>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.Mocking.MockableAuthorizationArmResource.GetDenyAssignmentAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Get the specified deny assignment.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/{scope}/providers/Microsoft.Authorization/denyAssignments/{denyAssignmentId}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>DenyAssignments_Get</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2022-04-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.Authorization.DenyAssignmentResource" /></description>
            </item>
            </list>
            </summary>
            <param name="denyAssignmentId"> The ID of the deny assignment to get. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="denyAssignmentId" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="denyAssignmentId" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.Mocking.MockableAuthorizationArmResource.GetDenyAssignment(System.String,System.Threading.CancellationToken)">
            <summary>
            Get the specified deny assignment.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/{scope}/providers/Microsoft.Authorization/denyAssignments/{denyAssignmentId}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>DenyAssignments_Get</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2022-04-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.Authorization.DenyAssignmentResource" /></description>
            </item>
            </list>
            </summary>
            <param name="denyAssignmentId"> The ID of the deny assignment to get. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="denyAssignmentId" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="denyAssignmentId" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.Mocking.MockableAuthorizationArmResource.GetRoleAssignments">
            <summary> Gets a collection of RoleAssignmentResources in the ArmResource. </summary>
            <returns> An object representing collection of RoleAssignmentResources and their operations over a RoleAssignmentResource. </returns>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.Mocking.MockableAuthorizationArmResource.GetRoleAssignmentAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Get a role assignment by scope and name.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/{scope}/providers/Microsoft.Authorization/roleAssignments/{roleAssignmentName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>RoleAssignments_Get</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2022-04-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.Authorization.RoleAssignmentResource" /></description>
            </item>
            </list>
            </summary>
            <param name="roleAssignmentName"> The name of the role assignment. It can be any valid GUID. </param>
            <param name="tenantId"> Tenant ID for cross-tenant request. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="roleAssignmentName" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.Mocking.MockableAuthorizationArmResource.GetRoleAssignment(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Get a role assignment by scope and name.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/{scope}/providers/Microsoft.Authorization/roleAssignments/{roleAssignmentName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>RoleAssignments_Get</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2022-04-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.Authorization.RoleAssignmentResource" /></description>
            </item>
            </list>
            </summary>
            <param name="roleAssignmentName"> The name of the role assignment. It can be any valid GUID. </param>
            <param name="tenantId"> Tenant ID for cross-tenant request. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="roleAssignmentName" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.Mocking.MockableAuthorizationArmResource.GetAuthorizationRoleDefinitions">
            <summary> Gets a collection of AuthorizationRoleDefinitionResources in the ArmResource. </summary>
            <returns> An object representing collection of AuthorizationRoleDefinitionResources and their operations over a AuthorizationRoleDefinitionResource. </returns>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.Mocking.MockableAuthorizationArmResource.GetAuthorizationRoleDefinitionAsync(Azure.Core.ResourceIdentifier,System.Threading.CancellationToken)">
            <summary>
            Get role definition by name (GUID).
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/{scope}/providers/Microsoft.Authorization/roleDefinitions/{roleDefinitionId}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>RoleDefinitions_Get</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2022-04-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.Authorization.AuthorizationRoleDefinitionResource" /></description>
            </item>
            </list>
            </summary>
            <param name="roleDefinitionId"> The ID of the role definition. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="roleDefinitionId" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.Mocking.MockableAuthorizationArmResource.GetAuthorizationRoleDefinition(Azure.Core.ResourceIdentifier,System.Threading.CancellationToken)">
            <summary>
            Get role definition by name (GUID).
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/{scope}/providers/Microsoft.Authorization/roleDefinitions/{roleDefinitionId}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>RoleDefinitions_Get</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2022-04-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.Authorization.AuthorizationRoleDefinitionResource" /></description>
            </item>
            </list>
            </summary>
            <param name="roleDefinitionId"> The ID of the role definition. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="roleDefinitionId" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.Mocking.MockableAuthorizationArmResource.GetRoleAssignmentSchedules">
            <summary> Gets a collection of RoleAssignmentScheduleResources in the ArmResource. </summary>
            <returns> An object representing collection of RoleAssignmentScheduleResources and their operations over a RoleAssignmentScheduleResource. </returns>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.Mocking.MockableAuthorizationArmResource.GetRoleAssignmentScheduleAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Get the specified role assignment schedule for a resource scope
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/{scope}/providers/Microsoft.Authorization/roleAssignmentSchedules/{roleAssignmentScheduleName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>RoleAssignmentSchedules_Get</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2020-10-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.Authorization.RoleAssignmentScheduleResource" /></description>
            </item>
            </list>
            </summary>
            <param name="roleAssignmentScheduleName"> The name (guid) of the role assignment schedule to get. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="roleAssignmentScheduleName" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="roleAssignmentScheduleName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.Mocking.MockableAuthorizationArmResource.GetRoleAssignmentSchedule(System.String,System.Threading.CancellationToken)">
            <summary>
            Get the specified role assignment schedule for a resource scope
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/{scope}/providers/Microsoft.Authorization/roleAssignmentSchedules/{roleAssignmentScheduleName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>RoleAssignmentSchedules_Get</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2020-10-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.Authorization.RoleAssignmentScheduleResource" /></description>
            </item>
            </list>
            </summary>
            <param name="roleAssignmentScheduleName"> The name (guid) of the role assignment schedule to get. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="roleAssignmentScheduleName" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="roleAssignmentScheduleName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.Mocking.MockableAuthorizationArmResource.GetRoleAssignmentScheduleInstances">
            <summary> Gets a collection of RoleAssignmentScheduleInstanceResources in the ArmResource. </summary>
            <returns> An object representing collection of RoleAssignmentScheduleInstanceResources and their operations over a RoleAssignmentScheduleInstanceResource. </returns>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.Mocking.MockableAuthorizationArmResource.GetRoleAssignmentScheduleInstanceAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Gets the specified role assignment schedule instance.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/{scope}/providers/Microsoft.Authorization/roleAssignmentScheduleInstances/{roleAssignmentScheduleInstanceName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>RoleAssignmentScheduleInstances_Get</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2020-10-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.Authorization.RoleAssignmentScheduleInstanceResource" /></description>
            </item>
            </list>
            </summary>
            <param name="roleAssignmentScheduleInstanceName"> The name (hash of schedule name + time) of the role assignment schedule to get. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="roleAssignmentScheduleInstanceName" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="roleAssignmentScheduleInstanceName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.Mocking.MockableAuthorizationArmResource.GetRoleAssignmentScheduleInstance(System.String,System.Threading.CancellationToken)">
            <summary>
            Gets the specified role assignment schedule instance.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/{scope}/providers/Microsoft.Authorization/roleAssignmentScheduleInstances/{roleAssignmentScheduleInstanceName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>RoleAssignmentScheduleInstances_Get</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2020-10-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.Authorization.RoleAssignmentScheduleInstanceResource" /></description>
            </item>
            </list>
            </summary>
            <param name="roleAssignmentScheduleInstanceName"> The name (hash of schedule name + time) of the role assignment schedule to get. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="roleAssignmentScheduleInstanceName" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="roleAssignmentScheduleInstanceName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.Mocking.MockableAuthorizationArmResource.GetRoleAssignmentScheduleRequests">
            <summary> Gets a collection of RoleAssignmentScheduleRequestResources in the ArmResource. </summary>
            <returns> An object representing collection of RoleAssignmentScheduleRequestResources and their operations over a RoleAssignmentScheduleRequestResource. </returns>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.Mocking.MockableAuthorizationArmResource.GetRoleAssignmentScheduleRequestAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Get the specified role assignment schedule request.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/{scope}/providers/Microsoft.Authorization/roleAssignmentScheduleRequests/{roleAssignmentScheduleRequestName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>RoleAssignmentScheduleRequests_Get</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2020-10-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.Authorization.RoleAssignmentScheduleRequestResource" /></description>
            </item>
            </list>
            </summary>
            <param name="roleAssignmentScheduleRequestName"> The name (guid) of the role assignment schedule request to get. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="roleAssignmentScheduleRequestName" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="roleAssignmentScheduleRequestName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.Mocking.MockableAuthorizationArmResource.GetRoleAssignmentScheduleRequest(System.String,System.Threading.CancellationToken)">
            <summary>
            Get the specified role assignment schedule request.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/{scope}/providers/Microsoft.Authorization/roleAssignmentScheduleRequests/{roleAssignmentScheduleRequestName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>RoleAssignmentScheduleRequests_Get</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2020-10-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.Authorization.RoleAssignmentScheduleRequestResource" /></description>
            </item>
            </list>
            </summary>
            <param name="roleAssignmentScheduleRequestName"> The name (guid) of the role assignment schedule request to get. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="roleAssignmentScheduleRequestName" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="roleAssignmentScheduleRequestName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.Mocking.MockableAuthorizationArmResource.GetRoleEligibilitySchedules">
            <summary> Gets a collection of RoleEligibilityScheduleResources in the ArmResource. </summary>
            <returns> An object representing collection of RoleEligibilityScheduleResources and their operations over a RoleEligibilityScheduleResource. </returns>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.Mocking.MockableAuthorizationArmResource.GetRoleEligibilityScheduleAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Get the specified role eligibility schedule for a resource scope
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/{scope}/providers/Microsoft.Authorization/roleEligibilitySchedules/{roleEligibilityScheduleName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>RoleEligibilitySchedules_Get</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2020-10-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.Authorization.RoleEligibilityScheduleResource" /></description>
            </item>
            </list>
            </summary>
            <param name="roleEligibilityScheduleName"> The name (guid) of the role eligibility schedule to get. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="roleEligibilityScheduleName" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="roleEligibilityScheduleName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.Mocking.MockableAuthorizationArmResource.GetRoleEligibilitySchedule(System.String,System.Threading.CancellationToken)">
            <summary>
            Get the specified role eligibility schedule for a resource scope
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/{scope}/providers/Microsoft.Authorization/roleEligibilitySchedules/{roleEligibilityScheduleName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>RoleEligibilitySchedules_Get</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2020-10-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.Authorization.RoleEligibilityScheduleResource" /></description>
            </item>
            </list>
            </summary>
            <param name="roleEligibilityScheduleName"> The name (guid) of the role eligibility schedule to get. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="roleEligibilityScheduleName" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="roleEligibilityScheduleName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.Mocking.MockableAuthorizationArmResource.GetRoleEligibilityScheduleInstances">
            <summary> Gets a collection of RoleEligibilityScheduleInstanceResources in the ArmResource. </summary>
            <returns> An object representing collection of RoleEligibilityScheduleInstanceResources and their operations over a RoleEligibilityScheduleInstanceResource. </returns>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.Mocking.MockableAuthorizationArmResource.GetRoleEligibilityScheduleInstanceAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Gets the specified role eligibility schedule instance.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/{scope}/providers/Microsoft.Authorization/roleEligibilityScheduleInstances/{roleEligibilityScheduleInstanceName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>RoleEligibilityScheduleInstances_Get</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2020-10-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.Authorization.RoleEligibilityScheduleInstanceResource" /></description>
            </item>
            </list>
            </summary>
            <param name="roleEligibilityScheduleInstanceName"> The name (hash of schedule name + time) of the role eligibility schedule to get. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="roleEligibilityScheduleInstanceName" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="roleEligibilityScheduleInstanceName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.Mocking.MockableAuthorizationArmResource.GetRoleEligibilityScheduleInstance(System.String,System.Threading.CancellationToken)">
            <summary>
            Gets the specified role eligibility schedule instance.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/{scope}/providers/Microsoft.Authorization/roleEligibilityScheduleInstances/{roleEligibilityScheduleInstanceName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>RoleEligibilityScheduleInstances_Get</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2020-10-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.Authorization.RoleEligibilityScheduleInstanceResource" /></description>
            </item>
            </list>
            </summary>
            <param name="roleEligibilityScheduleInstanceName"> The name (hash of schedule name + time) of the role eligibility schedule to get. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="roleEligibilityScheduleInstanceName" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="roleEligibilityScheduleInstanceName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.Mocking.MockableAuthorizationArmResource.GetRoleEligibilityScheduleRequests">
            <summary> Gets a collection of RoleEligibilityScheduleRequestResources in the ArmResource. </summary>
            <returns> An object representing collection of RoleEligibilityScheduleRequestResources and their operations over a RoleEligibilityScheduleRequestResource. </returns>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.Mocking.MockableAuthorizationArmResource.GetRoleEligibilityScheduleRequestAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Get the specified role eligibility schedule request.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/{scope}/providers/Microsoft.Authorization/roleEligibilityScheduleRequests/{roleEligibilityScheduleRequestName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>RoleEligibilityScheduleRequests_Get</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2020-10-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.Authorization.RoleEligibilityScheduleRequestResource" /></description>
            </item>
            </list>
            </summary>
            <param name="roleEligibilityScheduleRequestName"> The name (guid) of the role eligibility schedule request to get. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="roleEligibilityScheduleRequestName" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="roleEligibilityScheduleRequestName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.Mocking.MockableAuthorizationArmResource.GetRoleEligibilityScheduleRequest(System.String,System.Threading.CancellationToken)">
            <summary>
            Get the specified role eligibility schedule request.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/{scope}/providers/Microsoft.Authorization/roleEligibilityScheduleRequests/{roleEligibilityScheduleRequestName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>RoleEligibilityScheduleRequests_Get</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2020-10-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.Authorization.RoleEligibilityScheduleRequestResource" /></description>
            </item>
            </list>
            </summary>
            <param name="roleEligibilityScheduleRequestName"> The name (guid) of the role eligibility schedule request to get. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="roleEligibilityScheduleRequestName" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="roleEligibilityScheduleRequestName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.Mocking.MockableAuthorizationArmResource.GetRoleManagementPolicies">
            <summary> Gets a collection of RoleManagementPolicyResources in the ArmResource. </summary>
            <returns> An object representing collection of RoleManagementPolicyResources and their operations over a RoleManagementPolicyResource. </returns>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.Mocking.MockableAuthorizationArmResource.GetRoleManagementPolicyAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Get the specified role management policy for a resource scope
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/{scope}/providers/Microsoft.Authorization/roleManagementPolicies/{roleManagementPolicyName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>RoleManagementPolicies_Get</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2020-10-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.Authorization.RoleManagementPolicyResource" /></description>
            </item>
            </list>
            </summary>
            <param name="roleManagementPolicyName"> The name (guid) of the role management policy to get. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="roleManagementPolicyName" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="roleManagementPolicyName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.Mocking.MockableAuthorizationArmResource.GetRoleManagementPolicy(System.String,System.Threading.CancellationToken)">
            <summary>
            Get the specified role management policy for a resource scope
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/{scope}/providers/Microsoft.Authorization/roleManagementPolicies/{roleManagementPolicyName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>RoleManagementPolicies_Get</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2020-10-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.Authorization.RoleManagementPolicyResource" /></description>
            </item>
            </list>
            </summary>
            <param name="roleManagementPolicyName"> The name (guid) of the role management policy to get. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="roleManagementPolicyName" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="roleManagementPolicyName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.Mocking.MockableAuthorizationArmResource.GetRoleManagementPolicyAssignments">
            <summary> Gets a collection of RoleManagementPolicyAssignmentResources in the ArmResource. </summary>
            <returns> An object representing collection of RoleManagementPolicyAssignmentResources and their operations over a RoleManagementPolicyAssignmentResource. </returns>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.Mocking.MockableAuthorizationArmResource.GetRoleManagementPolicyAssignmentAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Get the specified role management policy assignment for a resource scope
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/{scope}/providers/Microsoft.Authorization/roleManagementPolicyAssignments/{roleManagementPolicyAssignmentName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>RoleManagementPolicyAssignments_Get</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2020-10-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.Authorization.RoleManagementPolicyAssignmentResource" /></description>
            </item>
            </list>
            </summary>
            <param name="roleManagementPolicyAssignmentName"> The name of format {guid_guid} the role management policy assignment to get. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="roleManagementPolicyAssignmentName" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="roleManagementPolicyAssignmentName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.Mocking.MockableAuthorizationArmResource.GetRoleManagementPolicyAssignment(System.String,System.Threading.CancellationToken)">
            <summary>
            Get the specified role management policy assignment for a resource scope
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/{scope}/providers/Microsoft.Authorization/roleManagementPolicyAssignments/{roleManagementPolicyAssignmentName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>RoleManagementPolicyAssignments_Get</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2020-10-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.Authorization.RoleManagementPolicyAssignmentResource" /></description>
            </item>
            </list>
            </summary>
            <param name="roleManagementPolicyAssignmentName"> The name of format {guid_guid} the role management policy assignment to get. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="roleManagementPolicyAssignmentName" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="roleManagementPolicyAssignmentName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="T:Azure.ResourceManager.Authorization.Mocking.MockableAuthorizationResourceGroupResource">
            <summary> A class to add extension methods to ResourceGroupResource. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.Mocking.MockableAuthorizationResourceGroupResource.#ctor">
            <summary> Initializes a new instance of the <see cref="T:Azure.ResourceManager.Authorization.Mocking.MockableAuthorizationResourceGroupResource" /> class for mocking. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.Mocking.MockableAuthorizationResourceGroupResource.#ctor(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)">
            <summary> Initializes a new instance of the <see cref="T:Azure.ResourceManager.Authorization.Mocking.MockableAuthorizationResourceGroupResource" /> class. </summary>
            <param name="client"> The client parameters to use in these operations. </param>
            <param name="id"> The identifier of the resource that is the target of operations. </param>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.Mocking.MockableAuthorizationResourceGroupResource.GetAzurePermissionsForResourceGroupsAsync(System.Threading.CancellationToken)">
            <summary>
            Gets all permissions the caller has for a resource group.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/Microsoft.Authorization/permissions</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>AzurePermissionsForResourceGroup_List</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2022-04-01</description>
            </item>
            </list>
            </summary>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <returns> An async collection of <see cref="T:Azure.ResourceManager.Authorization.Models.RoleDefinitionPermission" /> that may take multiple service requests to iterate over. </returns>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.Mocking.MockableAuthorizationResourceGroupResource.GetAzurePermissionsForResourceGroups(System.Threading.CancellationToken)">
            <summary>
            Gets all permissions the caller has for a resource group.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/Microsoft.Authorization/permissions</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>AzurePermissionsForResourceGroup_List</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2022-04-01</description>
            </item>
            </list>
            </summary>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <returns> A collection of <see cref="T:Azure.ResourceManager.Authorization.Models.RoleDefinitionPermission" /> that may take multiple service requests to iterate over. </returns>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.Mocking.MockableAuthorizationResourceGroupResource.GetAzurePermissionsForResourcesAsync(System.String,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Gets all permissions the caller has for a resource.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{parentResourcePath}/{resourceType}/{resourceName}/providers/Microsoft.Authorization/permissions</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>AzurePermissionsForResource_List</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2022-04-01</description>
            </item>
            </list>
            </summary>
            <param name="resourceProviderNamespace"> The namespace of the resource provider. </param>
            <param name="parentResourcePath"> The parent resource identity. </param>
            <param name="resourceType"> The resource type of the resource. </param>
            <param name="resourceName"> The name of the resource to get the permissions for. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentException"> <paramref name="resourceName" /> is an empty string, and was expected to be non-empty. </exception>
            <exception cref="T:System.ArgumentNullException"> <paramref name="resourceProviderNamespace" />, <paramref name="parentResourcePath" />, <paramref name="resourceType" /> or <paramref name="resourceName" /> is null. </exception>
            <returns> An async collection of <see cref="T:Azure.ResourceManager.Authorization.Models.RoleDefinitionPermission" /> that may take multiple service requests to iterate over. </returns>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.Mocking.MockableAuthorizationResourceGroupResource.GetAzurePermissionsForResources(System.String,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Gets all permissions the caller has for a resource.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{parentResourcePath}/{resourceType}/{resourceName}/providers/Microsoft.Authorization/permissions</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>AzurePermissionsForResource_List</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2022-04-01</description>
            </item>
            </list>
            </summary>
            <param name="resourceProviderNamespace"> The namespace of the resource provider. </param>
            <param name="parentResourcePath"> The parent resource identity. </param>
            <param name="resourceType"> The resource type of the resource. </param>
            <param name="resourceName"> The name of the resource to get the permissions for. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentException"> <paramref name="resourceName" /> is an empty string, and was expected to be non-empty. </exception>
            <exception cref="T:System.ArgumentNullException"> <paramref name="resourceProviderNamespace" />, <paramref name="parentResourcePath" />, <paramref name="resourceType" /> or <paramref name="resourceName" /> is null. </exception>
            <returns> A collection of <see cref="T:Azure.ResourceManager.Authorization.Models.RoleDefinitionPermission" /> that may take multiple service requests to iterate over. </returns>
        </member>
        <member name="T:Azure.ResourceManager.Authorization.Mocking.MockableAuthorizationSubscriptionResource">
            <summary> A class to add extension methods to SubscriptionResource. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.Mocking.MockableAuthorizationSubscriptionResource.#ctor">
            <summary> Initializes a new instance of the <see cref="T:Azure.ResourceManager.Authorization.Mocking.MockableAuthorizationSubscriptionResource" /> class for mocking. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.Mocking.MockableAuthorizationSubscriptionResource.#ctor(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)">
            <summary> Initializes a new instance of the <see cref="T:Azure.ResourceManager.Authorization.Mocking.MockableAuthorizationSubscriptionResource" /> class. </summary>
            <param name="client"> The client parameters to use in these operations. </param>
            <param name="id"> The identifier of the resource that is the target of operations. </param>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.Mocking.MockableAuthorizationSubscriptionResource.GetClassicAdministratorsAsync(System.Threading.CancellationToken)">
            <summary>
            Gets service administrator, account administrator, and co-administrators for the subscription.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/providers/Microsoft.Authorization/classicAdministrators</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>ClassicAdministrators_List</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2015-07-01</description>
            </item>
            </list>
            </summary>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <returns> An async collection of <see cref="T:Azure.ResourceManager.Authorization.Models.AuthorizationClassicAdministrator" /> that may take multiple service requests to iterate over. </returns>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.Mocking.MockableAuthorizationSubscriptionResource.GetClassicAdministrators(System.Threading.CancellationToken)">
            <summary>
            Gets service administrator, account administrator, and co-administrators for the subscription.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/subscriptions/{subscriptionId}/providers/Microsoft.Authorization/classicAdministrators</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>ClassicAdministrators_List</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2015-07-01</description>
            </item>
            </list>
            </summary>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <returns> A collection of <see cref="T:Azure.ResourceManager.Authorization.Models.AuthorizationClassicAdministrator" /> that may take multiple service requests to iterate over. </returns>
        </member>
        <member name="T:Azure.ResourceManager.Authorization.Mocking.MockableAuthorizationTenantResource">
            <summary> A class to add extension methods to TenantResource. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.Mocking.MockableAuthorizationTenantResource.#ctor">
            <summary> Initializes a new instance of the <see cref="T:Azure.ResourceManager.Authorization.Mocking.MockableAuthorizationTenantResource" /> class for mocking. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.Mocking.MockableAuthorizationTenantResource.#ctor(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)">
            <summary> Initializes a new instance of the <see cref="T:Azure.ResourceManager.Authorization.Mocking.MockableAuthorizationTenantResource" /> class. </summary>
            <param name="client"> The client parameters to use in these operations. </param>
            <param name="id"> The identifier of the resource that is the target of operations. </param>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.Mocking.MockableAuthorizationTenantResource.GetAllAuthorizationProviderOperationsMetadata">
            <summary> Gets a collection of AuthorizationProviderOperationsMetadataResources in the TenantResource. </summary>
            <returns> An object representing collection of AuthorizationProviderOperationsMetadataResources and their operations over a AuthorizationProviderOperationsMetadataResource. </returns>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.Mocking.MockableAuthorizationTenantResource.GetAuthorizationProviderOperationsMetadataAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Gets provider operations metadata for the specified resource provider.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/providers/Microsoft.Authorization/providerOperations/{resourceProviderNamespace}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>ProviderOperationsMetadata_Get</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2022-04-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.Authorization.AuthorizationProviderOperationsMetadataResource" /></description>
            </item>
            </list>
            </summary>
            <param name="resourceProviderNamespace"> The namespace of the resource provider. </param>
            <param name="expand"> Specifies whether to expand the values. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="resourceProviderNamespace" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.Mocking.MockableAuthorizationTenantResource.GetAuthorizationProviderOperationsMetadata(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Gets provider operations metadata for the specified resource provider.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/providers/Microsoft.Authorization/providerOperations/{resourceProviderNamespace}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>ProviderOperationsMetadata_Get</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2022-04-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.Authorization.AuthorizationProviderOperationsMetadataResource" /></description>
            </item>
            </list>
            </summary>
            <param name="resourceProviderNamespace"> The namespace of the resource provider. </param>
            <param name="expand"> Specifies whether to expand the values. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="resourceProviderNamespace" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.Mocking.MockableAuthorizationTenantResource.ElevateAccessGlobalAdministratorAsync(System.Threading.CancellationToken)">
            <summary>
            Elevates access for a Global Administrator.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/providers/Microsoft.Authorization/elevateAccess</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>GlobalAdministrator_ElevateAccess</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2015-07-01</description>
            </item>
            </list>
            </summary>
            <param name="cancellationToken"> The cancellation token to use. </param>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.Mocking.MockableAuthorizationTenantResource.ElevateAccessGlobalAdministrator(System.Threading.CancellationToken)">
            <summary>
            Elevates access for a Global Administrator.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/providers/Microsoft.Authorization/elevateAccess</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>GlobalAdministrator_ElevateAccess</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2015-07-01</description>
            </item>
            </list>
            </summary>
            <param name="cancellationToken"> The cancellation token to use. </param>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.AuthorizationArmOperation`1.#ctor">
            <summary> Initializes a new instance of AuthorizationArmOperation for mocking. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Authorization.AuthorizationArmOperation`1.Id">
            <summary>
            Gets an ID representing the operation that can be used to poll for
            the status of the long-running operation.
            There are cases that operation id is not available, we return "NOT_SET" for unavailable operation id.
            </summary>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.AuthorizationArmOperation`1.GetRehydrationToken">
            <summary>
            Get a token that can be used to rehydrate the operation.
            </summary>
        </member>
        <member name="P:Azure.ResourceManager.Authorization.AuthorizationArmOperation`1.Value">
            <summary>
            Final result of the long-running operation.
            </summary><remarks>
            This property can be accessed only after the operation completes successfully (HasValue is true).
            </remarks>
        </member>
        <member name="P:Azure.ResourceManager.Authorization.AuthorizationArmOperation`1.HasValue">
            <summary>
            Returns true if the long-running operation completed successfully and has produced final result (accessible by Value property).
            </summary>
        </member>
        <member name="P:Azure.ResourceManager.Authorization.AuthorizationArmOperation`1.HasCompleted">
            <summary>
            Returns true if the long-running operation completed.
            </summary>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.AuthorizationArmOperation`1.GetRawResponse">
            <summary>
            The last HTTP response received from the server.
            </summary><remarks>
            The last response returned from the server during the lifecycle of this instance.
            An instance of <see cref="T:Azure.Operation`1" /> sends requests to a server in UpdateStatusAsync, UpdateStatus, and other methods.
            Responses from these requests can be accessed using GetRawResponse.
            </remarks>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.AuthorizationArmOperation`1.UpdateStatus(System.Threading.CancellationToken)">
            <summary>
            Calls the server to get updated status of the long-running operation.
            </summary><param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> used for the service call.</param><returns>The HTTP response received from the server.</returns><remarks>
            This operation will update the value returned from GetRawResponse and might update HasCompleted.
            </remarks>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.AuthorizationArmOperation`1.UpdateStatusAsync(System.Threading.CancellationToken)">
            <summary>
            Calls the server to get updated status of the long-running operation.
            </summary><param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> used for the service call.</param><returns>The HTTP response received from the server.</returns><remarks>
            This operation will update the value returned from GetRawResponse and might update HasCompleted.
            </remarks>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.AuthorizationArmOperation`1.WaitForCompletion(System.Threading.CancellationToken)">
            <summary>
            Periodically calls the server till the long-running operation completes.
            </summary><param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> used for the periodical service calls.</param><returns>The last HTTP response received from the server.</returns><remarks>
            This method will periodically call UpdateStatusAsync till HasCompleted is true, then return the final result of the operation.
            </remarks>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.AuthorizationArmOperation`1.WaitForCompletion(System.TimeSpan,System.Threading.CancellationToken)">
            <summary>
            Periodically calls the server till the long-running operation completes.
            </summary><param name="pollingInterval">
            The interval between status requests to the server.
            The interval can change based on information returned from the server.
            For example, the server might communicate to the client that there is not reason to poll for status change sooner than some time.
            </param><param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> used for the periodical service calls.</param><returns>The last HTTP response received from the server.</returns><remarks>
            This method will periodically call UpdateStatusAsync till HasCompleted is true, then return the final result of the operation.
            </remarks>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.AuthorizationArmOperation`1.WaitForCompletionAsync(System.Threading.CancellationToken)">
            <summary>
            Periodically calls the server till the long-running operation completes.
            </summary><param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> used for the periodical service calls.</param><returns>The last HTTP response received from the server.</returns><remarks>
            This method will periodically call UpdateStatusAsync till HasCompleted is true, then return the final result of the operation.
            </remarks>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.AuthorizationArmOperation`1.WaitForCompletionAsync(System.TimeSpan,System.Threading.CancellationToken)">
            <summary>
            Periodically calls the server till the long-running operation completes.
            </summary><param name="pollingInterval">
            The interval between status requests to the server.
            The interval can change based on information returned from the server.
            For example, the server might communicate to the client that there is not reason to poll for status change sooner than some time.
            </param><param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> used for the periodical service calls.</param><returns>The last HTTP response received from the server.</returns><remarks>
            This method will periodically call UpdateStatusAsync till HasCompleted is true, then return the final result of the operation.
            </remarks>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.AzurePermissionsForResourceGroupRestOperations.#ctor(Azure.Core.Pipeline.HttpPipeline,System.String,System.Uri,System.String)">
            <summary> Initializes a new instance of AzurePermissionsForResourceGroupRestOperations. </summary>
            <param name="pipeline"> The HTTP pipeline for sending and receiving REST requests and responses. </param>
            <param name="applicationId"> The application id to use for user agent. </param>
            <param name="endpoint"> server parameter. </param>
            <param name="apiVersion"> Api Version. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="pipeline" /> or <paramref name="apiVersion" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.AzurePermissionsForResourceGroupRestOperations.ListAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary> Gets all permissions the caller has for a resource group. </summary>
            <param name="subscriptionId"> The ID of the target subscription. </param>
            <param name="resourceGroupName"> The name of the resource group. The name is case insensitive. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="subscriptionId" /> or <paramref name="resourceGroupName" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" /> or <paramref name="resourceGroupName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.AzurePermissionsForResourceGroupRestOperations.List(System.String,System.String,System.Threading.CancellationToken)">
            <summary> Gets all permissions the caller has for a resource group. </summary>
            <param name="subscriptionId"> The ID of the target subscription. </param>
            <param name="resourceGroupName"> The name of the resource group. The name is case insensitive. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="subscriptionId" /> or <paramref name="resourceGroupName" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" /> or <paramref name="resourceGroupName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.AzurePermissionsForResourceGroupRestOperations.ListNextPageAsync(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary> Gets all permissions the caller has for a resource group. </summary>
            <param name="nextLink"> The URL to the next page of results. </param>
            <param name="subscriptionId"> The ID of the target subscription. </param>
            <param name="resourceGroupName"> The name of the resource group. The name is case insensitive. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="nextLink" />, <paramref name="subscriptionId" /> or <paramref name="resourceGroupName" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" /> or <paramref name="resourceGroupName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.AzurePermissionsForResourceGroupRestOperations.ListNextPage(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary> Gets all permissions the caller has for a resource group. </summary>
            <param name="nextLink"> The URL to the next page of results. </param>
            <param name="subscriptionId"> The ID of the target subscription. </param>
            <param name="resourceGroupName"> The name of the resource group. The name is case insensitive. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="nextLink" />, <paramref name="subscriptionId" /> or <paramref name="resourceGroupName" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" /> or <paramref name="resourceGroupName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.AzurePermissionsForResourceRestOperations.#ctor(Azure.Core.Pipeline.HttpPipeline,System.String,System.Uri,System.String)">
            <summary> Initializes a new instance of AzurePermissionsForResourceRestOperations. </summary>
            <param name="pipeline"> The HTTP pipeline for sending and receiving REST requests and responses. </param>
            <param name="applicationId"> The application id to use for user agent. </param>
            <param name="endpoint"> server parameter. </param>
            <param name="apiVersion"> Api Version. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="pipeline" /> or <paramref name="apiVersion" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.AzurePermissionsForResourceRestOperations.ListAsync(System.String,System.String,System.String,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary> Gets all permissions the caller has for a resource. </summary>
            <param name="subscriptionId"> The ID of the target subscription. </param>
            <param name="resourceGroupName"> The name of the resource group. The name is case insensitive. </param>
            <param name="resourceProviderNamespace"> The namespace of the resource provider. </param>
            <param name="parentResourcePath"> The parent resource identity. </param>
            <param name="resourceType"> The resource type of the resource. </param>
            <param name="resourceName"> The name of the resource to get the permissions for. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" />, <paramref name="resourceProviderNamespace" />, <paramref name="parentResourcePath" />, <paramref name="resourceType" /> or <paramref name="resourceName" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" /> or <paramref name="resourceName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.AzurePermissionsForResourceRestOperations.List(System.String,System.String,System.String,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary> Gets all permissions the caller has for a resource. </summary>
            <param name="subscriptionId"> The ID of the target subscription. </param>
            <param name="resourceGroupName"> The name of the resource group. The name is case insensitive. </param>
            <param name="resourceProviderNamespace"> The namespace of the resource provider. </param>
            <param name="parentResourcePath"> The parent resource identity. </param>
            <param name="resourceType"> The resource type of the resource. </param>
            <param name="resourceName"> The name of the resource to get the permissions for. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" />, <paramref name="resourceProviderNamespace" />, <paramref name="parentResourcePath" />, <paramref name="resourceType" /> or <paramref name="resourceName" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" /> or <paramref name="resourceName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.AzurePermissionsForResourceRestOperations.ListNextPageAsync(System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary> Gets all permissions the caller has for a resource. </summary>
            <param name="nextLink"> The URL to the next page of results. </param>
            <param name="subscriptionId"> The ID of the target subscription. </param>
            <param name="resourceGroupName"> The name of the resource group. The name is case insensitive. </param>
            <param name="resourceProviderNamespace"> The namespace of the resource provider. </param>
            <param name="parentResourcePath"> The parent resource identity. </param>
            <param name="resourceType"> The resource type of the resource. </param>
            <param name="resourceName"> The name of the resource to get the permissions for. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="nextLink" />, <paramref name="subscriptionId" />, <paramref name="resourceGroupName" />, <paramref name="resourceProviderNamespace" />, <paramref name="parentResourcePath" />, <paramref name="resourceType" /> or <paramref name="resourceName" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" /> or <paramref name="resourceName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.AzurePermissionsForResourceRestOperations.ListNextPage(System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary> Gets all permissions the caller has for a resource. </summary>
            <param name="nextLink"> The URL to the next page of results. </param>
            <param name="subscriptionId"> The ID of the target subscription. </param>
            <param name="resourceGroupName"> The name of the resource group. The name is case insensitive. </param>
            <param name="resourceProviderNamespace"> The namespace of the resource provider. </param>
            <param name="parentResourcePath"> The parent resource identity. </param>
            <param name="resourceType"> The resource type of the resource. </param>
            <param name="resourceName"> The name of the resource to get the permissions for. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="nextLink" />, <paramref name="subscriptionId" />, <paramref name="resourceGroupName" />, <paramref name="resourceProviderNamespace" />, <paramref name="parentResourcePath" />, <paramref name="resourceType" /> or <paramref name="resourceName" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" />, <paramref name="resourceGroupName" /> or <paramref name="resourceName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.ClassicAdministratorsRestOperations.#ctor(Azure.Core.Pipeline.HttpPipeline,System.String,System.Uri,System.String)">
            <summary> Initializes a new instance of ClassicAdministratorsRestOperations. </summary>
            <param name="pipeline"> The HTTP pipeline for sending and receiving REST requests and responses. </param>
            <param name="applicationId"> The application id to use for user agent. </param>
            <param name="endpoint"> server parameter. </param>
            <param name="apiVersion"> Api Version. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="pipeline" /> or <paramref name="apiVersion" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.ClassicAdministratorsRestOperations.ListAsync(System.String,System.Threading.CancellationToken)">
            <summary> Gets service administrator, account administrator, and co-administrators for the subscription. </summary>
            <param name="subscriptionId"> The ID of the target subscription. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="subscriptionId" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.ClassicAdministratorsRestOperations.List(System.String,System.Threading.CancellationToken)">
            <summary> Gets service administrator, account administrator, and co-administrators for the subscription. </summary>
            <param name="subscriptionId"> The ID of the target subscription. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="subscriptionId" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.ClassicAdministratorsRestOperations.ListNextPageAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary> Gets service administrator, account administrator, and co-administrators for the subscription. </summary>
            <param name="nextLink"> The URL to the next page of results. </param>
            <param name="subscriptionId"> The ID of the target subscription. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="nextLink" /> or <paramref name="subscriptionId" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.ClassicAdministratorsRestOperations.ListNextPage(System.String,System.String,System.Threading.CancellationToken)">
            <summary> Gets service administrator, account administrator, and co-administrators for the subscription. </summary>
            <param name="nextLink"> The URL to the next page of results. </param>
            <param name="subscriptionId"> The ID of the target subscription. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="nextLink" /> or <paramref name="subscriptionId" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="subscriptionId" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.DenyAssignmentsRestOperations.#ctor(Azure.Core.Pipeline.HttpPipeline,System.String,System.Uri,System.String)">
            <summary> Initializes a new instance of DenyAssignmentsRestOperations. </summary>
            <param name="pipeline"> The HTTP pipeline for sending and receiving REST requests and responses. </param>
            <param name="applicationId"> The application id to use for user agent. </param>
            <param name="endpoint"> server parameter. </param>
            <param name="apiVersion"> Api Version. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="pipeline" /> or <paramref name="apiVersion" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.DenyAssignmentsRestOperations.GetAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary> Get the specified deny assignment. </summary>
            <param name="scope"> The scope of the deny assignment. </param>
            <param name="denyAssignmentId"> The ID of the deny assignment to get. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="scope" /> or <paramref name="denyAssignmentId" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="denyAssignmentId" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.DenyAssignmentsRestOperations.Get(System.String,System.String,System.Threading.CancellationToken)">
            <summary> Get the specified deny assignment. </summary>
            <param name="scope"> The scope of the deny assignment. </param>
            <param name="denyAssignmentId"> The ID of the deny assignment to get. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="scope" /> or <paramref name="denyAssignmentId" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="denyAssignmentId" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.DenyAssignmentsRestOperations.ListForScopeAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary> Gets deny assignments for a scope. </summary>
            <param name="scope"> The scope of the deny assignments. </param>
            <param name="filter"> The filter to apply on the operation. Use $filter=atScope() to return all deny assignments at or above the scope. Use $filter=denyAssignmentName eq '{name}' to search deny assignments by name at specified scope. Use $filter=principalId eq '{id}' to return all deny assignments at, above and below the scope for the specified principal. Use $filter=gdprExportPrincipalId eq '{id}' to return all deny assignments at, above and below the scope for the specified principal. This filter is different from the principalId filter as it returns not only those deny assignments that contain the specified principal is the Principals list but also those deny assignments that contain the specified principal is the ExcludePrincipals list. Additionally, when gdprExportPrincipalId filter is used, only the deny assignment name and description properties are returned. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="scope" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.DenyAssignmentsRestOperations.ListForScope(System.String,System.String,System.Threading.CancellationToken)">
            <summary> Gets deny assignments for a scope. </summary>
            <param name="scope"> The scope of the deny assignments. </param>
            <param name="filter"> The filter to apply on the operation. Use $filter=atScope() to return all deny assignments at or above the scope. Use $filter=denyAssignmentName eq '{name}' to search deny assignments by name at specified scope. Use $filter=principalId eq '{id}' to return all deny assignments at, above and below the scope for the specified principal. Use $filter=gdprExportPrincipalId eq '{id}' to return all deny assignments at, above and below the scope for the specified principal. This filter is different from the principalId filter as it returns not only those deny assignments that contain the specified principal is the Principals list but also those deny assignments that contain the specified principal is the ExcludePrincipals list. Additionally, when gdprExportPrincipalId filter is used, only the deny assignment name and description properties are returned. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="scope" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.DenyAssignmentsRestOperations.ListForScopeNextPageAsync(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary> Gets deny assignments for a scope. </summary>
            <param name="nextLink"> The URL to the next page of results. </param>
            <param name="scope"> The scope of the deny assignments. </param>
            <param name="filter"> The filter to apply on the operation. Use $filter=atScope() to return all deny assignments at or above the scope. Use $filter=denyAssignmentName eq '{name}' to search deny assignments by name at specified scope. Use $filter=principalId eq '{id}' to return all deny assignments at, above and below the scope for the specified principal. Use $filter=gdprExportPrincipalId eq '{id}' to return all deny assignments at, above and below the scope for the specified principal. This filter is different from the principalId filter as it returns not only those deny assignments that contain the specified principal is the Principals list but also those deny assignments that contain the specified principal is the ExcludePrincipals list. Additionally, when gdprExportPrincipalId filter is used, only the deny assignment name and description properties are returned. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="nextLink" /> or <paramref name="scope" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.DenyAssignmentsRestOperations.ListForScopeNextPage(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary> Gets deny assignments for a scope. </summary>
            <param name="nextLink"> The URL to the next page of results. </param>
            <param name="scope"> The scope of the deny assignments. </param>
            <param name="filter"> The filter to apply on the operation. Use $filter=atScope() to return all deny assignments at or above the scope. Use $filter=denyAssignmentName eq '{name}' to search deny assignments by name at specified scope. Use $filter=principalId eq '{id}' to return all deny assignments at, above and below the scope for the specified principal. Use $filter=gdprExportPrincipalId eq '{id}' to return all deny assignments at, above and below the scope for the specified principal. This filter is different from the principalId filter as it returns not only those deny assignments that contain the specified principal is the Principals list but also those deny assignments that contain the specified principal is the ExcludePrincipals list. Additionally, when gdprExportPrincipalId filter is used, only the deny assignment name and description properties are returned. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="nextLink" /> or <paramref name="scope" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.EligibleChildResourcesRestOperations.#ctor(Azure.Core.Pipeline.HttpPipeline,System.String,System.Uri,System.String)">
            <summary> Initializes a new instance of EligibleChildResourcesRestOperations. </summary>
            <param name="pipeline"> The HTTP pipeline for sending and receiving REST requests and responses. </param>
            <param name="applicationId"> The application id to use for user agent. </param>
            <param name="endpoint"> server parameter. </param>
            <param name="apiVersion"> Api Version. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="pipeline" /> or <paramref name="apiVersion" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.EligibleChildResourcesRestOperations.GetAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary> Get the child resources of a resource on which user has eligible access. </summary>
            <param name="scope"> The scope of the role management policy. </param>
            <param name="filter"> The filter to apply on the operation. Use $filter=resourceType+eq+'Subscription' to filter on only resource of type = 'Subscription'. Use $filter=resourceType+eq+'subscription'+or+resourceType+eq+'resourcegroup' to filter on resource of type = 'Subscription' or 'ResourceGroup'. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="scope" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.EligibleChildResourcesRestOperations.Get(System.String,System.String,System.Threading.CancellationToken)">
            <summary> Get the child resources of a resource on which user has eligible access. </summary>
            <param name="scope"> The scope of the role management policy. </param>
            <param name="filter"> The filter to apply on the operation. Use $filter=resourceType+eq+'Subscription' to filter on only resource of type = 'Subscription'. Use $filter=resourceType+eq+'subscription'+or+resourceType+eq+'resourcegroup' to filter on resource of type = 'Subscription' or 'ResourceGroup'. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="scope" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.EligibleChildResourcesRestOperations.GetNextPageAsync(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary> Get the child resources of a resource on which user has eligible access. </summary>
            <param name="nextLink"> The URL to the next page of results. </param>
            <param name="scope"> The scope of the role management policy. </param>
            <param name="filter"> The filter to apply on the operation. Use $filter=resourceType+eq+'Subscription' to filter on only resource of type = 'Subscription'. Use $filter=resourceType+eq+'subscription'+or+resourceType+eq+'resourcegroup' to filter on resource of type = 'Subscription' or 'ResourceGroup'. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="nextLink" /> or <paramref name="scope" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.EligibleChildResourcesRestOperations.GetNextPage(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary> Get the child resources of a resource on which user has eligible access. </summary>
            <param name="nextLink"> The URL to the next page of results. </param>
            <param name="scope"> The scope of the role management policy. </param>
            <param name="filter"> The filter to apply on the operation. Use $filter=resourceType+eq+'Subscription' to filter on only resource of type = 'Subscription'. Use $filter=resourceType+eq+'subscription'+or+resourceType+eq+'resourcegroup' to filter on resource of type = 'Subscription' or 'ResourceGroup'. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="nextLink" /> or <paramref name="scope" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.GlobalAdministratorRestOperations.#ctor(Azure.Core.Pipeline.HttpPipeline,System.String,System.Uri,System.String)">
            <summary> Initializes a new instance of GlobalAdministratorRestOperations. </summary>
            <param name="pipeline"> The HTTP pipeline for sending and receiving REST requests and responses. </param>
            <param name="applicationId"> The application id to use for user agent. </param>
            <param name="endpoint"> server parameter. </param>
            <param name="apiVersion"> Api Version. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="pipeline" /> or <paramref name="apiVersion" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.GlobalAdministratorRestOperations.ElevateAccessAsync(System.Threading.CancellationToken)">
            <summary> Elevates access for a Global Administrator. </summary>
            <param name="cancellationToken"> The cancellation token to use. </param>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.GlobalAdministratorRestOperations.ElevateAccess(System.Threading.CancellationToken)">
            <summary> Elevates access for a Global Administrator. </summary>
            <param name="cancellationToken"> The cancellation token to use. </param>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.ProviderOperationsMetadataRestOperations.#ctor(Azure.Core.Pipeline.HttpPipeline,System.String,System.Uri,System.String)">
            <summary> Initializes a new instance of ProviderOperationsMetadataRestOperations. </summary>
            <param name="pipeline"> The HTTP pipeline for sending and receiving REST requests and responses. </param>
            <param name="applicationId"> The application id to use for user agent. </param>
            <param name="endpoint"> server parameter. </param>
            <param name="apiVersion"> Api Version. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="pipeline" /> or <paramref name="apiVersion" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.ProviderOperationsMetadataRestOperations.GetAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary> Gets provider operations metadata for the specified resource provider. </summary>
            <param name="resourceProviderNamespace"> The namespace of the resource provider. </param>
            <param name="expand"> Specifies whether to expand the values. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="resourceProviderNamespace" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.ProviderOperationsMetadataRestOperations.Get(System.String,System.String,System.Threading.CancellationToken)">
            <summary> Gets provider operations metadata for the specified resource provider. </summary>
            <param name="resourceProviderNamespace"> The namespace of the resource provider. </param>
            <param name="expand"> Specifies whether to expand the values. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="resourceProviderNamespace" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.ProviderOperationsMetadataRestOperations.ListAsync(System.String,System.Threading.CancellationToken)">
            <summary> Gets provider operations metadata for all resource providers. </summary>
            <param name="expand"> Specifies whether to expand the values. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.ProviderOperationsMetadataRestOperations.List(System.String,System.Threading.CancellationToken)">
            <summary> Gets provider operations metadata for all resource providers. </summary>
            <param name="expand"> Specifies whether to expand the values. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.ProviderOperationsMetadataRestOperations.ListNextPageAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary> Gets provider operations metadata for all resource providers. </summary>
            <param name="nextLink"> The URL to the next page of results. </param>
            <param name="expand"> Specifies whether to expand the values. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="nextLink" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.ProviderOperationsMetadataRestOperations.ListNextPage(System.String,System.String,System.Threading.CancellationToken)">
            <summary> Gets provider operations metadata for all resource providers. </summary>
            <param name="nextLink"> The URL to the next page of results. </param>
            <param name="expand"> Specifies whether to expand the values. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="nextLink" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.RoleAssignmentScheduleInstancesRestOperations.#ctor(Azure.Core.Pipeline.HttpPipeline,System.String,System.Uri,System.String)">
            <summary> Initializes a new instance of RoleAssignmentScheduleInstancesRestOperations. </summary>
            <param name="pipeline"> The HTTP pipeline for sending and receiving REST requests and responses. </param>
            <param name="applicationId"> The application id to use for user agent. </param>
            <param name="endpoint"> server parameter. </param>
            <param name="apiVersion"> Api Version. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="pipeline" /> or <paramref name="apiVersion" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.RoleAssignmentScheduleInstancesRestOperations.ListForScopeAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary> Gets role assignment schedule instances of a role assignment schedule. </summary>
            <param name="scope"> The scope of the role assignment schedule. </param>
            <param name="filter"> The filter to apply on the operation. Use $filter=atScope() to return all role assignment schedules at or above the scope. Use $filter=principalId eq {id} to return all role assignment schedules at, above or below the scope for the specified principal.  Use $filter=assignedTo('{userId}') to return all role assignment schedule instances for the user. Use $filter=asTarget() to return all role assignment schedule instances created for the current user. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="scope" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.RoleAssignmentScheduleInstancesRestOperations.ListForScope(System.String,System.String,System.Threading.CancellationToken)">
            <summary> Gets role assignment schedule instances of a role assignment schedule. </summary>
            <param name="scope"> The scope of the role assignment schedule. </param>
            <param name="filter"> The filter to apply on the operation. Use $filter=atScope() to return all role assignment schedules at or above the scope. Use $filter=principalId eq {id} to return all role assignment schedules at, above or below the scope for the specified principal.  Use $filter=assignedTo('{userId}') to return all role assignment schedule instances for the user. Use $filter=asTarget() to return all role assignment schedule instances created for the current user. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="scope" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.RoleAssignmentScheduleInstancesRestOperations.GetAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary> Gets the specified role assignment schedule instance. </summary>
            <param name="scope"> The scope of the role assignments schedules. </param>
            <param name="roleAssignmentScheduleInstanceName"> The name (hash of schedule name + time) of the role assignment schedule to get. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="scope" /> or <paramref name="roleAssignmentScheduleInstanceName" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="roleAssignmentScheduleInstanceName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.RoleAssignmentScheduleInstancesRestOperations.Get(System.String,System.String,System.Threading.CancellationToken)">
            <summary> Gets the specified role assignment schedule instance. </summary>
            <param name="scope"> The scope of the role assignments schedules. </param>
            <param name="roleAssignmentScheduleInstanceName"> The name (hash of schedule name + time) of the role assignment schedule to get. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="scope" /> or <paramref name="roleAssignmentScheduleInstanceName" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="roleAssignmentScheduleInstanceName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.RoleAssignmentScheduleInstancesRestOperations.ListForScopeNextPageAsync(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary> Gets role assignment schedule instances of a role assignment schedule. </summary>
            <param name="nextLink"> The URL to the next page of results. </param>
            <param name="scope"> The scope of the role assignment schedule. </param>
            <param name="filter"> The filter to apply on the operation. Use $filter=atScope() to return all role assignment schedules at or above the scope. Use $filter=principalId eq {id} to return all role assignment schedules at, above or below the scope for the specified principal.  Use $filter=assignedTo('{userId}') to return all role assignment schedule instances for the user. Use $filter=asTarget() to return all role assignment schedule instances created for the current user. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="nextLink" /> or <paramref name="scope" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.RoleAssignmentScheduleInstancesRestOperations.ListForScopeNextPage(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary> Gets role assignment schedule instances of a role assignment schedule. </summary>
            <param name="nextLink"> The URL to the next page of results. </param>
            <param name="scope"> The scope of the role assignment schedule. </param>
            <param name="filter"> The filter to apply on the operation. Use $filter=atScope() to return all role assignment schedules at or above the scope. Use $filter=principalId eq {id} to return all role assignment schedules at, above or below the scope for the specified principal.  Use $filter=assignedTo('{userId}') to return all role assignment schedule instances for the user. Use $filter=asTarget() to return all role assignment schedule instances created for the current user. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="nextLink" /> or <paramref name="scope" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.RoleAssignmentScheduleRequestsRestOperations.#ctor(Azure.Core.Pipeline.HttpPipeline,System.String,System.Uri,System.String)">
            <summary> Initializes a new instance of RoleAssignmentScheduleRequestsRestOperations. </summary>
            <param name="pipeline"> The HTTP pipeline for sending and receiving REST requests and responses. </param>
            <param name="applicationId"> The application id to use for user agent. </param>
            <param name="endpoint"> server parameter. </param>
            <param name="apiVersion"> Api Version. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="pipeline" /> or <paramref name="apiVersion" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.RoleAssignmentScheduleRequestsRestOperations.CreateAsync(System.String,System.String,Azure.ResourceManager.Authorization.RoleAssignmentScheduleRequestData,System.Threading.CancellationToken)">
            <summary> Creates a role assignment schedule request. </summary>
            <param name="scope"> The scope of the role assignment schedule request to create. The scope can be any REST resource instance. For example, use '/subscriptions/{subscription-id}/' for a subscription, '/subscriptions/{subscription-id}/resourceGroups/{resource-group-name}' for a resource group, and '/subscriptions/{subscription-id}/resourceGroups/{resource-group-name}/providers/{resource-provider}/{resource-type}/{resource-name}' for a resource. </param>
            <param name="roleAssignmentScheduleRequestName"> A GUID for the role assignment to create. The name must be unique and different for each role assignment. </param>
            <param name="data"> Parameters for the role assignment schedule request. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="scope" />, <paramref name="roleAssignmentScheduleRequestName" /> or <paramref name="data" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="roleAssignmentScheduleRequestName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.RoleAssignmentScheduleRequestsRestOperations.Create(System.String,System.String,Azure.ResourceManager.Authorization.RoleAssignmentScheduleRequestData,System.Threading.CancellationToken)">
            <summary> Creates a role assignment schedule request. </summary>
            <param name="scope"> The scope of the role assignment schedule request to create. The scope can be any REST resource instance. For example, use '/subscriptions/{subscription-id}/' for a subscription, '/subscriptions/{subscription-id}/resourceGroups/{resource-group-name}' for a resource group, and '/subscriptions/{subscription-id}/resourceGroups/{resource-group-name}/providers/{resource-provider}/{resource-type}/{resource-name}' for a resource. </param>
            <param name="roleAssignmentScheduleRequestName"> A GUID for the role assignment to create. The name must be unique and different for each role assignment. </param>
            <param name="data"> Parameters for the role assignment schedule request. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="scope" />, <paramref name="roleAssignmentScheduleRequestName" /> or <paramref name="data" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="roleAssignmentScheduleRequestName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.RoleAssignmentScheduleRequestsRestOperations.GetAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary> Get the specified role assignment schedule request. </summary>
            <param name="scope"> The scope of the role assignment schedule request. </param>
            <param name="roleAssignmentScheduleRequestName"> The name (guid) of the role assignment schedule request to get. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="scope" /> or <paramref name="roleAssignmentScheduleRequestName" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="roleAssignmentScheduleRequestName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.RoleAssignmentScheduleRequestsRestOperations.Get(System.String,System.String,System.Threading.CancellationToken)">
            <summary> Get the specified role assignment schedule request. </summary>
            <param name="scope"> The scope of the role assignment schedule request. </param>
            <param name="roleAssignmentScheduleRequestName"> The name (guid) of the role assignment schedule request to get. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="scope" /> or <paramref name="roleAssignmentScheduleRequestName" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="roleAssignmentScheduleRequestName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.RoleAssignmentScheduleRequestsRestOperations.ListForScopeAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary> Gets role assignment schedule requests for a scope. </summary>
            <param name="scope"> The scope of the role assignments schedule requests. </param>
            <param name="filter"> The filter to apply on the operation. Use $filter=atScope() to return all role assignment schedule requests at or above the scope. Use $filter=principalId eq {id} to return all role assignment schedule requests at, above or below the scope for the specified principal. Use $filter=asRequestor() to return all role assignment schedule requests requested by the current user. Use $filter=asTarget() to return all role assignment schedule requests created for the current user. Use $filter=asApprover() to return all role assignment schedule requests where the current user is an approver. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="scope" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.RoleAssignmentScheduleRequestsRestOperations.ListForScope(System.String,System.String,System.Threading.CancellationToken)">
            <summary> Gets role assignment schedule requests for a scope. </summary>
            <param name="scope"> The scope of the role assignments schedule requests. </param>
            <param name="filter"> The filter to apply on the operation. Use $filter=atScope() to return all role assignment schedule requests at or above the scope. Use $filter=principalId eq {id} to return all role assignment schedule requests at, above or below the scope for the specified principal. Use $filter=asRequestor() to return all role assignment schedule requests requested by the current user. Use $filter=asTarget() to return all role assignment schedule requests created for the current user. Use $filter=asApprover() to return all role assignment schedule requests where the current user is an approver. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="scope" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.RoleAssignmentScheduleRequestsRestOperations.CancelAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary> Cancels a pending role assignment schedule request. </summary>
            <param name="scope"> The scope of the role assignment request to cancel. </param>
            <param name="roleAssignmentScheduleRequestName"> The name of the role assignment request to cancel. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="scope" /> or <paramref name="roleAssignmentScheduleRequestName" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="roleAssignmentScheduleRequestName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.RoleAssignmentScheduleRequestsRestOperations.Cancel(System.String,System.String,System.Threading.CancellationToken)">
            <summary> Cancels a pending role assignment schedule request. </summary>
            <param name="scope"> The scope of the role assignment request to cancel. </param>
            <param name="roleAssignmentScheduleRequestName"> The name of the role assignment request to cancel. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="scope" /> or <paramref name="roleAssignmentScheduleRequestName" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="roleAssignmentScheduleRequestName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.RoleAssignmentScheduleRequestsRestOperations.ValidateAsync(System.String,System.String,Azure.ResourceManager.Authorization.RoleAssignmentScheduleRequestData,System.Threading.CancellationToken)">
            <summary> Validates a new role assignment schedule request. </summary>
            <param name="scope"> The scope of the role assignment request to validate. </param>
            <param name="roleAssignmentScheduleRequestName"> The name of the role assignment request to validate. </param>
            <param name="data"> Parameters for the role assignment schedule request. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="scope" />, <paramref name="roleAssignmentScheduleRequestName" /> or <paramref name="data" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="roleAssignmentScheduleRequestName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.RoleAssignmentScheduleRequestsRestOperations.Validate(System.String,System.String,Azure.ResourceManager.Authorization.RoleAssignmentScheduleRequestData,System.Threading.CancellationToken)">
            <summary> Validates a new role assignment schedule request. </summary>
            <param name="scope"> The scope of the role assignment request to validate. </param>
            <param name="roleAssignmentScheduleRequestName"> The name of the role assignment request to validate. </param>
            <param name="data"> Parameters for the role assignment schedule request. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="scope" />, <paramref name="roleAssignmentScheduleRequestName" /> or <paramref name="data" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="roleAssignmentScheduleRequestName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.RoleAssignmentScheduleRequestsRestOperations.ListForScopeNextPageAsync(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary> Gets role assignment schedule requests for a scope. </summary>
            <param name="nextLink"> The URL to the next page of results. </param>
            <param name="scope"> The scope of the role assignments schedule requests. </param>
            <param name="filter"> The filter to apply on the operation. Use $filter=atScope() to return all role assignment schedule requests at or above the scope. Use $filter=principalId eq {id} to return all role assignment schedule requests at, above or below the scope for the specified principal. Use $filter=asRequestor() to return all role assignment schedule requests requested by the current user. Use $filter=asTarget() to return all role assignment schedule requests created for the current user. Use $filter=asApprover() to return all role assignment schedule requests where the current user is an approver. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="nextLink" /> or <paramref name="scope" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.RoleAssignmentScheduleRequestsRestOperations.ListForScopeNextPage(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary> Gets role assignment schedule requests for a scope. </summary>
            <param name="nextLink"> The URL to the next page of results. </param>
            <param name="scope"> The scope of the role assignments schedule requests. </param>
            <param name="filter"> The filter to apply on the operation. Use $filter=atScope() to return all role assignment schedule requests at or above the scope. Use $filter=principalId eq {id} to return all role assignment schedule requests at, above or below the scope for the specified principal. Use $filter=asRequestor() to return all role assignment schedule requests requested by the current user. Use $filter=asTarget() to return all role assignment schedule requests created for the current user. Use $filter=asApprover() to return all role assignment schedule requests where the current user is an approver. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="nextLink" /> or <paramref name="scope" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.RoleAssignmentSchedulesRestOperations.#ctor(Azure.Core.Pipeline.HttpPipeline,System.String,System.Uri,System.String)">
            <summary> Initializes a new instance of RoleAssignmentSchedulesRestOperations. </summary>
            <param name="pipeline"> The HTTP pipeline for sending and receiving REST requests and responses. </param>
            <param name="applicationId"> The application id to use for user agent. </param>
            <param name="endpoint"> server parameter. </param>
            <param name="apiVersion"> Api Version. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="pipeline" /> or <paramref name="apiVersion" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.RoleAssignmentSchedulesRestOperations.GetAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary> Get the specified role assignment schedule for a resource scope. </summary>
            <param name="scope"> The scope of the role assignment schedule. </param>
            <param name="roleAssignmentScheduleName"> The name (guid) of the role assignment schedule to get. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="scope" /> or <paramref name="roleAssignmentScheduleName" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="roleAssignmentScheduleName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.RoleAssignmentSchedulesRestOperations.Get(System.String,System.String,System.Threading.CancellationToken)">
            <summary> Get the specified role assignment schedule for a resource scope. </summary>
            <param name="scope"> The scope of the role assignment schedule. </param>
            <param name="roleAssignmentScheduleName"> The name (guid) of the role assignment schedule to get. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="scope" /> or <paramref name="roleAssignmentScheduleName" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="roleAssignmentScheduleName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.RoleAssignmentSchedulesRestOperations.ListForScopeAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary> Gets role assignment schedules for a resource scope. </summary>
            <param name="scope"> The scope of the role assignments schedules. </param>
            <param name="filter"> The filter to apply on the operation. Use $filter=atScope() to return all role assignment schedules at or above the scope. Use $filter=principalId eq {id} to return all role assignment schedules at, above or below the scope for the specified principal. Use $filter=assignedTo('{userId}') to return all role assignment schedules for the current user. Use $filter=asTarget() to return all role assignment schedules created for the current user. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="scope" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.RoleAssignmentSchedulesRestOperations.ListForScope(System.String,System.String,System.Threading.CancellationToken)">
            <summary> Gets role assignment schedules for a resource scope. </summary>
            <param name="scope"> The scope of the role assignments schedules. </param>
            <param name="filter"> The filter to apply on the operation. Use $filter=atScope() to return all role assignment schedules at or above the scope. Use $filter=principalId eq {id} to return all role assignment schedules at, above or below the scope for the specified principal. Use $filter=assignedTo('{userId}') to return all role assignment schedules for the current user. Use $filter=asTarget() to return all role assignment schedules created for the current user. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="scope" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.RoleAssignmentSchedulesRestOperations.ListForScopeNextPageAsync(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary> Gets role assignment schedules for a resource scope. </summary>
            <param name="nextLink"> The URL to the next page of results. </param>
            <param name="scope"> The scope of the role assignments schedules. </param>
            <param name="filter"> The filter to apply on the operation. Use $filter=atScope() to return all role assignment schedules at or above the scope. Use $filter=principalId eq {id} to return all role assignment schedules at, above or below the scope for the specified principal. Use $filter=assignedTo('{userId}') to return all role assignment schedules for the current user. Use $filter=asTarget() to return all role assignment schedules created for the current user. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="nextLink" /> or <paramref name="scope" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.RoleAssignmentSchedulesRestOperations.ListForScopeNextPage(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary> Gets role assignment schedules for a resource scope. </summary>
            <param name="nextLink"> The URL to the next page of results. </param>
            <param name="scope"> The scope of the role assignments schedules. </param>
            <param name="filter"> The filter to apply on the operation. Use $filter=atScope() to return all role assignment schedules at or above the scope. Use $filter=principalId eq {id} to return all role assignment schedules at, above or below the scope for the specified principal. Use $filter=assignedTo('{userId}') to return all role assignment schedules for the current user. Use $filter=asTarget() to return all role assignment schedules created for the current user. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="nextLink" /> or <paramref name="scope" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.RoleAssignmentsRestOperations.#ctor(Azure.Core.Pipeline.HttpPipeline,System.String,System.Uri,System.String)">
            <summary> Initializes a new instance of RoleAssignmentsRestOperations. </summary>
            <param name="pipeline"> The HTTP pipeline for sending and receiving REST requests and responses. </param>
            <param name="applicationId"> The application id to use for user agent. </param>
            <param name="endpoint"> server parameter. </param>
            <param name="apiVersion"> Api Version. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="pipeline" /> or <paramref name="apiVersion" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.RoleAssignmentsRestOperations.GetAsync(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary> Get a role assignment by scope and name. </summary>
            <param name="scope"> The scope of the operation or resource. Valid scopes are: subscription (format: '/subscriptions/{subscriptionId}'), resource group (format: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}', or resource (format: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/[{parentResourcePath}/]{resourceType}/{resourceName}'. </param>
            <param name="roleAssignmentName"> The name of the role assignment. It can be any valid GUID. </param>
            <param name="tenantId"> Tenant ID for cross-tenant request. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="scope" /> or <paramref name="roleAssignmentName" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.RoleAssignmentsRestOperations.Get(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary> Get a role assignment by scope and name. </summary>
            <param name="scope"> The scope of the operation or resource. Valid scopes are: subscription (format: '/subscriptions/{subscriptionId}'), resource group (format: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}', or resource (format: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/[{parentResourcePath}/]{resourceType}/{resourceName}'. </param>
            <param name="roleAssignmentName"> The name of the role assignment. It can be any valid GUID. </param>
            <param name="tenantId"> Tenant ID for cross-tenant request. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="scope" /> or <paramref name="roleAssignmentName" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.RoleAssignmentsRestOperations.CreateAsync(System.String,System.String,Azure.ResourceManager.Authorization.Models.RoleAssignmentCreateOrUpdateContent,System.Threading.CancellationToken)">
            <summary> Create or update a role assignment by scope and name. </summary>
            <param name="scope"> The scope of the operation or resource. Valid scopes are: subscription (format: '/subscriptions/{subscriptionId}'), resource group (format: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}', or resource (format: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/[{parentResourcePath}/]{resourceType}/{resourceName}'. </param>
            <param name="roleAssignmentName"> The name of the role assignment. It can be any valid GUID. </param>
            <param name="content"> Parameters for the role assignment. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="scope" />, <paramref name="roleAssignmentName" /> or <paramref name="content" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.RoleAssignmentsRestOperations.Create(System.String,System.String,Azure.ResourceManager.Authorization.Models.RoleAssignmentCreateOrUpdateContent,System.Threading.CancellationToken)">
            <summary> Create or update a role assignment by scope and name. </summary>
            <param name="scope"> The scope of the operation or resource. Valid scopes are: subscription (format: '/subscriptions/{subscriptionId}'), resource group (format: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}', or resource (format: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/[{parentResourcePath}/]{resourceType}/{resourceName}'. </param>
            <param name="roleAssignmentName"> The name of the role assignment. It can be any valid GUID. </param>
            <param name="content"> Parameters for the role assignment. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="scope" />, <paramref name="roleAssignmentName" /> or <paramref name="content" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.RoleAssignmentsRestOperations.DeleteAsync(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary> Delete a role assignment by scope and name. </summary>
            <param name="scope"> The scope of the operation or resource. Valid scopes are: subscription (format: '/subscriptions/{subscriptionId}'), resource group (format: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}', or resource (format: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/[{parentResourcePath}/]{resourceType}/{resourceName}'. </param>
            <param name="roleAssignmentName"> The name of the role assignment. It can be any valid GUID. </param>
            <param name="tenantId"> Tenant ID for cross-tenant request. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="scope" /> or <paramref name="roleAssignmentName" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.RoleAssignmentsRestOperations.Delete(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary> Delete a role assignment by scope and name. </summary>
            <param name="scope"> The scope of the operation or resource. Valid scopes are: subscription (format: '/subscriptions/{subscriptionId}'), resource group (format: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}', or resource (format: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/[{parentResourcePath}/]{resourceType}/{resourceName}'. </param>
            <param name="roleAssignmentName"> The name of the role assignment. It can be any valid GUID. </param>
            <param name="tenantId"> Tenant ID for cross-tenant request. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="scope" /> or <paramref name="roleAssignmentName" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.RoleAssignmentsRestOperations.ListForScopeAsync(System.String,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary> List all role assignments that apply to a scope. </summary>
            <param name="scope"> The scope of the operation or resource. Valid scopes are: subscription (format: '/subscriptions/{subscriptionId}'), resource group (format: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}', or resource (format: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/[{parentResourcePath}/]{resourceType}/{resourceName}'. </param>
            <param name="filter"> The filter to apply on the operation. Use $filter=atScope() to return all role assignments at or above the scope. Use $filter=principalId eq {id} to return all role assignments at, above or below the scope for the specified principal. </param>
            <param name="tenantId"> Tenant ID for cross-tenant request. </param>
            <param name="skipToken"> The skipToken to apply on the operation. Use $skipToken={skiptoken} to return paged role assignments following the skipToken passed. Only supported on provider level calls. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="scope" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.RoleAssignmentsRestOperations.ListForScope(System.String,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary> List all role assignments that apply to a scope. </summary>
            <param name="scope"> The scope of the operation or resource. Valid scopes are: subscription (format: '/subscriptions/{subscriptionId}'), resource group (format: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}', or resource (format: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/[{parentResourcePath}/]{resourceType}/{resourceName}'. </param>
            <param name="filter"> The filter to apply on the operation. Use $filter=atScope() to return all role assignments at or above the scope. Use $filter=principalId eq {id} to return all role assignments at, above or below the scope for the specified principal. </param>
            <param name="tenantId"> Tenant ID for cross-tenant request. </param>
            <param name="skipToken"> The skipToken to apply on the operation. Use $skipToken={skiptoken} to return paged role assignments following the skipToken passed. Only supported on provider level calls. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="scope" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.RoleAssignmentsRestOperations.ListForScopeNextPageAsync(System.String,System.String,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary> List all role assignments that apply to a scope. </summary>
            <param name="nextLink"> The URL to the next page of results. </param>
            <param name="scope"> The scope of the operation or resource. Valid scopes are: subscription (format: '/subscriptions/{subscriptionId}'), resource group (format: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}', or resource (format: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/[{parentResourcePath}/]{resourceType}/{resourceName}'. </param>
            <param name="filter"> The filter to apply on the operation. Use $filter=atScope() to return all role assignments at or above the scope. Use $filter=principalId eq {id} to return all role assignments at, above or below the scope for the specified principal. </param>
            <param name="tenantId"> Tenant ID for cross-tenant request. </param>
            <param name="skipToken"> The skipToken to apply on the operation. Use $skipToken={skiptoken} to return paged role assignments following the skipToken passed. Only supported on provider level calls. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="nextLink" /> or <paramref name="scope" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.RoleAssignmentsRestOperations.ListForScopeNextPage(System.String,System.String,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary> List all role assignments that apply to a scope. </summary>
            <param name="nextLink"> The URL to the next page of results. </param>
            <param name="scope"> The scope of the operation or resource. Valid scopes are: subscription (format: '/subscriptions/{subscriptionId}'), resource group (format: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}', or resource (format: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/[{parentResourcePath}/]{resourceType}/{resourceName}'. </param>
            <param name="filter"> The filter to apply on the operation. Use $filter=atScope() to return all role assignments at or above the scope. Use $filter=principalId eq {id} to return all role assignments at, above or below the scope for the specified principal. </param>
            <param name="tenantId"> Tenant ID for cross-tenant request. </param>
            <param name="skipToken"> The skipToken to apply on the operation. Use $skipToken={skiptoken} to return paged role assignments following the skipToken passed. Only supported on provider level calls. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="nextLink" /> or <paramref name="scope" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.RoleDefinitionsRestOperations.#ctor(Azure.Core.Pipeline.HttpPipeline,System.String,System.Uri,System.String)">
            <summary> Initializes a new instance of RoleDefinitionsRestOperations. </summary>
            <param name="pipeline"> The HTTP pipeline for sending and receiving REST requests and responses. </param>
            <param name="applicationId"> The application id to use for user agent. </param>
            <param name="endpoint"> server parameter. </param>
            <param name="apiVersion"> Api Version. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="pipeline" /> or <paramref name="apiVersion" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.RoleDefinitionsRestOperations.DeleteAsync(System.String,Azure.Core.ResourceIdentifier,System.Threading.CancellationToken)">
            <summary> Deletes a role definition. </summary>
            <param name="scope"> The scope of the role definition. </param>
            <param name="roleDefinitionId"> The ID of the role definition to delete. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="scope" /> or <paramref name="roleDefinitionId" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.RoleDefinitionsRestOperations.Delete(System.String,Azure.Core.ResourceIdentifier,System.Threading.CancellationToken)">
            <summary> Deletes a role definition. </summary>
            <param name="scope"> The scope of the role definition. </param>
            <param name="roleDefinitionId"> The ID of the role definition to delete. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="scope" /> or <paramref name="roleDefinitionId" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.RoleDefinitionsRestOperations.GetAsync(System.String,Azure.Core.ResourceIdentifier,System.Threading.CancellationToken)">
            <summary> Get role definition by name (GUID). </summary>
            <param name="scope"> The scope of the role definition. </param>
            <param name="roleDefinitionId"> The ID of the role definition. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="scope" /> or <paramref name="roleDefinitionId" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.RoleDefinitionsRestOperations.Get(System.String,Azure.Core.ResourceIdentifier,System.Threading.CancellationToken)">
            <summary> Get role definition by name (GUID). </summary>
            <param name="scope"> The scope of the role definition. </param>
            <param name="roleDefinitionId"> The ID of the role definition. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="scope" /> or <paramref name="roleDefinitionId" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.RoleDefinitionsRestOperations.CreateOrUpdateAsync(System.String,Azure.Core.ResourceIdentifier,Azure.ResourceManager.Authorization.AuthorizationRoleDefinitionData,System.Threading.CancellationToken)">
            <summary> Creates or updates a role definition. </summary>
            <param name="scope"> The scope of the role definition. </param>
            <param name="roleDefinitionId"> The ID of the role definition. </param>
            <param name="data"> The values for the role definition. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="scope" />, <paramref name="roleDefinitionId" /> or <paramref name="data" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.RoleDefinitionsRestOperations.CreateOrUpdate(System.String,Azure.Core.ResourceIdentifier,Azure.ResourceManager.Authorization.AuthorizationRoleDefinitionData,System.Threading.CancellationToken)">
            <summary> Creates or updates a role definition. </summary>
            <param name="scope"> The scope of the role definition. </param>
            <param name="roleDefinitionId"> The ID of the role definition. </param>
            <param name="data"> The values for the role definition. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="scope" />, <paramref name="roleDefinitionId" /> or <paramref name="data" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.RoleDefinitionsRestOperations.ListAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary> Get all role definitions that are applicable at scope and above. </summary>
            <param name="scope"> The scope of the role definition. </param>
            <param name="filter"> The filter to apply on the operation. Use atScopeAndBelow filter to search below the given scope as well. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="scope" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.RoleDefinitionsRestOperations.List(System.String,System.String,System.Threading.CancellationToken)">
            <summary> Get all role definitions that are applicable at scope and above. </summary>
            <param name="scope"> The scope of the role definition. </param>
            <param name="filter"> The filter to apply on the operation. Use atScopeAndBelow filter to search below the given scope as well. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="scope" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.RoleDefinitionsRestOperations.ListNextPageAsync(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary> Get all role definitions that are applicable at scope and above. </summary>
            <param name="nextLink"> The URL to the next page of results. </param>
            <param name="scope"> The scope of the role definition. </param>
            <param name="filter"> The filter to apply on the operation. Use atScopeAndBelow filter to search below the given scope as well. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="nextLink" /> or <paramref name="scope" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.RoleDefinitionsRestOperations.ListNextPage(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary> Get all role definitions that are applicable at scope and above. </summary>
            <param name="nextLink"> The URL to the next page of results. </param>
            <param name="scope"> The scope of the role definition. </param>
            <param name="filter"> The filter to apply on the operation. Use atScopeAndBelow filter to search below the given scope as well. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="nextLink" /> or <paramref name="scope" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.RoleEligibilityScheduleInstancesRestOperations.#ctor(Azure.Core.Pipeline.HttpPipeline,System.String,System.Uri,System.String)">
            <summary> Initializes a new instance of RoleEligibilityScheduleInstancesRestOperations. </summary>
            <param name="pipeline"> The HTTP pipeline for sending and receiving REST requests and responses. </param>
            <param name="applicationId"> The application id to use for user agent. </param>
            <param name="endpoint"> server parameter. </param>
            <param name="apiVersion"> Api Version. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="pipeline" /> or <paramref name="apiVersion" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.RoleEligibilityScheduleInstancesRestOperations.ListForScopeAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary> Gets role eligibility schedule instances of a role eligibility schedule. </summary>
            <param name="scope"> The scope of the role eligibility schedule. </param>
            <param name="filter"> The filter to apply on the operation. Use $filter=atScope() to return all role assignment schedules at or above the scope. Use $filter=principalId eq {id} to return all role assignment schedules at, above or below the scope for the specified principal. Use $filter=assignedTo('{userId}') to return all role eligibility schedules for the user. Use $filter=asTarget() to return all role eligibility schedules created for the current user. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="scope" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.RoleEligibilityScheduleInstancesRestOperations.ListForScope(System.String,System.String,System.Threading.CancellationToken)">
            <summary> Gets role eligibility schedule instances of a role eligibility schedule. </summary>
            <param name="scope"> The scope of the role eligibility schedule. </param>
            <param name="filter"> The filter to apply on the operation. Use $filter=atScope() to return all role assignment schedules at or above the scope. Use $filter=principalId eq {id} to return all role assignment schedules at, above or below the scope for the specified principal. Use $filter=assignedTo('{userId}') to return all role eligibility schedules for the user. Use $filter=asTarget() to return all role eligibility schedules created for the current user. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="scope" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.RoleEligibilityScheduleInstancesRestOperations.GetAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary> Gets the specified role eligibility schedule instance. </summary>
            <param name="scope"> The scope of the role eligibility schedules. </param>
            <param name="roleEligibilityScheduleInstanceName"> The name (hash of schedule name + time) of the role eligibility schedule to get. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="scope" /> or <paramref name="roleEligibilityScheduleInstanceName" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="roleEligibilityScheduleInstanceName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.RoleEligibilityScheduleInstancesRestOperations.Get(System.String,System.String,System.Threading.CancellationToken)">
            <summary> Gets the specified role eligibility schedule instance. </summary>
            <param name="scope"> The scope of the role eligibility schedules. </param>
            <param name="roleEligibilityScheduleInstanceName"> The name (hash of schedule name + time) of the role eligibility schedule to get. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="scope" /> or <paramref name="roleEligibilityScheduleInstanceName" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="roleEligibilityScheduleInstanceName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.RoleEligibilityScheduleInstancesRestOperations.ListForScopeNextPageAsync(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary> Gets role eligibility schedule instances of a role eligibility schedule. </summary>
            <param name="nextLink"> The URL to the next page of results. </param>
            <param name="scope"> The scope of the role eligibility schedule. </param>
            <param name="filter"> The filter to apply on the operation. Use $filter=atScope() to return all role assignment schedules at or above the scope. Use $filter=principalId eq {id} to return all role assignment schedules at, above or below the scope for the specified principal. Use $filter=assignedTo('{userId}') to return all role eligibility schedules for the user. Use $filter=asTarget() to return all role eligibility schedules created for the current user. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="nextLink" /> or <paramref name="scope" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.RoleEligibilityScheduleInstancesRestOperations.ListForScopeNextPage(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary> Gets role eligibility schedule instances of a role eligibility schedule. </summary>
            <param name="nextLink"> The URL to the next page of results. </param>
            <param name="scope"> The scope of the role eligibility schedule. </param>
            <param name="filter"> The filter to apply on the operation. Use $filter=atScope() to return all role assignment schedules at or above the scope. Use $filter=principalId eq {id} to return all role assignment schedules at, above or below the scope for the specified principal. Use $filter=assignedTo('{userId}') to return all role eligibility schedules for the user. Use $filter=asTarget() to return all role eligibility schedules created for the current user. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="nextLink" /> or <paramref name="scope" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.RoleEligibilityScheduleRequestsRestOperations.#ctor(Azure.Core.Pipeline.HttpPipeline,System.String,System.Uri,System.String)">
            <summary> Initializes a new instance of RoleEligibilityScheduleRequestsRestOperations. </summary>
            <param name="pipeline"> The HTTP pipeline for sending and receiving REST requests and responses. </param>
            <param name="applicationId"> The application id to use for user agent. </param>
            <param name="endpoint"> server parameter. </param>
            <param name="apiVersion"> Api Version. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="pipeline" /> or <paramref name="apiVersion" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.RoleEligibilityScheduleRequestsRestOperations.CreateAsync(System.String,System.String,Azure.ResourceManager.Authorization.RoleEligibilityScheduleRequestData,System.Threading.CancellationToken)">
            <summary> Creates a role eligibility schedule request. </summary>
            <param name="scope"> The scope of the role eligibility schedule request to create. The scope can be any REST resource instance. For example, use '/subscriptions/{subscription-id}/' for a subscription, '/subscriptions/{subscription-id}/resourceGroups/{resource-group-name}' for a resource group, and '/subscriptions/{subscription-id}/resourceGroups/{resource-group-name}/providers/{resource-provider}/{resource-type}/{resource-name}' for a resource. </param>
            <param name="roleEligibilityScheduleRequestName"> The name of the role eligibility to create. It can be any valid GUID. </param>
            <param name="data"> Parameters for the role eligibility schedule request. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="scope" />, <paramref name="roleEligibilityScheduleRequestName" /> or <paramref name="data" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="roleEligibilityScheduleRequestName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.RoleEligibilityScheduleRequestsRestOperations.Create(System.String,System.String,Azure.ResourceManager.Authorization.RoleEligibilityScheduleRequestData,System.Threading.CancellationToken)">
            <summary> Creates a role eligibility schedule request. </summary>
            <param name="scope"> The scope of the role eligibility schedule request to create. The scope can be any REST resource instance. For example, use '/subscriptions/{subscription-id}/' for a subscription, '/subscriptions/{subscription-id}/resourceGroups/{resource-group-name}' for a resource group, and '/subscriptions/{subscription-id}/resourceGroups/{resource-group-name}/providers/{resource-provider}/{resource-type}/{resource-name}' for a resource. </param>
            <param name="roleEligibilityScheduleRequestName"> The name of the role eligibility to create. It can be any valid GUID. </param>
            <param name="data"> Parameters for the role eligibility schedule request. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="scope" />, <paramref name="roleEligibilityScheduleRequestName" /> or <paramref name="data" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="roleEligibilityScheduleRequestName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.RoleEligibilityScheduleRequestsRestOperations.GetAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary> Get the specified role eligibility schedule request. </summary>
            <param name="scope"> The scope of the role eligibility schedule request. </param>
            <param name="roleEligibilityScheduleRequestName"> The name (guid) of the role eligibility schedule request to get. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="scope" /> or <paramref name="roleEligibilityScheduleRequestName" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="roleEligibilityScheduleRequestName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.RoleEligibilityScheduleRequestsRestOperations.Get(System.String,System.String,System.Threading.CancellationToken)">
            <summary> Get the specified role eligibility schedule request. </summary>
            <param name="scope"> The scope of the role eligibility schedule request. </param>
            <param name="roleEligibilityScheduleRequestName"> The name (guid) of the role eligibility schedule request to get. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="scope" /> or <paramref name="roleEligibilityScheduleRequestName" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="roleEligibilityScheduleRequestName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.RoleEligibilityScheduleRequestsRestOperations.ListForScopeAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary> Gets role eligibility schedule requests for a scope. </summary>
            <param name="scope"> The scope of the role eligibility schedule requests. </param>
            <param name="filter"> The filter to apply on the operation. Use $filter=atScope() to return all role eligibility schedule requests at or above the scope. Use $filter=principalId eq {id} to return all role eligibility schedule requests at, above or below the scope for the specified principal. Use $filter=asRequestor() to return all role eligibility schedule requests requested by the current user. Use $filter=asTarget() to return all role eligibility schedule requests created for the current user. Use $filter=asApprover() to return all role eligibility schedule requests where the current user is an approver. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="scope" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.RoleEligibilityScheduleRequestsRestOperations.ListForScope(System.String,System.String,System.Threading.CancellationToken)">
            <summary> Gets role eligibility schedule requests for a scope. </summary>
            <param name="scope"> The scope of the role eligibility schedule requests. </param>
            <param name="filter"> The filter to apply on the operation. Use $filter=atScope() to return all role eligibility schedule requests at or above the scope. Use $filter=principalId eq {id} to return all role eligibility schedule requests at, above or below the scope for the specified principal. Use $filter=asRequestor() to return all role eligibility schedule requests requested by the current user. Use $filter=asTarget() to return all role eligibility schedule requests created for the current user. Use $filter=asApprover() to return all role eligibility schedule requests where the current user is an approver. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="scope" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.RoleEligibilityScheduleRequestsRestOperations.CancelAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary> Cancels a pending role eligibility schedule request. </summary>
            <param name="scope"> The scope of the role eligibility request to cancel. </param>
            <param name="roleEligibilityScheduleRequestName"> The name of the role eligibility request to cancel. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="scope" /> or <paramref name="roleEligibilityScheduleRequestName" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="roleEligibilityScheduleRequestName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.RoleEligibilityScheduleRequestsRestOperations.Cancel(System.String,System.String,System.Threading.CancellationToken)">
            <summary> Cancels a pending role eligibility schedule request. </summary>
            <param name="scope"> The scope of the role eligibility request to cancel. </param>
            <param name="roleEligibilityScheduleRequestName"> The name of the role eligibility request to cancel. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="scope" /> or <paramref name="roleEligibilityScheduleRequestName" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="roleEligibilityScheduleRequestName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.RoleEligibilityScheduleRequestsRestOperations.ValidateAsync(System.String,System.String,Azure.ResourceManager.Authorization.RoleEligibilityScheduleRequestData,System.Threading.CancellationToken)">
            <summary> Validates a new role eligibility schedule request. </summary>
            <param name="scope"> The scope of the role eligibility request to validate. </param>
            <param name="roleEligibilityScheduleRequestName"> The name of the role eligibility request to validate. </param>
            <param name="data"> Parameters for the role eligibility schedule request. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="scope" />, <paramref name="roleEligibilityScheduleRequestName" /> or <paramref name="data" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="roleEligibilityScheduleRequestName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.RoleEligibilityScheduleRequestsRestOperations.Validate(System.String,System.String,Azure.ResourceManager.Authorization.RoleEligibilityScheduleRequestData,System.Threading.CancellationToken)">
            <summary> Validates a new role eligibility schedule request. </summary>
            <param name="scope"> The scope of the role eligibility request to validate. </param>
            <param name="roleEligibilityScheduleRequestName"> The name of the role eligibility request to validate. </param>
            <param name="data"> Parameters for the role eligibility schedule request. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="scope" />, <paramref name="roleEligibilityScheduleRequestName" /> or <paramref name="data" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="roleEligibilityScheduleRequestName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.RoleEligibilityScheduleRequestsRestOperations.ListForScopeNextPageAsync(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary> Gets role eligibility schedule requests for a scope. </summary>
            <param name="nextLink"> The URL to the next page of results. </param>
            <param name="scope"> The scope of the role eligibility schedule requests. </param>
            <param name="filter"> The filter to apply on the operation. Use $filter=atScope() to return all role eligibility schedule requests at or above the scope. Use $filter=principalId eq {id} to return all role eligibility schedule requests at, above or below the scope for the specified principal. Use $filter=asRequestor() to return all role eligibility schedule requests requested by the current user. Use $filter=asTarget() to return all role eligibility schedule requests created for the current user. Use $filter=asApprover() to return all role eligibility schedule requests where the current user is an approver. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="nextLink" /> or <paramref name="scope" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.RoleEligibilityScheduleRequestsRestOperations.ListForScopeNextPage(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary> Gets role eligibility schedule requests for a scope. </summary>
            <param name="nextLink"> The URL to the next page of results. </param>
            <param name="scope"> The scope of the role eligibility schedule requests. </param>
            <param name="filter"> The filter to apply on the operation. Use $filter=atScope() to return all role eligibility schedule requests at or above the scope. Use $filter=principalId eq {id} to return all role eligibility schedule requests at, above or below the scope for the specified principal. Use $filter=asRequestor() to return all role eligibility schedule requests requested by the current user. Use $filter=asTarget() to return all role eligibility schedule requests created for the current user. Use $filter=asApprover() to return all role eligibility schedule requests where the current user is an approver. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="nextLink" /> or <paramref name="scope" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.RoleEligibilitySchedulesRestOperations.#ctor(Azure.Core.Pipeline.HttpPipeline,System.String,System.Uri,System.String)">
            <summary> Initializes a new instance of RoleEligibilitySchedulesRestOperations. </summary>
            <param name="pipeline"> The HTTP pipeline for sending and receiving REST requests and responses. </param>
            <param name="applicationId"> The application id to use for user agent. </param>
            <param name="endpoint"> server parameter. </param>
            <param name="apiVersion"> Api Version. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="pipeline" /> or <paramref name="apiVersion" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.RoleEligibilitySchedulesRestOperations.GetAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary> Get the specified role eligibility schedule for a resource scope. </summary>
            <param name="scope"> The scope of the role eligibility schedule. </param>
            <param name="roleEligibilityScheduleName"> The name (guid) of the role eligibility schedule to get. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="scope" /> or <paramref name="roleEligibilityScheduleName" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="roleEligibilityScheduleName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.RoleEligibilitySchedulesRestOperations.Get(System.String,System.String,System.Threading.CancellationToken)">
            <summary> Get the specified role eligibility schedule for a resource scope. </summary>
            <param name="scope"> The scope of the role eligibility schedule. </param>
            <param name="roleEligibilityScheduleName"> The name (guid) of the role eligibility schedule to get. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="scope" /> or <paramref name="roleEligibilityScheduleName" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="roleEligibilityScheduleName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.RoleEligibilitySchedulesRestOperations.ListForScopeAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary> Gets role eligibility schedules for a resource scope. </summary>
            <param name="scope"> The scope of the role eligibility schedules. </param>
            <param name="filter"> The filter to apply on the operation. Use $filter=atScope() to return all role eligibility schedules at or above the scope. Use $filter=principalId eq {id} to return all role eligibility schedules at, above or below the scope for the specified principal. Use $filter=assignedTo('{userId}') to return all role eligibility schedules for the user. Use $filter=asTarget() to return all role eligibility schedules created for the current user. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="scope" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.RoleEligibilitySchedulesRestOperations.ListForScope(System.String,System.String,System.Threading.CancellationToken)">
            <summary> Gets role eligibility schedules for a resource scope. </summary>
            <param name="scope"> The scope of the role eligibility schedules. </param>
            <param name="filter"> The filter to apply on the operation. Use $filter=atScope() to return all role eligibility schedules at or above the scope. Use $filter=principalId eq {id} to return all role eligibility schedules at, above or below the scope for the specified principal. Use $filter=assignedTo('{userId}') to return all role eligibility schedules for the user. Use $filter=asTarget() to return all role eligibility schedules created for the current user. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="scope" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.RoleEligibilitySchedulesRestOperations.ListForScopeNextPageAsync(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary> Gets role eligibility schedules for a resource scope. </summary>
            <param name="nextLink"> The URL to the next page of results. </param>
            <param name="scope"> The scope of the role eligibility schedules. </param>
            <param name="filter"> The filter to apply on the operation. Use $filter=atScope() to return all role eligibility schedules at or above the scope. Use $filter=principalId eq {id} to return all role eligibility schedules at, above or below the scope for the specified principal. Use $filter=assignedTo('{userId}') to return all role eligibility schedules for the user. Use $filter=asTarget() to return all role eligibility schedules created for the current user. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="nextLink" /> or <paramref name="scope" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.RoleEligibilitySchedulesRestOperations.ListForScopeNextPage(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary> Gets role eligibility schedules for a resource scope. </summary>
            <param name="nextLink"> The URL to the next page of results. </param>
            <param name="scope"> The scope of the role eligibility schedules. </param>
            <param name="filter"> The filter to apply on the operation. Use $filter=atScope() to return all role eligibility schedules at or above the scope. Use $filter=principalId eq {id} to return all role eligibility schedules at, above or below the scope for the specified principal. Use $filter=assignedTo('{userId}') to return all role eligibility schedules for the user. Use $filter=asTarget() to return all role eligibility schedules created for the current user. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="nextLink" /> or <paramref name="scope" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.RoleManagementPoliciesRestOperations.#ctor(Azure.Core.Pipeline.HttpPipeline,System.String,System.Uri,System.String)">
            <summary> Initializes a new instance of RoleManagementPoliciesRestOperations. </summary>
            <param name="pipeline"> The HTTP pipeline for sending and receiving REST requests and responses. </param>
            <param name="applicationId"> The application id to use for user agent. </param>
            <param name="endpoint"> server parameter. </param>
            <param name="apiVersion"> Api Version. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="pipeline" /> or <paramref name="apiVersion" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.RoleManagementPoliciesRestOperations.GetAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary> Get the specified role management policy for a resource scope. </summary>
            <param name="scope"> The scope of the role management policy. </param>
            <param name="roleManagementPolicyName"> The name (guid) of the role management policy to get. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="scope" /> or <paramref name="roleManagementPolicyName" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="roleManagementPolicyName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.RoleManagementPoliciesRestOperations.Get(System.String,System.String,System.Threading.CancellationToken)">
            <summary> Get the specified role management policy for a resource scope. </summary>
            <param name="scope"> The scope of the role management policy. </param>
            <param name="roleManagementPolicyName"> The name (guid) of the role management policy to get. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="scope" /> or <paramref name="roleManagementPolicyName" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="roleManagementPolicyName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.RoleManagementPoliciesRestOperations.UpdateAsync(System.String,System.String,Azure.ResourceManager.Authorization.RoleManagementPolicyData,System.Threading.CancellationToken)">
            <summary> Update a role management policy. </summary>
            <param name="scope"> The scope of the role management policy to upsert. </param>
            <param name="roleManagementPolicyName"> The name (guid) of the role management policy to upsert. </param>
            <param name="data"> Parameters for the role management policy. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="scope" />, <paramref name="roleManagementPolicyName" /> or <paramref name="data" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="roleManagementPolicyName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.RoleManagementPoliciesRestOperations.Update(System.String,System.String,Azure.ResourceManager.Authorization.RoleManagementPolicyData,System.Threading.CancellationToken)">
            <summary> Update a role management policy. </summary>
            <param name="scope"> The scope of the role management policy to upsert. </param>
            <param name="roleManagementPolicyName"> The name (guid) of the role management policy to upsert. </param>
            <param name="data"> Parameters for the role management policy. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="scope" />, <paramref name="roleManagementPolicyName" /> or <paramref name="data" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="roleManagementPolicyName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.RoleManagementPoliciesRestOperations.ListForScopeAsync(System.String,System.Threading.CancellationToken)">
            <summary> Gets role management policies for a resource scope. </summary>
            <param name="scope"> The scope of the role management policy. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="scope" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.RoleManagementPoliciesRestOperations.ListForScope(System.String,System.Threading.CancellationToken)">
            <summary> Gets role management policies for a resource scope. </summary>
            <param name="scope"> The scope of the role management policy. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="scope" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.RoleManagementPoliciesRestOperations.ListForScopeNextPageAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary> Gets role management policies for a resource scope. </summary>
            <param name="nextLink"> The URL to the next page of results. </param>
            <param name="scope"> The scope of the role management policy. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="nextLink" /> or <paramref name="scope" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.RoleManagementPoliciesRestOperations.ListForScopeNextPage(System.String,System.String,System.Threading.CancellationToken)">
            <summary> Gets role management policies for a resource scope. </summary>
            <param name="nextLink"> The URL to the next page of results. </param>
            <param name="scope"> The scope of the role management policy. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="nextLink" /> or <paramref name="scope" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.RoleManagementPolicyAssignmentsRestOperations.#ctor(Azure.Core.Pipeline.HttpPipeline,System.String,System.Uri,System.String)">
            <summary> Initializes a new instance of RoleManagementPolicyAssignmentsRestOperations. </summary>
            <param name="pipeline"> The HTTP pipeline for sending and receiving REST requests and responses. </param>
            <param name="applicationId"> The application id to use for user agent. </param>
            <param name="endpoint"> server parameter. </param>
            <param name="apiVersion"> Api Version. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="pipeline" /> or <paramref name="apiVersion" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.RoleManagementPolicyAssignmentsRestOperations.GetAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary> Get the specified role management policy assignment for a resource scope. </summary>
            <param name="scope"> The scope of the role management policy. </param>
            <param name="roleManagementPolicyAssignmentName"> The name of format {guid_guid} the role management policy assignment to get. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="scope" /> or <paramref name="roleManagementPolicyAssignmentName" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="roleManagementPolicyAssignmentName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.RoleManagementPolicyAssignmentsRestOperations.Get(System.String,System.String,System.Threading.CancellationToken)">
            <summary> Get the specified role management policy assignment for a resource scope. </summary>
            <param name="scope"> The scope of the role management policy. </param>
            <param name="roleManagementPolicyAssignmentName"> The name of format {guid_guid} the role management policy assignment to get. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="scope" /> or <paramref name="roleManagementPolicyAssignmentName" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="roleManagementPolicyAssignmentName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.RoleManagementPolicyAssignmentsRestOperations.CreateAsync(System.String,System.String,Azure.ResourceManager.Authorization.RoleManagementPolicyAssignmentData,System.Threading.CancellationToken)">
            <summary> Create a role management policy assignment. </summary>
            <param name="scope"> The scope of the role management policy assignment to upsert. </param>
            <param name="roleManagementPolicyAssignmentName"> The name of format {guid_guid} the role management policy assignment to upsert. </param>
            <param name="data"> Parameters for the role management policy assignment. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="scope" />, <paramref name="roleManagementPolicyAssignmentName" /> or <paramref name="data" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="roleManagementPolicyAssignmentName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.RoleManagementPolicyAssignmentsRestOperations.Create(System.String,System.String,Azure.ResourceManager.Authorization.RoleManagementPolicyAssignmentData,System.Threading.CancellationToken)">
            <summary> Create a role management policy assignment. </summary>
            <param name="scope"> The scope of the role management policy assignment to upsert. </param>
            <param name="roleManagementPolicyAssignmentName"> The name of format {guid_guid} the role management policy assignment to upsert. </param>
            <param name="data"> Parameters for the role management policy assignment. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="scope" />, <paramref name="roleManagementPolicyAssignmentName" /> or <paramref name="data" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="roleManagementPolicyAssignmentName" /> is an empty string, and was expected to be non-empty. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.RoleManagementPolicyAssignmentsRestOperations.ListForScopeAsync(System.String,System.Threading.CancellationToken)">
            <summary> Gets role management assignment policies for a resource scope. </summary>
            <param name="scope"> The scope of the role management policy. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="scope" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.RoleManagementPolicyAssignmentsRestOperations.ListForScope(System.String,System.Threading.CancellationToken)">
            <summary> Gets role management assignment policies for a resource scope. </summary>
            <param name="scope"> The scope of the role management policy. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="scope" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.RoleManagementPolicyAssignmentsRestOperations.ListForScopeNextPageAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary> Gets role management assignment policies for a resource scope. </summary>
            <param name="nextLink"> The URL to the next page of results. </param>
            <param name="scope"> The scope of the role management policy. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="nextLink" /> or <paramref name="scope" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.RoleManagementPolicyAssignmentsRestOperations.ListForScopeNextPage(System.String,System.String,System.Threading.CancellationToken)">
            <summary> Gets role management assignment policies for a resource scope. </summary>
            <param name="nextLink"> The URL to the next page of results. </param>
            <param name="scope"> The scope of the role management policy. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="nextLink" /> or <paramref name="scope" /> is null. </exception>
        </member>
        <member name="T:Azure.ResourceManager.Authorization.RoleAssignmentCollection">
            <summary>
            A class representing a collection of <see cref="T:Azure.ResourceManager.Authorization.RoleAssignmentResource" /> and their operations.
            Each <see cref="T:Azure.ResourceManager.Authorization.RoleAssignmentResource" /> in the collection will belong to the same instance of <see cref="T:Azure.ResourceManager.ArmResource" />.
            To get a <see cref="T:Azure.ResourceManager.Authorization.RoleAssignmentCollection" /> instance call the GetRoleAssignments method from an instance of <see cref="T:Azure.ResourceManager.ArmResource" />.
            </summary>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.RoleAssignmentCollection.#ctor">
            <summary> Initializes a new instance of the <see cref="T:Azure.ResourceManager.Authorization.RoleAssignmentCollection" /> class for mocking. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.RoleAssignmentCollection.#ctor(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)">
            <summary> Initializes a new instance of the <see cref="T:Azure.ResourceManager.Authorization.RoleAssignmentCollection" /> class. </summary>
            <param name="client"> The client parameters to use in these operations. </param>
            <param name="id"> The identifier of the parent resource that is the target of operations. </param>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.RoleAssignmentCollection.CreateOrUpdateAsync(Azure.WaitUntil,System.String,Azure.ResourceManager.Authorization.Models.RoleAssignmentCreateOrUpdateContent,System.Threading.CancellationToken)">
            <summary>
            Create or update a role assignment by scope and name.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/{scope}/providers/Microsoft.Authorization/roleAssignments/{roleAssignmentName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>RoleAssignments_Create</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2022-04-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.Authorization.RoleAssignmentResource" /></description>
            </item>
            </list>
            </summary>
            <param name="waitUntil"> <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
            <param name="roleAssignmentName"> The name of the role assignment. It can be any valid GUID. </param>
            <param name="content"> Parameters for the role assignment. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="roleAssignmentName" /> or <paramref name="content" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.RoleAssignmentCollection.CreateOrUpdate(Azure.WaitUntil,System.String,Azure.ResourceManager.Authorization.Models.RoleAssignmentCreateOrUpdateContent,System.Threading.CancellationToken)">
            <summary>
            Create or update a role assignment by scope and name.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/{scope}/providers/Microsoft.Authorization/roleAssignments/{roleAssignmentName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>RoleAssignments_Create</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2022-04-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.Authorization.RoleAssignmentResource" /></description>
            </item>
            </list>
            </summary>
            <param name="waitUntil"> <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
            <param name="roleAssignmentName"> The name of the role assignment. It can be any valid GUID. </param>
            <param name="content"> Parameters for the role assignment. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="roleAssignmentName" /> or <paramref name="content" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.RoleAssignmentCollection.GetAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Get a role assignment by scope and name.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/{scope}/providers/Microsoft.Authorization/roleAssignments/{roleAssignmentName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>RoleAssignments_Get</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2022-04-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.Authorization.RoleAssignmentResource" /></description>
            </item>
            </list>
            </summary>
            <param name="roleAssignmentName"> The name of the role assignment. It can be any valid GUID. </param>
            <param name="tenantId"> Tenant ID for cross-tenant request. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="roleAssignmentName" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.RoleAssignmentCollection.Get(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Get a role assignment by scope and name.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/{scope}/providers/Microsoft.Authorization/roleAssignments/{roleAssignmentName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>RoleAssignments_Get</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2022-04-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.Authorization.RoleAssignmentResource" /></description>
            </item>
            </list>
            </summary>
            <param name="roleAssignmentName"> The name of the role assignment. It can be any valid GUID. </param>
            <param name="tenantId"> Tenant ID for cross-tenant request. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="roleAssignmentName" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.RoleAssignmentCollection.GetAllAsync(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            List all role assignments that apply to a scope.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/{scope}/providers/Microsoft.Authorization/roleAssignments</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>RoleAssignments_ListForScope</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2022-04-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.Authorization.RoleAssignmentResource" /></description>
            </item>
            </list>
            </summary>
            <param name="filter"> The filter to apply on the operation. Use $filter=atScope() to return all role assignments at or above the scope. Use $filter=principalId eq {id} to return all role assignments at, above or below the scope for the specified principal. </param>
            <param name="tenantId"> Tenant ID for cross-tenant request. </param>
            <param name="skipToken"> The skipToken to apply on the operation. Use $skipToken={skiptoken} to return paged role assignments following the skipToken passed. Only supported on provider level calls. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <returns> An async collection of <see cref="T:Azure.ResourceManager.Authorization.RoleAssignmentResource" /> that may take multiple service requests to iterate over. </returns>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.RoleAssignmentCollection.GetAll(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            List all role assignments that apply to a scope.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/{scope}/providers/Microsoft.Authorization/roleAssignments</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>RoleAssignments_ListForScope</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2022-04-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.Authorization.RoleAssignmentResource" /></description>
            </item>
            </list>
            </summary>
            <param name="filter"> The filter to apply on the operation. Use $filter=atScope() to return all role assignments at or above the scope. Use $filter=principalId eq {id} to return all role assignments at, above or below the scope for the specified principal. </param>
            <param name="tenantId"> Tenant ID for cross-tenant request. </param>
            <param name="skipToken"> The skipToken to apply on the operation. Use $skipToken={skiptoken} to return paged role assignments following the skipToken passed. Only supported on provider level calls. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <returns> A collection of <see cref="T:Azure.ResourceManager.Authorization.RoleAssignmentResource" /> that may take multiple service requests to iterate over. </returns>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.RoleAssignmentCollection.ExistsAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Checks to see if the resource exists in azure.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/{scope}/providers/Microsoft.Authorization/roleAssignments/{roleAssignmentName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>RoleAssignments_Get</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2022-04-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.Authorization.RoleAssignmentResource" /></description>
            </item>
            </list>
            </summary>
            <param name="roleAssignmentName"> The name of the role assignment. It can be any valid GUID. </param>
            <param name="tenantId"> Tenant ID for cross-tenant request. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="roleAssignmentName" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.RoleAssignmentCollection.Exists(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Checks to see if the resource exists in azure.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/{scope}/providers/Microsoft.Authorization/roleAssignments/{roleAssignmentName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>RoleAssignments_Get</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2022-04-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.Authorization.RoleAssignmentResource" /></description>
            </item>
            </list>
            </summary>
            <param name="roleAssignmentName"> The name of the role assignment. It can be any valid GUID. </param>
            <param name="tenantId"> Tenant ID for cross-tenant request. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="roleAssignmentName" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.RoleAssignmentCollection.GetIfExistsAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Tries to get details for this resource from the service.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/{scope}/providers/Microsoft.Authorization/roleAssignments/{roleAssignmentName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>RoleAssignments_Get</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2022-04-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.Authorization.RoleAssignmentResource" /></description>
            </item>
            </list>
            </summary>
            <param name="roleAssignmentName"> The name of the role assignment. It can be any valid GUID. </param>
            <param name="tenantId"> Tenant ID for cross-tenant request. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="roleAssignmentName" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.RoleAssignmentCollection.GetIfExists(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Tries to get details for this resource from the service.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/{scope}/providers/Microsoft.Authorization/roleAssignments/{roleAssignmentName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>RoleAssignments_Get</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2022-04-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.Authorization.RoleAssignmentResource" /></description>
            </item>
            </list>
            </summary>
            <param name="roleAssignmentName"> The name of the role assignment. It can be any valid GUID. </param>
            <param name="tenantId"> Tenant ID for cross-tenant request. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="roleAssignmentName" /> is null. </exception>
        </member>
        <member name="T:Azure.ResourceManager.Authorization.RoleAssignmentData">
            <summary>
            A class representing the RoleAssignment data model.
            Role Assignments
            </summary>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.RoleAssignmentData.#ctor">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Authorization.RoleAssignmentData" />. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.RoleAssignmentData.#ctor(Azure.Core.ResourceIdentifier,System.String,Azure.Core.ResourceType,Azure.ResourceManager.Models.SystemData,System.String,Azure.Core.ResourceIdentifier,System.Nullable{System.Guid},System.Nullable{Azure.ResourceManager.Authorization.Models.RoleManagementPrincipalType},System.String,System.String,System.String,System.Nullable{System.DateTimeOffset},System.Nullable{System.DateTimeOffset},System.String,System.String,Azure.Core.ResourceIdentifier,System.Collections.Generic.IDictionary{System.String,System.BinaryData})">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Authorization.RoleAssignmentData" />. </summary>
            <param name="id"> The id. </param>
            <param name="name"> The name. </param>
            <param name="resourceType"> The resourceType. </param>
            <param name="systemData"> The systemData. </param>
            <param name="scope"> The role assignment scope. </param>
            <param name="roleDefinitionId"> The role definition ID. </param>
            <param name="principalId"> The principal ID. </param>
            <param name="principalType"> The principal type of the assigned principal ID. </param>
            <param name="description"> Description of role assignment. </param>
            <param name="condition"> The conditions on the role assignment. This limits the resources it can be assigned to. e.g.: @Resource[Microsoft.Storage/storageAccounts/blobServices/containers:ContainerName] StringEqualsIgnoreCase 'foo_storage_container'. </param>
            <param name="conditionVersion"> Version of the condition. Currently the only accepted value is '2.0'. </param>
            <param name="createdOn"> Time it was created. </param>
            <param name="updatedOn"> Time it was updated. </param>
            <param name="createdBy"> Id of the user who created the assignment. </param>
            <param name="updatedBy"> Id of the user who updated the assignment. </param>
            <param name="delegatedManagedIdentityResourceId"> Id of the delegated managed identity resource. </param>
            <param name="serializedAdditionalRawData"> Keeps track of any properties unknown to the library. </param>
        </member>
        <member name="P:Azure.ResourceManager.Authorization.RoleAssignmentData.Scope">
            <summary> The role assignment scope. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Authorization.RoleAssignmentData.RoleDefinitionId">
            <summary> The role definition ID. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Authorization.RoleAssignmentData.PrincipalId">
            <summary> The principal ID. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Authorization.RoleAssignmentData.PrincipalType">
            <summary> The principal type of the assigned principal ID. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Authorization.RoleAssignmentData.Description">
            <summary> Description of role assignment. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Authorization.RoleAssignmentData.Condition">
            <summary> The conditions on the role assignment. This limits the resources it can be assigned to. e.g.: @Resource[Microsoft.Storage/storageAccounts/blobServices/containers:ContainerName] StringEqualsIgnoreCase 'foo_storage_container'. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Authorization.RoleAssignmentData.ConditionVersion">
            <summary> Version of the condition. Currently the only accepted value is '2.0'. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Authorization.RoleAssignmentData.CreatedOn">
            <summary> Time it was created. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Authorization.RoleAssignmentData.UpdatedOn">
            <summary> Time it was updated. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Authorization.RoleAssignmentData.CreatedBy">
            <summary> Id of the user who created the assignment. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Authorization.RoleAssignmentData.UpdatedBy">
            <summary> Id of the user who updated the assignment. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Authorization.RoleAssignmentData.DelegatedManagedIdentityResourceId">
            <summary> Id of the delegated managed identity resource. </summary>
        </member>
        <member name="T:Azure.ResourceManager.Authorization.RoleAssignmentResource">
            <summary>
            A Class representing a RoleAssignment along with the instance operations that can be performed on it.
            If you have a <see cref="T:Azure.Core.ResourceIdentifier" /> you can construct a <see cref="T:Azure.ResourceManager.Authorization.RoleAssignmentResource" />
            from an instance of <see cref="T:Azure.ResourceManager.ArmClient" /> using the GetRoleAssignmentResource method.
            Otherwise you can get one from its parent resource <see cref="T:Azure.ResourceManager.ArmResource" /> using the GetRoleAssignment method.
            </summary>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.RoleAssignmentResource.CreateResourceIdentifier(System.String,System.String)">
            <summary> Generate the resource identifier of a <see cref="T:Azure.ResourceManager.Authorization.RoleAssignmentResource" /> instance. </summary>
            <param name="scope"> The scope. </param>
            <param name="roleAssignmentName"> The roleAssignmentName. </param>
        </member>
        <member name="F:Azure.ResourceManager.Authorization.RoleAssignmentResource.ResourceType">
            <summary> Gets the resource type for the operations. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.RoleAssignmentResource.#ctor">
            <summary> Initializes a new instance of the <see cref="T:Azure.ResourceManager.Authorization.RoleAssignmentResource" /> class for mocking. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.RoleAssignmentResource.#ctor(Azure.ResourceManager.ArmClient,Azure.ResourceManager.Authorization.RoleAssignmentData)">
            <summary> Initializes a new instance of the <see cref="T:Azure.ResourceManager.Authorization.RoleAssignmentResource" /> class. </summary>
            <param name="client"> The client parameters to use in these operations. </param>
            <param name="data"> The resource that is the target of operations. </param>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.RoleAssignmentResource.#ctor(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)">
            <summary> Initializes a new instance of the <see cref="T:Azure.ResourceManager.Authorization.RoleAssignmentResource" /> class. </summary>
            <param name="client"> The client parameters to use in these operations. </param>
            <param name="id"> The identifier of the resource that is the target of operations. </param>
        </member>
        <member name="P:Azure.ResourceManager.Authorization.RoleAssignmentResource.HasData">
            <summary> Gets whether or not the current instance has data. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Authorization.RoleAssignmentResource.Data">
            <summary> Gets the data representing this Feature. </summary>
            <exception cref="T:System.InvalidOperationException"> Throws if there is no data loaded in the current instance. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.RoleAssignmentResource.GetAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Get a role assignment by scope and name.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/{scope}/providers/Microsoft.Authorization/roleAssignments/{roleAssignmentName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>RoleAssignments_Get</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2022-04-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.Authorization.RoleAssignmentResource" /></description>
            </item>
            </list>
            </summary>
            <param name="tenantId"> Tenant ID for cross-tenant request. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.RoleAssignmentResource.Get(System.String,System.Threading.CancellationToken)">
            <summary>
            Get a role assignment by scope and name.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/{scope}/providers/Microsoft.Authorization/roleAssignments/{roleAssignmentName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>RoleAssignments_Get</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2022-04-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.Authorization.RoleAssignmentResource" /></description>
            </item>
            </list>
            </summary>
            <param name="tenantId"> Tenant ID for cross-tenant request. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.RoleAssignmentResource.DeleteAsync(Azure.WaitUntil,System.String,System.Threading.CancellationToken)">
            <summary>
            Delete a role assignment by scope and name.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/{scope}/providers/Microsoft.Authorization/roleAssignments/{roleAssignmentName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>RoleAssignments_Delete</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2022-04-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.Authorization.RoleAssignmentResource" /></description>
            </item>
            </list>
            </summary>
            <param name="waitUntil"> <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
            <param name="tenantId"> Tenant ID for cross-tenant request. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.RoleAssignmentResource.Delete(Azure.WaitUntil,System.String,System.Threading.CancellationToken)">
            <summary>
            Delete a role assignment by scope and name.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/{scope}/providers/Microsoft.Authorization/roleAssignments/{roleAssignmentName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>RoleAssignments_Delete</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2022-04-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.Authorization.RoleAssignmentResource" /></description>
            </item>
            </list>
            </summary>
            <param name="waitUntil"> <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
            <param name="tenantId"> Tenant ID for cross-tenant request. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.RoleAssignmentResource.UpdateAsync(Azure.WaitUntil,Azure.ResourceManager.Authorization.Models.RoleAssignmentCreateOrUpdateContent,System.Threading.CancellationToken)">
            <summary>
            Create or update a role assignment by scope and name.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/{scope}/providers/Microsoft.Authorization/roleAssignments/{roleAssignmentName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>RoleAssignments_Create</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2022-04-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.Authorization.RoleAssignmentResource" /></description>
            </item>
            </list>
            </summary>
            <param name="waitUntil"> <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
            <param name="content"> Parameters for the role assignment. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="content" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.RoleAssignmentResource.Update(Azure.WaitUntil,Azure.ResourceManager.Authorization.Models.RoleAssignmentCreateOrUpdateContent,System.Threading.CancellationToken)">
            <summary>
            Create or update a role assignment by scope and name.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/{scope}/providers/Microsoft.Authorization/roleAssignments/{roleAssignmentName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>RoleAssignments_Create</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2022-04-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.Authorization.RoleAssignmentResource" /></description>
            </item>
            </list>
            </summary>
            <param name="waitUntil"> <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
            <param name="content"> Parameters for the role assignment. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="content" /> is null. </exception>
        </member>
        <member name="T:Azure.ResourceManager.Authorization.RoleAssignmentScheduleCollection">
            <summary>
            A class representing a collection of <see cref="T:Azure.ResourceManager.Authorization.RoleAssignmentScheduleResource" /> and their operations.
            Each <see cref="T:Azure.ResourceManager.Authorization.RoleAssignmentScheduleResource" /> in the collection will belong to the same instance of <see cref="T:Azure.ResourceManager.ArmResource" />.
            To get a <see cref="T:Azure.ResourceManager.Authorization.RoleAssignmentScheduleCollection" /> instance call the GetRoleAssignmentSchedules method from an instance of <see cref="T:Azure.ResourceManager.ArmResource" />.
            </summary>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.RoleAssignmentScheduleCollection.#ctor">
            <summary> Initializes a new instance of the <see cref="T:Azure.ResourceManager.Authorization.RoleAssignmentScheduleCollection" /> class for mocking. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.RoleAssignmentScheduleCollection.#ctor(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)">
            <summary> Initializes a new instance of the <see cref="T:Azure.ResourceManager.Authorization.RoleAssignmentScheduleCollection" /> class. </summary>
            <param name="client"> The client parameters to use in these operations. </param>
            <param name="id"> The identifier of the parent resource that is the target of operations. </param>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.RoleAssignmentScheduleCollection.GetAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Get the specified role assignment schedule for a resource scope
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/{scope}/providers/Microsoft.Authorization/roleAssignmentSchedules/{roleAssignmentScheduleName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>RoleAssignmentSchedules_Get</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2020-10-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.Authorization.RoleAssignmentScheduleResource" /></description>
            </item>
            </list>
            </summary>
            <param name="roleAssignmentScheduleName"> The name (guid) of the role assignment schedule to get. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentException"> <paramref name="roleAssignmentScheduleName" /> is an empty string, and was expected to be non-empty. </exception>
            <exception cref="T:System.ArgumentNullException"> <paramref name="roleAssignmentScheduleName" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.RoleAssignmentScheduleCollection.Get(System.String,System.Threading.CancellationToken)">
            <summary>
            Get the specified role assignment schedule for a resource scope
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/{scope}/providers/Microsoft.Authorization/roleAssignmentSchedules/{roleAssignmentScheduleName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>RoleAssignmentSchedules_Get</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2020-10-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.Authorization.RoleAssignmentScheduleResource" /></description>
            </item>
            </list>
            </summary>
            <param name="roleAssignmentScheduleName"> The name (guid) of the role assignment schedule to get. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentException"> <paramref name="roleAssignmentScheduleName" /> is an empty string, and was expected to be non-empty. </exception>
            <exception cref="T:System.ArgumentNullException"> <paramref name="roleAssignmentScheduleName" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.RoleAssignmentScheduleCollection.GetAllAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Gets role assignment schedules for a resource scope.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/{scope}/providers/Microsoft.Authorization/roleAssignmentSchedules</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>RoleAssignmentSchedules_ListForScope</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2020-10-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.Authorization.RoleAssignmentScheduleResource" /></description>
            </item>
            </list>
            </summary>
            <param name="filter"> The filter to apply on the operation. Use $filter=atScope() to return all role assignment schedules at or above the scope. Use $filter=principalId eq {id} to return all role assignment schedules at, above or below the scope for the specified principal. Use $filter=assignedTo('{userId}') to return all role assignment schedules for the current user. Use $filter=asTarget() to return all role assignment schedules created for the current user. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <returns> An async collection of <see cref="T:Azure.ResourceManager.Authorization.RoleAssignmentScheduleResource" /> that may take multiple service requests to iterate over. </returns>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.RoleAssignmentScheduleCollection.GetAll(System.String,System.Threading.CancellationToken)">
            <summary>
            Gets role assignment schedules for a resource scope.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/{scope}/providers/Microsoft.Authorization/roleAssignmentSchedules</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>RoleAssignmentSchedules_ListForScope</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2020-10-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.Authorization.RoleAssignmentScheduleResource" /></description>
            </item>
            </list>
            </summary>
            <param name="filter"> The filter to apply on the operation. Use $filter=atScope() to return all role assignment schedules at or above the scope. Use $filter=principalId eq {id} to return all role assignment schedules at, above or below the scope for the specified principal. Use $filter=assignedTo('{userId}') to return all role assignment schedules for the current user. Use $filter=asTarget() to return all role assignment schedules created for the current user. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <returns> A collection of <see cref="T:Azure.ResourceManager.Authorization.RoleAssignmentScheduleResource" /> that may take multiple service requests to iterate over. </returns>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.RoleAssignmentScheduleCollection.ExistsAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Checks to see if the resource exists in azure.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/{scope}/providers/Microsoft.Authorization/roleAssignmentSchedules/{roleAssignmentScheduleName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>RoleAssignmentSchedules_Get</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2020-10-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.Authorization.RoleAssignmentScheduleResource" /></description>
            </item>
            </list>
            </summary>
            <param name="roleAssignmentScheduleName"> The name (guid) of the role assignment schedule to get. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentException"> <paramref name="roleAssignmentScheduleName" /> is an empty string, and was expected to be non-empty. </exception>
            <exception cref="T:System.ArgumentNullException"> <paramref name="roleAssignmentScheduleName" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.RoleAssignmentScheduleCollection.Exists(System.String,System.Threading.CancellationToken)">
            <summary>
            Checks to see if the resource exists in azure.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/{scope}/providers/Microsoft.Authorization/roleAssignmentSchedules/{roleAssignmentScheduleName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>RoleAssignmentSchedules_Get</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2020-10-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.Authorization.RoleAssignmentScheduleResource" /></description>
            </item>
            </list>
            </summary>
            <param name="roleAssignmentScheduleName"> The name (guid) of the role assignment schedule to get. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentException"> <paramref name="roleAssignmentScheduleName" /> is an empty string, and was expected to be non-empty. </exception>
            <exception cref="T:System.ArgumentNullException"> <paramref name="roleAssignmentScheduleName" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.RoleAssignmentScheduleCollection.GetIfExistsAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Tries to get details for this resource from the service.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/{scope}/providers/Microsoft.Authorization/roleAssignmentSchedules/{roleAssignmentScheduleName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>RoleAssignmentSchedules_Get</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2020-10-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.Authorization.RoleAssignmentScheduleResource" /></description>
            </item>
            </list>
            </summary>
            <param name="roleAssignmentScheduleName"> The name (guid) of the role assignment schedule to get. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentException"> <paramref name="roleAssignmentScheduleName" /> is an empty string, and was expected to be non-empty. </exception>
            <exception cref="T:System.ArgumentNullException"> <paramref name="roleAssignmentScheduleName" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.RoleAssignmentScheduleCollection.GetIfExists(System.String,System.Threading.CancellationToken)">
            <summary>
            Tries to get details for this resource from the service.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/{scope}/providers/Microsoft.Authorization/roleAssignmentSchedules/{roleAssignmentScheduleName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>RoleAssignmentSchedules_Get</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2020-10-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.Authorization.RoleAssignmentScheduleResource" /></description>
            </item>
            </list>
            </summary>
            <param name="roleAssignmentScheduleName"> The name (guid) of the role assignment schedule to get. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentException"> <paramref name="roleAssignmentScheduleName" /> is an empty string, and was expected to be non-empty. </exception>
            <exception cref="T:System.ArgumentNullException"> <paramref name="roleAssignmentScheduleName" /> is null. </exception>
        </member>
        <member name="T:Azure.ResourceManager.Authorization.RoleAssignmentScheduleData">
            <summary>
            A class representing the RoleAssignmentSchedule data model.
            Role Assignment schedule
            </summary>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.RoleAssignmentScheduleData.#ctor">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Authorization.RoleAssignmentScheduleData" />. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.RoleAssignmentScheduleData.#ctor(Azure.Core.ResourceIdentifier,System.String,Azure.Core.ResourceType,Azure.ResourceManager.Models.SystemData,System.String,Azure.Core.ResourceIdentifier,System.Nullable{System.Guid},System.Nullable{Azure.ResourceManager.Authorization.Models.RoleManagementPrincipalType},Azure.Core.ResourceIdentifier,Azure.Core.ResourceIdentifier,System.Nullable{Azure.ResourceManager.Authorization.Models.RoleAssignmentScheduleAssignmentType},System.Nullable{Azure.ResourceManager.Authorization.Models.RoleManagementScheduleMemberType},System.Nullable{Azure.ResourceManager.Authorization.Models.RoleManagementScheduleStatus},System.Nullable{System.DateTimeOffset},System.Nullable{System.DateTimeOffset},System.String,System.String,System.Nullable{System.DateTimeOffset},System.Nullable{System.DateTimeOffset},Azure.ResourceManager.Authorization.Models.RoleManagementExpandedProperties,System.Collections.Generic.IDictionary{System.String,System.BinaryData})">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Authorization.RoleAssignmentScheduleData" />. </summary>
            <param name="id"> The id. </param>
            <param name="name"> The name. </param>
            <param name="resourceType"> The resourceType. </param>
            <param name="systemData"> The systemData. </param>
            <param name="scope"> The role assignment schedule scope. </param>
            <param name="roleDefinitionId"> The role definition ID. </param>
            <param name="principalId"> The principal ID. </param>
            <param name="principalType"> The principal type of the assigned principal ID. </param>
            <param name="roleAssignmentScheduleRequestId"> The id of roleAssignmentScheduleRequest used to create this roleAssignmentSchedule. </param>
            <param name="linkedRoleEligibilityScheduleId"> The id of roleEligibilitySchedule used to activated this roleAssignmentSchedule. </param>
            <param name="assignmentType"> Assignment type of the role assignment schedule. </param>
            <param name="memberType"> Membership type of the role assignment schedule. </param>
            <param name="status"> The status of the role assignment schedule. </param>
            <param name="startOn"> Start DateTime when role assignment schedule. </param>
            <param name="endOn"> End DateTime when role assignment schedule. </param>
            <param name="condition"> The conditions on the role assignment. This limits the resources it can be assigned to. e.g.: @Resource[Microsoft.Storage/storageAccounts/blobServices/containers:ContainerName] StringEqualsIgnoreCase 'foo_storage_container'. </param>
            <param name="conditionVersion"> Version of the condition. Currently accepted value is '2.0'. </param>
            <param name="createdOn"> DateTime when role assignment schedule was created. </param>
            <param name="updatedOn"> DateTime when role assignment schedule was modified. </param>
            <param name="expandedProperties"> Additional properties of principal, scope and role definition. </param>
            <param name="serializedAdditionalRawData"> Keeps track of any properties unknown to the library. </param>
        </member>
        <member name="P:Azure.ResourceManager.Authorization.RoleAssignmentScheduleData.Scope">
            <summary> The role assignment schedule scope. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Authorization.RoleAssignmentScheduleData.RoleDefinitionId">
            <summary> The role definition ID. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Authorization.RoleAssignmentScheduleData.PrincipalId">
            <summary> The principal ID. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Authorization.RoleAssignmentScheduleData.PrincipalType">
            <summary> The principal type of the assigned principal ID. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Authorization.RoleAssignmentScheduleData.RoleAssignmentScheduleRequestId">
            <summary> The id of roleAssignmentScheduleRequest used to create this roleAssignmentSchedule. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Authorization.RoleAssignmentScheduleData.LinkedRoleEligibilityScheduleId">
            <summary> The id of roleEligibilitySchedule used to activated this roleAssignmentSchedule. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Authorization.RoleAssignmentScheduleData.AssignmentType">
            <summary> Assignment type of the role assignment schedule. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Authorization.RoleAssignmentScheduleData.MemberType">
            <summary> Membership type of the role assignment schedule. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Authorization.RoleAssignmentScheduleData.Status">
            <summary> The status of the role assignment schedule. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Authorization.RoleAssignmentScheduleData.StartOn">
            <summary> Start DateTime when role assignment schedule. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Authorization.RoleAssignmentScheduleData.EndOn">
            <summary> End DateTime when role assignment schedule. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Authorization.RoleAssignmentScheduleData.Condition">
            <summary> The conditions on the role assignment. This limits the resources it can be assigned to. e.g.: @Resource[Microsoft.Storage/storageAccounts/blobServices/containers:ContainerName] StringEqualsIgnoreCase 'foo_storage_container'. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Authorization.RoleAssignmentScheduleData.ConditionVersion">
            <summary> Version of the condition. Currently accepted value is '2.0'. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Authorization.RoleAssignmentScheduleData.CreatedOn">
            <summary> DateTime when role assignment schedule was created. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Authorization.RoleAssignmentScheduleData.UpdatedOn">
            <summary> DateTime when role assignment schedule was modified. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Authorization.RoleAssignmentScheduleData.ExpandedProperties">
            <summary> Additional properties of principal, scope and role definition. </summary>
        </member>
        <member name="T:Azure.ResourceManager.Authorization.RoleAssignmentScheduleInstanceCollection">
            <summary>
            A class representing a collection of <see cref="T:Azure.ResourceManager.Authorization.RoleAssignmentScheduleInstanceResource" /> and their operations.
            Each <see cref="T:Azure.ResourceManager.Authorization.RoleAssignmentScheduleInstanceResource" /> in the collection will belong to the same instance of <see cref="T:Azure.ResourceManager.ArmResource" />.
            To get a <see cref="T:Azure.ResourceManager.Authorization.RoleAssignmentScheduleInstanceCollection" /> instance call the GetRoleAssignmentScheduleInstances method from an instance of <see cref="T:Azure.ResourceManager.ArmResource" />.
            </summary>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.RoleAssignmentScheduleInstanceCollection.#ctor">
            <summary> Initializes a new instance of the <see cref="T:Azure.ResourceManager.Authorization.RoleAssignmentScheduleInstanceCollection" /> class for mocking. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.RoleAssignmentScheduleInstanceCollection.#ctor(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)">
            <summary> Initializes a new instance of the <see cref="T:Azure.ResourceManager.Authorization.RoleAssignmentScheduleInstanceCollection" /> class. </summary>
            <param name="client"> The client parameters to use in these operations. </param>
            <param name="id"> The identifier of the parent resource that is the target of operations. </param>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.RoleAssignmentScheduleInstanceCollection.GetAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Gets the specified role assignment schedule instance.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/{scope}/providers/Microsoft.Authorization/roleAssignmentScheduleInstances/{roleAssignmentScheduleInstanceName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>RoleAssignmentScheduleInstances_Get</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2020-10-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.Authorization.RoleAssignmentScheduleInstanceResource" /></description>
            </item>
            </list>
            </summary>
            <param name="roleAssignmentScheduleInstanceName"> The name (hash of schedule name + time) of the role assignment schedule to get. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentException"> <paramref name="roleAssignmentScheduleInstanceName" /> is an empty string, and was expected to be non-empty. </exception>
            <exception cref="T:System.ArgumentNullException"> <paramref name="roleAssignmentScheduleInstanceName" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.RoleAssignmentScheduleInstanceCollection.Get(System.String,System.Threading.CancellationToken)">
            <summary>
            Gets the specified role assignment schedule instance.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/{scope}/providers/Microsoft.Authorization/roleAssignmentScheduleInstances/{roleAssignmentScheduleInstanceName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>RoleAssignmentScheduleInstances_Get</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2020-10-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.Authorization.RoleAssignmentScheduleInstanceResource" /></description>
            </item>
            </list>
            </summary>
            <param name="roleAssignmentScheduleInstanceName"> The name (hash of schedule name + time) of the role assignment schedule to get. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentException"> <paramref name="roleAssignmentScheduleInstanceName" /> is an empty string, and was expected to be non-empty. </exception>
            <exception cref="T:System.ArgumentNullException"> <paramref name="roleAssignmentScheduleInstanceName" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.RoleAssignmentScheduleInstanceCollection.GetAllAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Gets role assignment schedule instances of a role assignment schedule.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/{scope}/providers/Microsoft.Authorization/roleAssignmentScheduleInstances</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>RoleAssignmentScheduleInstances_ListForScope</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2020-10-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.Authorization.RoleAssignmentScheduleInstanceResource" /></description>
            </item>
            </list>
            </summary>
            <param name="filter"> The filter to apply on the operation. Use $filter=atScope() to return all role assignment schedules at or above the scope. Use $filter=principalId eq {id} to return all role assignment schedules at, above or below the scope for the specified principal.  Use $filter=assignedTo('{userId}') to return all role assignment schedule instances for the user. Use $filter=asTarget() to return all role assignment schedule instances created for the current user. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <returns> An async collection of <see cref="T:Azure.ResourceManager.Authorization.RoleAssignmentScheduleInstanceResource" /> that may take multiple service requests to iterate over. </returns>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.RoleAssignmentScheduleInstanceCollection.GetAll(System.String,System.Threading.CancellationToken)">
            <summary>
            Gets role assignment schedule instances of a role assignment schedule.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/{scope}/providers/Microsoft.Authorization/roleAssignmentScheduleInstances</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>RoleAssignmentScheduleInstances_ListForScope</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2020-10-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.Authorization.RoleAssignmentScheduleInstanceResource" /></description>
            </item>
            </list>
            </summary>
            <param name="filter"> The filter to apply on the operation. Use $filter=atScope() to return all role assignment schedules at or above the scope. Use $filter=principalId eq {id} to return all role assignment schedules at, above or below the scope for the specified principal.  Use $filter=assignedTo('{userId}') to return all role assignment schedule instances for the user. Use $filter=asTarget() to return all role assignment schedule instances created for the current user. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <returns> A collection of <see cref="T:Azure.ResourceManager.Authorization.RoleAssignmentScheduleInstanceResource" /> that may take multiple service requests to iterate over. </returns>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.RoleAssignmentScheduleInstanceCollection.ExistsAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Checks to see if the resource exists in azure.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/{scope}/providers/Microsoft.Authorization/roleAssignmentScheduleInstances/{roleAssignmentScheduleInstanceName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>RoleAssignmentScheduleInstances_Get</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2020-10-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.Authorization.RoleAssignmentScheduleInstanceResource" /></description>
            </item>
            </list>
            </summary>
            <param name="roleAssignmentScheduleInstanceName"> The name (hash of schedule name + time) of the role assignment schedule to get. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentException"> <paramref name="roleAssignmentScheduleInstanceName" /> is an empty string, and was expected to be non-empty. </exception>
            <exception cref="T:System.ArgumentNullException"> <paramref name="roleAssignmentScheduleInstanceName" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.RoleAssignmentScheduleInstanceCollection.Exists(System.String,System.Threading.CancellationToken)">
            <summary>
            Checks to see if the resource exists in azure.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/{scope}/providers/Microsoft.Authorization/roleAssignmentScheduleInstances/{roleAssignmentScheduleInstanceName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>RoleAssignmentScheduleInstances_Get</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2020-10-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.Authorization.RoleAssignmentScheduleInstanceResource" /></description>
            </item>
            </list>
            </summary>
            <param name="roleAssignmentScheduleInstanceName"> The name (hash of schedule name + time) of the role assignment schedule to get. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentException"> <paramref name="roleAssignmentScheduleInstanceName" /> is an empty string, and was expected to be non-empty. </exception>
            <exception cref="T:System.ArgumentNullException"> <paramref name="roleAssignmentScheduleInstanceName" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.RoleAssignmentScheduleInstanceCollection.GetIfExistsAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Tries to get details for this resource from the service.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/{scope}/providers/Microsoft.Authorization/roleAssignmentScheduleInstances/{roleAssignmentScheduleInstanceName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>RoleAssignmentScheduleInstances_Get</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2020-10-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.Authorization.RoleAssignmentScheduleInstanceResource" /></description>
            </item>
            </list>
            </summary>
            <param name="roleAssignmentScheduleInstanceName"> The name (hash of schedule name + time) of the role assignment schedule to get. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentException"> <paramref name="roleAssignmentScheduleInstanceName" /> is an empty string, and was expected to be non-empty. </exception>
            <exception cref="T:System.ArgumentNullException"> <paramref name="roleAssignmentScheduleInstanceName" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.RoleAssignmentScheduleInstanceCollection.GetIfExists(System.String,System.Threading.CancellationToken)">
            <summary>
            Tries to get details for this resource from the service.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/{scope}/providers/Microsoft.Authorization/roleAssignmentScheduleInstances/{roleAssignmentScheduleInstanceName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>RoleAssignmentScheduleInstances_Get</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2020-10-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.Authorization.RoleAssignmentScheduleInstanceResource" /></description>
            </item>
            </list>
            </summary>
            <param name="roleAssignmentScheduleInstanceName"> The name (hash of schedule name + time) of the role assignment schedule to get. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentException"> <paramref name="roleAssignmentScheduleInstanceName" /> is an empty string, and was expected to be non-empty. </exception>
            <exception cref="T:System.ArgumentNullException"> <paramref name="roleAssignmentScheduleInstanceName" /> is null. </exception>
        </member>
        <member name="T:Azure.ResourceManager.Authorization.RoleAssignmentScheduleInstanceData">
            <summary>
            A class representing the RoleAssignmentScheduleInstance data model.
            Information about current or upcoming role assignment schedule instance
            </summary>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.RoleAssignmentScheduleInstanceData.#ctor">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Authorization.RoleAssignmentScheduleInstanceData" />. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.RoleAssignmentScheduleInstanceData.#ctor(Azure.Core.ResourceIdentifier,System.String,Azure.Core.ResourceType,Azure.ResourceManager.Models.SystemData,System.String,Azure.Core.ResourceIdentifier,System.Nullable{System.Guid},System.Nullable{Azure.ResourceManager.Authorization.Models.RoleManagementPrincipalType},Azure.Core.ResourceIdentifier,Azure.Core.ResourceIdentifier,System.Nullable{Azure.ResourceManager.Authorization.Models.RoleManagementScheduleStatus},System.Nullable{System.DateTimeOffset},System.Nullable{System.DateTimeOffset},Azure.Core.ResourceIdentifier,Azure.Core.ResourceIdentifier,System.Nullable{Azure.ResourceManager.Authorization.Models.RoleAssignmentScheduleAssignmentType},System.Nullable{Azure.ResourceManager.Authorization.Models.RoleManagementScheduleMemberType},System.String,System.String,System.Nullable{System.DateTimeOffset},Azure.ResourceManager.Authorization.Models.RoleManagementExpandedProperties,System.Collections.Generic.IDictionary{System.String,System.BinaryData})">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Authorization.RoleAssignmentScheduleInstanceData" />. </summary>
            <param name="id"> The id. </param>
            <param name="name"> The name. </param>
            <param name="resourceType"> The resourceType. </param>
            <param name="systemData"> The systemData. </param>
            <param name="scope"> The role assignment schedule scope. </param>
            <param name="roleDefinitionId"> The role definition ID. </param>
            <param name="principalId"> The principal ID. </param>
            <param name="principalType"> The principal type of the assigned principal ID. </param>
            <param name="roleAssignmentScheduleId"> Id of the master role assignment schedule. </param>
            <param name="originRoleAssignmentId"> Role Assignment Id in external system. </param>
            <param name="status"> The status of the role assignment schedule instance. </param>
            <param name="startOn"> The startDateTime of the role assignment schedule instance. </param>
            <param name="endOn"> The endDateTime of the role assignment schedule instance. </param>
            <param name="linkedRoleEligibilityScheduleId"> roleEligibilityScheduleId used to activate. </param>
            <param name="linkedRoleEligibilityScheduleInstanceId"> roleEligibilityScheduleInstanceId linked to this roleAssignmentScheduleInstance. </param>
            <param name="assignmentType"> Assignment type of the role assignment schedule. </param>
            <param name="memberType"> Membership type of the role assignment schedule. </param>
            <param name="condition"> The conditions on the role assignment. This limits the resources it can be assigned to. e.g.: @Resource[Microsoft.Storage/storageAccounts/blobServices/containers:ContainerName] StringEqualsIgnoreCase 'foo_storage_container'. </param>
            <param name="conditionVersion"> Version of the condition. Currently accepted value is '2.0'. </param>
            <param name="createdOn"> DateTime when role assignment schedule was created. </param>
            <param name="expandedProperties"> Additional properties of principal, scope and role definition. </param>
            <param name="serializedAdditionalRawData"> Keeps track of any properties unknown to the library. </param>
        </member>
        <member name="P:Azure.ResourceManager.Authorization.RoleAssignmentScheduleInstanceData.Scope">
            <summary> The role assignment schedule scope. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Authorization.RoleAssignmentScheduleInstanceData.RoleDefinitionId">
            <summary> The role definition ID. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Authorization.RoleAssignmentScheduleInstanceData.PrincipalId">
            <summary> The principal ID. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Authorization.RoleAssignmentScheduleInstanceData.PrincipalType">
            <summary> The principal type of the assigned principal ID. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Authorization.RoleAssignmentScheduleInstanceData.RoleAssignmentScheduleId">
            <summary> Id of the master role assignment schedule. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Authorization.RoleAssignmentScheduleInstanceData.OriginRoleAssignmentId">
            <summary> Role Assignment Id in external system. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Authorization.RoleAssignmentScheduleInstanceData.Status">
            <summary> The status of the role assignment schedule instance. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Authorization.RoleAssignmentScheduleInstanceData.StartOn">
            <summary> The startDateTime of the role assignment schedule instance. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Authorization.RoleAssignmentScheduleInstanceData.EndOn">
            <summary> The endDateTime of the role assignment schedule instance. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Authorization.RoleAssignmentScheduleInstanceData.LinkedRoleEligibilityScheduleId">
            <summary> roleEligibilityScheduleId used to activate. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Authorization.RoleAssignmentScheduleInstanceData.LinkedRoleEligibilityScheduleInstanceId">
            <summary> roleEligibilityScheduleInstanceId linked to this roleAssignmentScheduleInstance. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Authorization.RoleAssignmentScheduleInstanceData.AssignmentType">
            <summary> Assignment type of the role assignment schedule. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Authorization.RoleAssignmentScheduleInstanceData.MemberType">
            <summary> Membership type of the role assignment schedule. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Authorization.RoleAssignmentScheduleInstanceData.Condition">
            <summary> The conditions on the role assignment. This limits the resources it can be assigned to. e.g.: @Resource[Microsoft.Storage/storageAccounts/blobServices/containers:ContainerName] StringEqualsIgnoreCase 'foo_storage_container'. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Authorization.RoleAssignmentScheduleInstanceData.ConditionVersion">
            <summary> Version of the condition. Currently accepted value is '2.0'. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Authorization.RoleAssignmentScheduleInstanceData.CreatedOn">
            <summary> DateTime when role assignment schedule was created. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Authorization.RoleAssignmentScheduleInstanceData.ExpandedProperties">
            <summary> Additional properties of principal, scope and role definition. </summary>
        </member>
        <member name="T:Azure.ResourceManager.Authorization.RoleAssignmentScheduleInstanceResource">
            <summary>
            A Class representing a RoleAssignmentScheduleInstance along with the instance operations that can be performed on it.
            If you have a <see cref="T:Azure.Core.ResourceIdentifier" /> you can construct a <see cref="T:Azure.ResourceManager.Authorization.RoleAssignmentScheduleInstanceResource" />
            from an instance of <see cref="T:Azure.ResourceManager.ArmClient" /> using the GetRoleAssignmentScheduleInstanceResource method.
            Otherwise you can get one from its parent resource <see cref="T:Azure.ResourceManager.ArmResource" /> using the GetRoleAssignmentScheduleInstance method.
            </summary>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.RoleAssignmentScheduleInstanceResource.CreateResourceIdentifier(System.String,System.String)">
            <summary> Generate the resource identifier of a <see cref="T:Azure.ResourceManager.Authorization.RoleAssignmentScheduleInstanceResource" /> instance. </summary>
            <param name="scope"> The scope. </param>
            <param name="roleAssignmentScheduleInstanceName"> The roleAssignmentScheduleInstanceName. </param>
        </member>
        <member name="F:Azure.ResourceManager.Authorization.RoleAssignmentScheduleInstanceResource.ResourceType">
            <summary> Gets the resource type for the operations. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.RoleAssignmentScheduleInstanceResource.#ctor">
            <summary> Initializes a new instance of the <see cref="T:Azure.ResourceManager.Authorization.RoleAssignmentScheduleInstanceResource" /> class for mocking. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.RoleAssignmentScheduleInstanceResource.#ctor(Azure.ResourceManager.ArmClient,Azure.ResourceManager.Authorization.RoleAssignmentScheduleInstanceData)">
            <summary> Initializes a new instance of the <see cref="T:Azure.ResourceManager.Authorization.RoleAssignmentScheduleInstanceResource" /> class. </summary>
            <param name="client"> The client parameters to use in these operations. </param>
            <param name="data"> The resource that is the target of operations. </param>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.RoleAssignmentScheduleInstanceResource.#ctor(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)">
            <summary> Initializes a new instance of the <see cref="T:Azure.ResourceManager.Authorization.RoleAssignmentScheduleInstanceResource" /> class. </summary>
            <param name="client"> The client parameters to use in these operations. </param>
            <param name="id"> The identifier of the resource that is the target of operations. </param>
        </member>
        <member name="P:Azure.ResourceManager.Authorization.RoleAssignmentScheduleInstanceResource.HasData">
            <summary> Gets whether or not the current instance has data. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Authorization.RoleAssignmentScheduleInstanceResource.Data">
            <summary> Gets the data representing this Feature. </summary>
            <exception cref="T:System.InvalidOperationException"> Throws if there is no data loaded in the current instance. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.RoleAssignmentScheduleInstanceResource.GetAsync(System.Threading.CancellationToken)">
            <summary>
            Gets the specified role assignment schedule instance.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/{scope}/providers/Microsoft.Authorization/roleAssignmentScheduleInstances/{roleAssignmentScheduleInstanceName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>RoleAssignmentScheduleInstances_Get</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2020-10-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.Authorization.RoleAssignmentScheduleInstanceResource" /></description>
            </item>
            </list>
            </summary>
            <param name="cancellationToken"> The cancellation token to use. </param>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.RoleAssignmentScheduleInstanceResource.Get(System.Threading.CancellationToken)">
            <summary>
            Gets the specified role assignment schedule instance.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/{scope}/providers/Microsoft.Authorization/roleAssignmentScheduleInstances/{roleAssignmentScheduleInstanceName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>RoleAssignmentScheduleInstances_Get</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2020-10-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.Authorization.RoleAssignmentScheduleInstanceResource" /></description>
            </item>
            </list>
            </summary>
            <param name="cancellationToken"> The cancellation token to use. </param>
        </member>
        <member name="T:Azure.ResourceManager.Authorization.RoleAssignmentScheduleRequestCollection">
            <summary>
            A class representing a collection of <see cref="T:Azure.ResourceManager.Authorization.RoleAssignmentScheduleRequestResource" /> and their operations.
            Each <see cref="T:Azure.ResourceManager.Authorization.RoleAssignmentScheduleRequestResource" /> in the collection will belong to the same instance of <see cref="T:Azure.ResourceManager.ArmResource" />.
            To get a <see cref="T:Azure.ResourceManager.Authorization.RoleAssignmentScheduleRequestCollection" /> instance call the GetRoleAssignmentScheduleRequests method from an instance of <see cref="T:Azure.ResourceManager.ArmResource" />.
            </summary>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.RoleAssignmentScheduleRequestCollection.#ctor">
            <summary> Initializes a new instance of the <see cref="T:Azure.ResourceManager.Authorization.RoleAssignmentScheduleRequestCollection" /> class for mocking. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.RoleAssignmentScheduleRequestCollection.#ctor(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)">
            <summary> Initializes a new instance of the <see cref="T:Azure.ResourceManager.Authorization.RoleAssignmentScheduleRequestCollection" /> class. </summary>
            <param name="client"> The client parameters to use in these operations. </param>
            <param name="id"> The identifier of the parent resource that is the target of operations. </param>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.RoleAssignmentScheduleRequestCollection.CreateOrUpdateAsync(Azure.WaitUntil,System.String,Azure.ResourceManager.Authorization.RoleAssignmentScheduleRequestData,System.Threading.CancellationToken)">
            <summary>
            Creates a role assignment schedule request.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/{scope}/providers/Microsoft.Authorization/roleAssignmentScheduleRequests/{roleAssignmentScheduleRequestName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>RoleAssignmentScheduleRequests_Create</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2020-10-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.Authorization.RoleAssignmentScheduleRequestResource" /></description>
            </item>
            </list>
            </summary>
            <param name="waitUntil"> <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
            <param name="roleAssignmentScheduleRequestName"> A GUID for the role assignment to create. The name must be unique and different for each role assignment. </param>
            <param name="data"> Parameters for the role assignment schedule request. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentException"> <paramref name="roleAssignmentScheduleRequestName" /> is an empty string, and was expected to be non-empty. </exception>
            <exception cref="T:System.ArgumentNullException"> <paramref name="roleAssignmentScheduleRequestName" /> or <paramref name="data" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.RoleAssignmentScheduleRequestCollection.CreateOrUpdate(Azure.WaitUntil,System.String,Azure.ResourceManager.Authorization.RoleAssignmentScheduleRequestData,System.Threading.CancellationToken)">
            <summary>
            Creates a role assignment schedule request.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/{scope}/providers/Microsoft.Authorization/roleAssignmentScheduleRequests/{roleAssignmentScheduleRequestName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>RoleAssignmentScheduleRequests_Create</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2020-10-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.Authorization.RoleAssignmentScheduleRequestResource" /></description>
            </item>
            </list>
            </summary>
            <param name="waitUntil"> <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
            <param name="roleAssignmentScheduleRequestName"> A GUID for the role assignment to create. The name must be unique and different for each role assignment. </param>
            <param name="data"> Parameters for the role assignment schedule request. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentException"> <paramref name="roleAssignmentScheduleRequestName" /> is an empty string, and was expected to be non-empty. </exception>
            <exception cref="T:System.ArgumentNullException"> <paramref name="roleAssignmentScheduleRequestName" /> or <paramref name="data" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.RoleAssignmentScheduleRequestCollection.GetAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Get the specified role assignment schedule request.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/{scope}/providers/Microsoft.Authorization/roleAssignmentScheduleRequests/{roleAssignmentScheduleRequestName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>RoleAssignmentScheduleRequests_Get</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2020-10-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.Authorization.RoleAssignmentScheduleRequestResource" /></description>
            </item>
            </list>
            </summary>
            <param name="roleAssignmentScheduleRequestName"> The name (guid) of the role assignment schedule request to get. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentException"> <paramref name="roleAssignmentScheduleRequestName" /> is an empty string, and was expected to be non-empty. </exception>
            <exception cref="T:System.ArgumentNullException"> <paramref name="roleAssignmentScheduleRequestName" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.RoleAssignmentScheduleRequestCollection.Get(System.String,System.Threading.CancellationToken)">
            <summary>
            Get the specified role assignment schedule request.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/{scope}/providers/Microsoft.Authorization/roleAssignmentScheduleRequests/{roleAssignmentScheduleRequestName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>RoleAssignmentScheduleRequests_Get</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2020-10-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.Authorization.RoleAssignmentScheduleRequestResource" /></description>
            </item>
            </list>
            </summary>
            <param name="roleAssignmentScheduleRequestName"> The name (guid) of the role assignment schedule request to get. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentException"> <paramref name="roleAssignmentScheduleRequestName" /> is an empty string, and was expected to be non-empty. </exception>
            <exception cref="T:System.ArgumentNullException"> <paramref name="roleAssignmentScheduleRequestName" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.RoleAssignmentScheduleRequestCollection.GetAllAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Gets role assignment schedule requests for a scope.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/{scope}/providers/Microsoft.Authorization/roleAssignmentScheduleRequests</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>RoleAssignmentScheduleRequests_ListForScope</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2020-10-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.Authorization.RoleAssignmentScheduleRequestResource" /></description>
            </item>
            </list>
            </summary>
            <param name="filter"> The filter to apply on the operation. Use $filter=atScope() to return all role assignment schedule requests at or above the scope. Use $filter=principalId eq {id} to return all role assignment schedule requests at, above or below the scope for the specified principal. Use $filter=asRequestor() to return all role assignment schedule requests requested by the current user. Use $filter=asTarget() to return all role assignment schedule requests created for the current user. Use $filter=asApprover() to return all role assignment schedule requests where the current user is an approver. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <returns> An async collection of <see cref="T:Azure.ResourceManager.Authorization.RoleAssignmentScheduleRequestResource" /> that may take multiple service requests to iterate over. </returns>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.RoleAssignmentScheduleRequestCollection.GetAll(System.String,System.Threading.CancellationToken)">
            <summary>
            Gets role assignment schedule requests for a scope.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/{scope}/providers/Microsoft.Authorization/roleAssignmentScheduleRequests</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>RoleAssignmentScheduleRequests_ListForScope</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2020-10-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.Authorization.RoleAssignmentScheduleRequestResource" /></description>
            </item>
            </list>
            </summary>
            <param name="filter"> The filter to apply on the operation. Use $filter=atScope() to return all role assignment schedule requests at or above the scope. Use $filter=principalId eq {id} to return all role assignment schedule requests at, above or below the scope for the specified principal. Use $filter=asRequestor() to return all role assignment schedule requests requested by the current user. Use $filter=asTarget() to return all role assignment schedule requests created for the current user. Use $filter=asApprover() to return all role assignment schedule requests where the current user is an approver. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <returns> A collection of <see cref="T:Azure.ResourceManager.Authorization.RoleAssignmentScheduleRequestResource" /> that may take multiple service requests to iterate over. </returns>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.RoleAssignmentScheduleRequestCollection.ExistsAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Checks to see if the resource exists in azure.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/{scope}/providers/Microsoft.Authorization/roleAssignmentScheduleRequests/{roleAssignmentScheduleRequestName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>RoleAssignmentScheduleRequests_Get</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2020-10-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.Authorization.RoleAssignmentScheduleRequestResource" /></description>
            </item>
            </list>
            </summary>
            <param name="roleAssignmentScheduleRequestName"> The name (guid) of the role assignment schedule request to get. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentException"> <paramref name="roleAssignmentScheduleRequestName" /> is an empty string, and was expected to be non-empty. </exception>
            <exception cref="T:System.ArgumentNullException"> <paramref name="roleAssignmentScheduleRequestName" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.RoleAssignmentScheduleRequestCollection.Exists(System.String,System.Threading.CancellationToken)">
            <summary>
            Checks to see if the resource exists in azure.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/{scope}/providers/Microsoft.Authorization/roleAssignmentScheduleRequests/{roleAssignmentScheduleRequestName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>RoleAssignmentScheduleRequests_Get</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2020-10-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.Authorization.RoleAssignmentScheduleRequestResource" /></description>
            </item>
            </list>
            </summary>
            <param name="roleAssignmentScheduleRequestName"> The name (guid) of the role assignment schedule request to get. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentException"> <paramref name="roleAssignmentScheduleRequestName" /> is an empty string, and was expected to be non-empty. </exception>
            <exception cref="T:System.ArgumentNullException"> <paramref name="roleAssignmentScheduleRequestName" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.RoleAssignmentScheduleRequestCollection.GetIfExistsAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Tries to get details for this resource from the service.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/{scope}/providers/Microsoft.Authorization/roleAssignmentScheduleRequests/{roleAssignmentScheduleRequestName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>RoleAssignmentScheduleRequests_Get</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2020-10-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.Authorization.RoleAssignmentScheduleRequestResource" /></description>
            </item>
            </list>
            </summary>
            <param name="roleAssignmentScheduleRequestName"> The name (guid) of the role assignment schedule request to get. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentException"> <paramref name="roleAssignmentScheduleRequestName" /> is an empty string, and was expected to be non-empty. </exception>
            <exception cref="T:System.ArgumentNullException"> <paramref name="roleAssignmentScheduleRequestName" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.RoleAssignmentScheduleRequestCollection.GetIfExists(System.String,System.Threading.CancellationToken)">
            <summary>
            Tries to get details for this resource from the service.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/{scope}/providers/Microsoft.Authorization/roleAssignmentScheduleRequests/{roleAssignmentScheduleRequestName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>RoleAssignmentScheduleRequests_Get</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2020-10-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.Authorization.RoleAssignmentScheduleRequestResource" /></description>
            </item>
            </list>
            </summary>
            <param name="roleAssignmentScheduleRequestName"> The name (guid) of the role assignment schedule request to get. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentException"> <paramref name="roleAssignmentScheduleRequestName" /> is an empty string, and was expected to be non-empty. </exception>
            <exception cref="T:System.ArgumentNullException"> <paramref name="roleAssignmentScheduleRequestName" /> is null. </exception>
        </member>
        <member name="T:Azure.ResourceManager.Authorization.RoleAssignmentScheduleRequestData">
            <summary>
            A class representing the RoleAssignmentScheduleRequest data model.
            Role Assignment schedule request
            </summary>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.RoleAssignmentScheduleRequestData.#ctor">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Authorization.RoleAssignmentScheduleRequestData" />. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.RoleAssignmentScheduleRequestData.#ctor(Azure.Core.ResourceIdentifier,System.String,Azure.Core.ResourceType,Azure.ResourceManager.Models.SystemData,System.String,Azure.Core.ResourceIdentifier,System.Nullable{System.Guid},System.Nullable{Azure.ResourceManager.Authorization.Models.RoleManagementPrincipalType},System.Nullable{Azure.ResourceManager.Authorization.Models.RoleManagementScheduleRequestType},System.Nullable{Azure.ResourceManager.Authorization.Models.RoleManagementScheduleStatus},System.String,Azure.Core.ResourceIdentifier,Azure.Core.ResourceIdentifier,Azure.Core.ResourceIdentifier,System.String,Azure.ResourceManager.Authorization.Models.RoleAssignmentScheduleTicketInfo,System.String,System.String,System.Nullable{System.DateTimeOffset},System.Nullable{System.Guid},Azure.ResourceManager.Authorization.Models.RoleManagementExpandedProperties,System.Nullable{System.DateTimeOffset},System.Nullable{Azure.ResourceManager.Authorization.Models.RoleManagementScheduleExpirationType},System.Nullable{System.DateTimeOffset},System.Nullable{System.TimeSpan},System.Collections.Generic.IDictionary{System.String,System.BinaryData})">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Authorization.RoleAssignmentScheduleRequestData" />. </summary>
            <param name="id"> The id. </param>
            <param name="name"> The name. </param>
            <param name="resourceType"> The resourceType. </param>
            <param name="systemData"> The systemData. </param>
            <param name="scope"> The role assignment schedule request scope. </param>
            <param name="roleDefinitionId"> The role definition ID. </param>
            <param name="principalId"> The principal ID. </param>
            <param name="principalType"> The principal type of the assigned principal ID. </param>
            <param name="requestType"> The type of the role assignment schedule request. Eg: SelfActivate, AdminAssign etc. </param>
            <param name="status"> The status of the role assignment schedule request. </param>
            <param name="approvalId"> The approvalId of the role assignment schedule request. </param>
            <param name="targetRoleAssignmentScheduleId"> The resultant role assignment schedule id or the role assignment schedule id being updated. </param>
            <param name="targetRoleAssignmentScheduleInstanceId"> The role assignment schedule instance id being updated. </param>
            <param name="linkedRoleEligibilityScheduleId"> The linked role eligibility schedule id - to activate an eligibility. </param>
            <param name="justification"> Justification for the role assignment. </param>
            <param name="ticketInfo"> Ticket Info of the role assignment. </param>
            <param name="condition"> The conditions on the role assignment. This limits the resources it can be assigned to. e.g.: @Resource[Microsoft.Storage/storageAccounts/blobServices/containers:ContainerName] StringEqualsIgnoreCase 'foo_storage_container'. </param>
            <param name="conditionVersion"> Version of the condition. Currently accepted value is '2.0'. </param>
            <param name="createdOn"> DateTime when role assignment schedule request was created. </param>
            <param name="requestorId"> Id of the user who created this request. </param>
            <param name="expandedProperties"> Additional properties of principal, scope and role definition. </param>
            <param name="startOn"> Start DateTime of the role assignment schedule. </param>
            <param name="expirationType"> Type of the role assignment schedule expiration. </param>
            <param name="endOn"> End DateTime of the role assignment schedule. </param>
            <param name="duration"> Duration of the role assignment schedule in TimeSpan. </param>
            <param name="serializedAdditionalRawData"> Keeps track of any properties unknown to the library. </param>
        </member>
        <member name="P:Azure.ResourceManager.Authorization.RoleAssignmentScheduleRequestData.Scope">
            <summary> The role assignment schedule request scope. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Authorization.RoleAssignmentScheduleRequestData.RoleDefinitionId">
            <summary> The role definition ID. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Authorization.RoleAssignmentScheduleRequestData.PrincipalId">
            <summary> The principal ID. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Authorization.RoleAssignmentScheduleRequestData.PrincipalType">
            <summary> The principal type of the assigned principal ID. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Authorization.RoleAssignmentScheduleRequestData.RequestType">
            <summary> The type of the role assignment schedule request. Eg: SelfActivate, AdminAssign etc. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Authorization.RoleAssignmentScheduleRequestData.Status">
            <summary> The status of the role assignment schedule request. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Authorization.RoleAssignmentScheduleRequestData.ApprovalId">
            <summary> The approvalId of the role assignment schedule request. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Authorization.RoleAssignmentScheduleRequestData.TargetRoleAssignmentScheduleId">
            <summary> The resultant role assignment schedule id or the role assignment schedule id being updated. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Authorization.RoleAssignmentScheduleRequestData.TargetRoleAssignmentScheduleInstanceId">
            <summary> The role assignment schedule instance id being updated. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Authorization.RoleAssignmentScheduleRequestData.LinkedRoleEligibilityScheduleId">
            <summary> The linked role eligibility schedule id - to activate an eligibility. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Authorization.RoleAssignmentScheduleRequestData.Justification">
            <summary> Justification for the role assignment. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Authorization.RoleAssignmentScheduleRequestData.TicketInfo">
            <summary> Ticket Info of the role assignment. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Authorization.RoleAssignmentScheduleRequestData.Condition">
            <summary> The conditions on the role assignment. This limits the resources it can be assigned to. e.g.: @Resource[Microsoft.Storage/storageAccounts/blobServices/containers:ContainerName] StringEqualsIgnoreCase 'foo_storage_container'. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Authorization.RoleAssignmentScheduleRequestData.ConditionVersion">
            <summary> Version of the condition. Currently accepted value is '2.0'. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Authorization.RoleAssignmentScheduleRequestData.CreatedOn">
            <summary> DateTime when role assignment schedule request was created. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Authorization.RoleAssignmentScheduleRequestData.RequestorId">
            <summary> Id of the user who created this request. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Authorization.RoleAssignmentScheduleRequestData.ExpandedProperties">
            <summary> Additional properties of principal, scope and role definition. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Authorization.RoleAssignmentScheduleRequestData.StartOn">
            <summary> Start DateTime of the role assignment schedule. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Authorization.RoleAssignmentScheduleRequestData.ExpirationType">
            <summary> Type of the role assignment schedule expiration. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Authorization.RoleAssignmentScheduleRequestData.EndOn">
            <summary> End DateTime of the role assignment schedule. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Authorization.RoleAssignmentScheduleRequestData.Duration">
            <summary> Duration of the role assignment schedule in TimeSpan. </summary>
        </member>
        <member name="T:Azure.ResourceManager.Authorization.RoleAssignmentScheduleRequestResource">
            <summary>
            A Class representing a RoleAssignmentScheduleRequest along with the instance operations that can be performed on it.
            If you have a <see cref="T:Azure.Core.ResourceIdentifier" /> you can construct a <see cref="T:Azure.ResourceManager.Authorization.RoleAssignmentScheduleRequestResource" />
            from an instance of <see cref="T:Azure.ResourceManager.ArmClient" /> using the GetRoleAssignmentScheduleRequestResource method.
            Otherwise you can get one from its parent resource <see cref="T:Azure.ResourceManager.ArmResource" /> using the GetRoleAssignmentScheduleRequest method.
            </summary>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.RoleAssignmentScheduleRequestResource.CreateResourceIdentifier(System.String,System.String)">
            <summary> Generate the resource identifier of a <see cref="T:Azure.ResourceManager.Authorization.RoleAssignmentScheduleRequestResource" /> instance. </summary>
            <param name="scope"> The scope. </param>
            <param name="roleAssignmentScheduleRequestName"> The roleAssignmentScheduleRequestName. </param>
        </member>
        <member name="F:Azure.ResourceManager.Authorization.RoleAssignmentScheduleRequestResource.ResourceType">
            <summary> Gets the resource type for the operations. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.RoleAssignmentScheduleRequestResource.#ctor">
            <summary> Initializes a new instance of the <see cref="T:Azure.ResourceManager.Authorization.RoleAssignmentScheduleRequestResource" /> class for mocking. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.RoleAssignmentScheduleRequestResource.#ctor(Azure.ResourceManager.ArmClient,Azure.ResourceManager.Authorization.RoleAssignmentScheduleRequestData)">
            <summary> Initializes a new instance of the <see cref="T:Azure.ResourceManager.Authorization.RoleAssignmentScheduleRequestResource" /> class. </summary>
            <param name="client"> The client parameters to use in these operations. </param>
            <param name="data"> The resource that is the target of operations. </param>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.RoleAssignmentScheduleRequestResource.#ctor(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)">
            <summary> Initializes a new instance of the <see cref="T:Azure.ResourceManager.Authorization.RoleAssignmentScheduleRequestResource" /> class. </summary>
            <param name="client"> The client parameters to use in these operations. </param>
            <param name="id"> The identifier of the resource that is the target of operations. </param>
        </member>
        <member name="P:Azure.ResourceManager.Authorization.RoleAssignmentScheduleRequestResource.HasData">
            <summary> Gets whether or not the current instance has data. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Authorization.RoleAssignmentScheduleRequestResource.Data">
            <summary> Gets the data representing this Feature. </summary>
            <exception cref="T:System.InvalidOperationException"> Throws if there is no data loaded in the current instance. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.RoleAssignmentScheduleRequestResource.GetAsync(System.Threading.CancellationToken)">
            <summary>
            Get the specified role assignment schedule request.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/{scope}/providers/Microsoft.Authorization/roleAssignmentScheduleRequests/{roleAssignmentScheduleRequestName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>RoleAssignmentScheduleRequests_Get</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2020-10-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.Authorization.RoleAssignmentScheduleRequestResource" /></description>
            </item>
            </list>
            </summary>
            <param name="cancellationToken"> The cancellation token to use. </param>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.RoleAssignmentScheduleRequestResource.Get(System.Threading.CancellationToken)">
            <summary>
            Get the specified role assignment schedule request.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/{scope}/providers/Microsoft.Authorization/roleAssignmentScheduleRequests/{roleAssignmentScheduleRequestName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>RoleAssignmentScheduleRequests_Get</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2020-10-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.Authorization.RoleAssignmentScheduleRequestResource" /></description>
            </item>
            </list>
            </summary>
            <param name="cancellationToken"> The cancellation token to use. </param>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.RoleAssignmentScheduleRequestResource.UpdateAsync(Azure.WaitUntil,Azure.ResourceManager.Authorization.RoleAssignmentScheduleRequestData,System.Threading.CancellationToken)">
            <summary>
            Creates a role assignment schedule request.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/{scope}/providers/Microsoft.Authorization/roleAssignmentScheduleRequests/{roleAssignmentScheduleRequestName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>RoleAssignmentScheduleRequests_Create</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2020-10-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.Authorization.RoleAssignmentScheduleRequestResource" /></description>
            </item>
            </list>
            </summary>
            <param name="waitUntil"> <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
            <param name="data"> Parameters for the role assignment schedule request. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="data" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.RoleAssignmentScheduleRequestResource.Update(Azure.WaitUntil,Azure.ResourceManager.Authorization.RoleAssignmentScheduleRequestData,System.Threading.CancellationToken)">
            <summary>
            Creates a role assignment schedule request.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/{scope}/providers/Microsoft.Authorization/roleAssignmentScheduleRequests/{roleAssignmentScheduleRequestName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>RoleAssignmentScheduleRequests_Create</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2020-10-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.Authorization.RoleAssignmentScheduleRequestResource" /></description>
            </item>
            </list>
            </summary>
            <param name="waitUntil"> <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
            <param name="data"> Parameters for the role assignment schedule request. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="data" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.RoleAssignmentScheduleRequestResource.CancelAsync(System.Threading.CancellationToken)">
            <summary>
            Cancels a pending role assignment schedule request.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/{scope}/providers/Microsoft.Authorization/roleAssignmentScheduleRequests/{roleAssignmentScheduleRequestName}/cancel</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>RoleAssignmentScheduleRequests_Cancel</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2020-10-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.Authorization.RoleAssignmentScheduleRequestResource" /></description>
            </item>
            </list>
            </summary>
            <param name="cancellationToken"> The cancellation token to use. </param>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.RoleAssignmentScheduleRequestResource.Cancel(System.Threading.CancellationToken)">
            <summary>
            Cancels a pending role assignment schedule request.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/{scope}/providers/Microsoft.Authorization/roleAssignmentScheduleRequests/{roleAssignmentScheduleRequestName}/cancel</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>RoleAssignmentScheduleRequests_Cancel</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2020-10-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.Authorization.RoleAssignmentScheduleRequestResource" /></description>
            </item>
            </list>
            </summary>
            <param name="cancellationToken"> The cancellation token to use. </param>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.RoleAssignmentScheduleRequestResource.ValidateAsync(Azure.ResourceManager.Authorization.RoleAssignmentScheduleRequestData,System.Threading.CancellationToken)">
            <summary>
            Validates a new role assignment schedule request.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/{scope}/providers/Microsoft.Authorization/roleAssignmentScheduleRequests/{roleAssignmentScheduleRequestName}/validate</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>RoleAssignmentScheduleRequests_Validate</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2020-10-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.Authorization.RoleAssignmentScheduleRequestResource" /></description>
            </item>
            </list>
            </summary>
            <param name="data"> Parameters for the role assignment schedule request. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="data" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.RoleAssignmentScheduleRequestResource.Validate(Azure.ResourceManager.Authorization.RoleAssignmentScheduleRequestData,System.Threading.CancellationToken)">
            <summary>
            Validates a new role assignment schedule request.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/{scope}/providers/Microsoft.Authorization/roleAssignmentScheduleRequests/{roleAssignmentScheduleRequestName}/validate</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>RoleAssignmentScheduleRequests_Validate</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2020-10-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.Authorization.RoleAssignmentScheduleRequestResource" /></description>
            </item>
            </list>
            </summary>
            <param name="data"> Parameters for the role assignment schedule request. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="data" /> is null. </exception>
        </member>
        <member name="T:Azure.ResourceManager.Authorization.RoleAssignmentScheduleResource">
            <summary>
            A Class representing a RoleAssignmentSchedule along with the instance operations that can be performed on it.
            If you have a <see cref="T:Azure.Core.ResourceIdentifier" /> you can construct a <see cref="T:Azure.ResourceManager.Authorization.RoleAssignmentScheduleResource" />
            from an instance of <see cref="T:Azure.ResourceManager.ArmClient" /> using the GetRoleAssignmentScheduleResource method.
            Otherwise you can get one from its parent resource <see cref="T:Azure.ResourceManager.ArmResource" /> using the GetRoleAssignmentSchedule method.
            </summary>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.RoleAssignmentScheduleResource.CreateResourceIdentifier(System.String,System.String)">
            <summary> Generate the resource identifier of a <see cref="T:Azure.ResourceManager.Authorization.RoleAssignmentScheduleResource" /> instance. </summary>
            <param name="scope"> The scope. </param>
            <param name="roleAssignmentScheduleName"> The roleAssignmentScheduleName. </param>
        </member>
        <member name="F:Azure.ResourceManager.Authorization.RoleAssignmentScheduleResource.ResourceType">
            <summary> Gets the resource type for the operations. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.RoleAssignmentScheduleResource.#ctor">
            <summary> Initializes a new instance of the <see cref="T:Azure.ResourceManager.Authorization.RoleAssignmentScheduleResource" /> class for mocking. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.RoleAssignmentScheduleResource.#ctor(Azure.ResourceManager.ArmClient,Azure.ResourceManager.Authorization.RoleAssignmentScheduleData)">
            <summary> Initializes a new instance of the <see cref="T:Azure.ResourceManager.Authorization.RoleAssignmentScheduleResource" /> class. </summary>
            <param name="client"> The client parameters to use in these operations. </param>
            <param name="data"> The resource that is the target of operations. </param>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.RoleAssignmentScheduleResource.#ctor(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)">
            <summary> Initializes a new instance of the <see cref="T:Azure.ResourceManager.Authorization.RoleAssignmentScheduleResource" /> class. </summary>
            <param name="client"> The client parameters to use in these operations. </param>
            <param name="id"> The identifier of the resource that is the target of operations. </param>
        </member>
        <member name="P:Azure.ResourceManager.Authorization.RoleAssignmentScheduleResource.HasData">
            <summary> Gets whether or not the current instance has data. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Authorization.RoleAssignmentScheduleResource.Data">
            <summary> Gets the data representing this Feature. </summary>
            <exception cref="T:System.InvalidOperationException"> Throws if there is no data loaded in the current instance. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.RoleAssignmentScheduleResource.GetAsync(System.Threading.CancellationToken)">
            <summary>
            Get the specified role assignment schedule for a resource scope
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/{scope}/providers/Microsoft.Authorization/roleAssignmentSchedules/{roleAssignmentScheduleName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>RoleAssignmentSchedules_Get</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2020-10-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.Authorization.RoleAssignmentScheduleResource" /></description>
            </item>
            </list>
            </summary>
            <param name="cancellationToken"> The cancellation token to use. </param>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.RoleAssignmentScheduleResource.Get(System.Threading.CancellationToken)">
            <summary>
            Get the specified role assignment schedule for a resource scope
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/{scope}/providers/Microsoft.Authorization/roleAssignmentSchedules/{roleAssignmentScheduleName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>RoleAssignmentSchedules_Get</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2020-10-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.Authorization.RoleAssignmentScheduleResource" /></description>
            </item>
            </list>
            </summary>
            <param name="cancellationToken"> The cancellation token to use. </param>
        </member>
        <member name="T:Azure.ResourceManager.Authorization.RoleEligibilityScheduleCollection">
            <summary>
            A class representing a collection of <see cref="T:Azure.ResourceManager.Authorization.RoleEligibilityScheduleResource" /> and their operations.
            Each <see cref="T:Azure.ResourceManager.Authorization.RoleEligibilityScheduleResource" /> in the collection will belong to the same instance of <see cref="T:Azure.ResourceManager.ArmResource" />.
            To get a <see cref="T:Azure.ResourceManager.Authorization.RoleEligibilityScheduleCollection" /> instance call the GetRoleEligibilitySchedules method from an instance of <see cref="T:Azure.ResourceManager.ArmResource" />.
            </summary>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.RoleEligibilityScheduleCollection.#ctor">
            <summary> Initializes a new instance of the <see cref="T:Azure.ResourceManager.Authorization.RoleEligibilityScheduleCollection" /> class for mocking. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.RoleEligibilityScheduleCollection.#ctor(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)">
            <summary> Initializes a new instance of the <see cref="T:Azure.ResourceManager.Authorization.RoleEligibilityScheduleCollection" /> class. </summary>
            <param name="client"> The client parameters to use in these operations. </param>
            <param name="id"> The identifier of the parent resource that is the target of operations. </param>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.RoleEligibilityScheduleCollection.GetAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Get the specified role eligibility schedule for a resource scope
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/{scope}/providers/Microsoft.Authorization/roleEligibilitySchedules/{roleEligibilityScheduleName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>RoleEligibilitySchedules_Get</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2020-10-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.Authorization.RoleEligibilityScheduleResource" /></description>
            </item>
            </list>
            </summary>
            <param name="roleEligibilityScheduleName"> The name (guid) of the role eligibility schedule to get. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentException"> <paramref name="roleEligibilityScheduleName" /> is an empty string, and was expected to be non-empty. </exception>
            <exception cref="T:System.ArgumentNullException"> <paramref name="roleEligibilityScheduleName" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.RoleEligibilityScheduleCollection.Get(System.String,System.Threading.CancellationToken)">
            <summary>
            Get the specified role eligibility schedule for a resource scope
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/{scope}/providers/Microsoft.Authorization/roleEligibilitySchedules/{roleEligibilityScheduleName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>RoleEligibilitySchedules_Get</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2020-10-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.Authorization.RoleEligibilityScheduleResource" /></description>
            </item>
            </list>
            </summary>
            <param name="roleEligibilityScheduleName"> The name (guid) of the role eligibility schedule to get. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentException"> <paramref name="roleEligibilityScheduleName" /> is an empty string, and was expected to be non-empty. </exception>
            <exception cref="T:System.ArgumentNullException"> <paramref name="roleEligibilityScheduleName" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.RoleEligibilityScheduleCollection.GetAllAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Gets role eligibility schedules for a resource scope.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/{scope}/providers/Microsoft.Authorization/roleEligibilitySchedules</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>RoleEligibilitySchedules_ListForScope</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2020-10-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.Authorization.RoleEligibilityScheduleResource" /></description>
            </item>
            </list>
            </summary>
            <param name="filter"> The filter to apply on the operation. Use $filter=atScope() to return all role eligibility schedules at or above the scope. Use $filter=principalId eq {id} to return all role eligibility schedules at, above or below the scope for the specified principal. Use $filter=assignedTo('{userId}') to return all role eligibility schedules for the user. Use $filter=asTarget() to return all role eligibility schedules created for the current user. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <returns> An async collection of <see cref="T:Azure.ResourceManager.Authorization.RoleEligibilityScheduleResource" /> that may take multiple service requests to iterate over. </returns>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.RoleEligibilityScheduleCollection.GetAll(System.String,System.Threading.CancellationToken)">
            <summary>
            Gets role eligibility schedules for a resource scope.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/{scope}/providers/Microsoft.Authorization/roleEligibilitySchedules</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>RoleEligibilitySchedules_ListForScope</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2020-10-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.Authorization.RoleEligibilityScheduleResource" /></description>
            </item>
            </list>
            </summary>
            <param name="filter"> The filter to apply on the operation. Use $filter=atScope() to return all role eligibility schedules at or above the scope. Use $filter=principalId eq {id} to return all role eligibility schedules at, above or below the scope for the specified principal. Use $filter=assignedTo('{userId}') to return all role eligibility schedules for the user. Use $filter=asTarget() to return all role eligibility schedules created for the current user. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <returns> A collection of <see cref="T:Azure.ResourceManager.Authorization.RoleEligibilityScheduleResource" /> that may take multiple service requests to iterate over. </returns>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.RoleEligibilityScheduleCollection.ExistsAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Checks to see if the resource exists in azure.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/{scope}/providers/Microsoft.Authorization/roleEligibilitySchedules/{roleEligibilityScheduleName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>RoleEligibilitySchedules_Get</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2020-10-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.Authorization.RoleEligibilityScheduleResource" /></description>
            </item>
            </list>
            </summary>
            <param name="roleEligibilityScheduleName"> The name (guid) of the role eligibility schedule to get. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentException"> <paramref name="roleEligibilityScheduleName" /> is an empty string, and was expected to be non-empty. </exception>
            <exception cref="T:System.ArgumentNullException"> <paramref name="roleEligibilityScheduleName" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.RoleEligibilityScheduleCollection.Exists(System.String,System.Threading.CancellationToken)">
            <summary>
            Checks to see if the resource exists in azure.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/{scope}/providers/Microsoft.Authorization/roleEligibilitySchedules/{roleEligibilityScheduleName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>RoleEligibilitySchedules_Get</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2020-10-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.Authorization.RoleEligibilityScheduleResource" /></description>
            </item>
            </list>
            </summary>
            <param name="roleEligibilityScheduleName"> The name (guid) of the role eligibility schedule to get. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentException"> <paramref name="roleEligibilityScheduleName" /> is an empty string, and was expected to be non-empty. </exception>
            <exception cref="T:System.ArgumentNullException"> <paramref name="roleEligibilityScheduleName" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.RoleEligibilityScheduleCollection.GetIfExistsAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Tries to get details for this resource from the service.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/{scope}/providers/Microsoft.Authorization/roleEligibilitySchedules/{roleEligibilityScheduleName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>RoleEligibilitySchedules_Get</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2020-10-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.Authorization.RoleEligibilityScheduleResource" /></description>
            </item>
            </list>
            </summary>
            <param name="roleEligibilityScheduleName"> The name (guid) of the role eligibility schedule to get. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentException"> <paramref name="roleEligibilityScheduleName" /> is an empty string, and was expected to be non-empty. </exception>
            <exception cref="T:System.ArgumentNullException"> <paramref name="roleEligibilityScheduleName" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.RoleEligibilityScheduleCollection.GetIfExists(System.String,System.Threading.CancellationToken)">
            <summary>
            Tries to get details for this resource from the service.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/{scope}/providers/Microsoft.Authorization/roleEligibilitySchedules/{roleEligibilityScheduleName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>RoleEligibilitySchedules_Get</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2020-10-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.Authorization.RoleEligibilityScheduleResource" /></description>
            </item>
            </list>
            </summary>
            <param name="roleEligibilityScheduleName"> The name (guid) of the role eligibility schedule to get. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentException"> <paramref name="roleEligibilityScheduleName" /> is an empty string, and was expected to be non-empty. </exception>
            <exception cref="T:System.ArgumentNullException"> <paramref name="roleEligibilityScheduleName" /> is null. </exception>
        </member>
        <member name="T:Azure.ResourceManager.Authorization.RoleEligibilityScheduleData">
            <summary>
            A class representing the RoleEligibilitySchedule data model.
            Role eligibility schedule
            </summary>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.RoleEligibilityScheduleData.#ctor">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Authorization.RoleEligibilityScheduleData" />. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.RoleEligibilityScheduleData.#ctor(Azure.Core.ResourceIdentifier,System.String,Azure.Core.ResourceType,Azure.ResourceManager.Models.SystemData,System.String,Azure.Core.ResourceIdentifier,System.Nullable{System.Guid},System.Nullable{Azure.ResourceManager.Authorization.Models.RoleManagementPrincipalType},Azure.Core.ResourceIdentifier,System.Nullable{Azure.ResourceManager.Authorization.Models.RoleManagementScheduleMemberType},System.Nullable{Azure.ResourceManager.Authorization.Models.RoleManagementScheduleStatus},System.Nullable{System.DateTimeOffset},System.Nullable{System.DateTimeOffset},System.String,System.String,System.Nullable{System.DateTimeOffset},System.Nullable{System.DateTimeOffset},Azure.ResourceManager.Authorization.Models.RoleManagementExpandedProperties,System.Collections.Generic.IDictionary{System.String,System.BinaryData})">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Authorization.RoleEligibilityScheduleData" />. </summary>
            <param name="id"> The id. </param>
            <param name="name"> The name. </param>
            <param name="resourceType"> The resourceType. </param>
            <param name="systemData"> The systemData. </param>
            <param name="scope"> The role eligibility schedule scope. </param>
            <param name="roleDefinitionId"> The role definition ID. </param>
            <param name="principalId"> The principal ID. </param>
            <param name="principalType"> The principal type of the assigned principal ID. </param>
            <param name="roleEligibilityScheduleRequestId"> The id of roleEligibilityScheduleRequest used to create this roleAssignmentSchedule. </param>
            <param name="memberType"> Membership type of the role eligibility schedule. </param>
            <param name="status"> The status of the role eligibility schedule. </param>
            <param name="startOn"> Start DateTime when role eligibility schedule. </param>
            <param name="endOn"> End DateTime when role eligibility schedule. </param>
            <param name="condition"> The conditions on the role assignment. This limits the resources it can be assigned to. e.g.: @Resource[Microsoft.Storage/storageAccounts/blobServices/containers:ContainerName] StringEqualsIgnoreCase 'foo_storage_container'. </param>
            <param name="conditionVersion"> Version of the condition. Currently accepted value is '2.0'. </param>
            <param name="createdOn"> DateTime when role eligibility schedule was created. </param>
            <param name="updatedOn"> DateTime when role eligibility schedule was modified. </param>
            <param name="expandedProperties"> Additional properties of principal, scope and role definition. </param>
            <param name="serializedAdditionalRawData"> Keeps track of any properties unknown to the library. </param>
        </member>
        <member name="P:Azure.ResourceManager.Authorization.RoleEligibilityScheduleData.Scope">
            <summary> The role eligibility schedule scope. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Authorization.RoleEligibilityScheduleData.RoleDefinitionId">
            <summary> The role definition ID. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Authorization.RoleEligibilityScheduleData.PrincipalId">
            <summary> The principal ID. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Authorization.RoleEligibilityScheduleData.PrincipalType">
            <summary> The principal type of the assigned principal ID. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Authorization.RoleEligibilityScheduleData.RoleEligibilityScheduleRequestId">
            <summary> The id of roleEligibilityScheduleRequest used to create this roleAssignmentSchedule. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Authorization.RoleEligibilityScheduleData.MemberType">
            <summary> Membership type of the role eligibility schedule. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Authorization.RoleEligibilityScheduleData.Status">
            <summary> The status of the role eligibility schedule. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Authorization.RoleEligibilityScheduleData.StartOn">
            <summary> Start DateTime when role eligibility schedule. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Authorization.RoleEligibilityScheduleData.EndOn">
            <summary> End DateTime when role eligibility schedule. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Authorization.RoleEligibilityScheduleData.Condition">
            <summary> The conditions on the role assignment. This limits the resources it can be assigned to. e.g.: @Resource[Microsoft.Storage/storageAccounts/blobServices/containers:ContainerName] StringEqualsIgnoreCase 'foo_storage_container'. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Authorization.RoleEligibilityScheduleData.ConditionVersion">
            <summary> Version of the condition. Currently accepted value is '2.0'. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Authorization.RoleEligibilityScheduleData.CreatedOn">
            <summary> DateTime when role eligibility schedule was created. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Authorization.RoleEligibilityScheduleData.UpdatedOn">
            <summary> DateTime when role eligibility schedule was modified. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Authorization.RoleEligibilityScheduleData.ExpandedProperties">
            <summary> Additional properties of principal, scope and role definition. </summary>
        </member>
        <member name="T:Azure.ResourceManager.Authorization.RoleEligibilityScheduleInstanceCollection">
            <summary>
            A class representing a collection of <see cref="T:Azure.ResourceManager.Authorization.RoleEligibilityScheduleInstanceResource" /> and their operations.
            Each <see cref="T:Azure.ResourceManager.Authorization.RoleEligibilityScheduleInstanceResource" /> in the collection will belong to the same instance of <see cref="T:Azure.ResourceManager.ArmResource" />.
            To get a <see cref="T:Azure.ResourceManager.Authorization.RoleEligibilityScheduleInstanceCollection" /> instance call the GetRoleEligibilityScheduleInstances method from an instance of <see cref="T:Azure.ResourceManager.ArmResource" />.
            </summary>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.RoleEligibilityScheduleInstanceCollection.#ctor">
            <summary> Initializes a new instance of the <see cref="T:Azure.ResourceManager.Authorization.RoleEligibilityScheduleInstanceCollection" /> class for mocking. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.RoleEligibilityScheduleInstanceCollection.#ctor(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)">
            <summary> Initializes a new instance of the <see cref="T:Azure.ResourceManager.Authorization.RoleEligibilityScheduleInstanceCollection" /> class. </summary>
            <param name="client"> The client parameters to use in these operations. </param>
            <param name="id"> The identifier of the parent resource that is the target of operations. </param>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.RoleEligibilityScheduleInstanceCollection.GetAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Gets the specified role eligibility schedule instance.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/{scope}/providers/Microsoft.Authorization/roleEligibilityScheduleInstances/{roleEligibilityScheduleInstanceName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>RoleEligibilityScheduleInstances_Get</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2020-10-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.Authorization.RoleEligibilityScheduleInstanceResource" /></description>
            </item>
            </list>
            </summary>
            <param name="roleEligibilityScheduleInstanceName"> The name (hash of schedule name + time) of the role eligibility schedule to get. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentException"> <paramref name="roleEligibilityScheduleInstanceName" /> is an empty string, and was expected to be non-empty. </exception>
            <exception cref="T:System.ArgumentNullException"> <paramref name="roleEligibilityScheduleInstanceName" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.RoleEligibilityScheduleInstanceCollection.Get(System.String,System.Threading.CancellationToken)">
            <summary>
            Gets the specified role eligibility schedule instance.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/{scope}/providers/Microsoft.Authorization/roleEligibilityScheduleInstances/{roleEligibilityScheduleInstanceName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>RoleEligibilityScheduleInstances_Get</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2020-10-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.Authorization.RoleEligibilityScheduleInstanceResource" /></description>
            </item>
            </list>
            </summary>
            <param name="roleEligibilityScheduleInstanceName"> The name (hash of schedule name + time) of the role eligibility schedule to get. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentException"> <paramref name="roleEligibilityScheduleInstanceName" /> is an empty string, and was expected to be non-empty. </exception>
            <exception cref="T:System.ArgumentNullException"> <paramref name="roleEligibilityScheduleInstanceName" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.RoleEligibilityScheduleInstanceCollection.GetAllAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Gets role eligibility schedule instances of a role eligibility schedule.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/{scope}/providers/Microsoft.Authorization/roleEligibilityScheduleInstances</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>RoleEligibilityScheduleInstances_ListForScope</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2020-10-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.Authorization.RoleEligibilityScheduleInstanceResource" /></description>
            </item>
            </list>
            </summary>
            <param name="filter"> The filter to apply on the operation. Use $filter=atScope() to return all role assignment schedules at or above the scope. Use $filter=principalId eq {id} to return all role assignment schedules at, above or below the scope for the specified principal. Use $filter=assignedTo('{userId}') to return all role eligibility schedules for the user. Use $filter=asTarget() to return all role eligibility schedules created for the current user. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <returns> An async collection of <see cref="T:Azure.ResourceManager.Authorization.RoleEligibilityScheduleInstanceResource" /> that may take multiple service requests to iterate over. </returns>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.RoleEligibilityScheduleInstanceCollection.GetAll(System.String,System.Threading.CancellationToken)">
            <summary>
            Gets role eligibility schedule instances of a role eligibility schedule.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/{scope}/providers/Microsoft.Authorization/roleEligibilityScheduleInstances</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>RoleEligibilityScheduleInstances_ListForScope</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2020-10-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.Authorization.RoleEligibilityScheduleInstanceResource" /></description>
            </item>
            </list>
            </summary>
            <param name="filter"> The filter to apply on the operation. Use $filter=atScope() to return all role assignment schedules at or above the scope. Use $filter=principalId eq {id} to return all role assignment schedules at, above or below the scope for the specified principal. Use $filter=assignedTo('{userId}') to return all role eligibility schedules for the user. Use $filter=asTarget() to return all role eligibility schedules created for the current user. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <returns> A collection of <see cref="T:Azure.ResourceManager.Authorization.RoleEligibilityScheduleInstanceResource" /> that may take multiple service requests to iterate over. </returns>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.RoleEligibilityScheduleInstanceCollection.ExistsAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Checks to see if the resource exists in azure.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/{scope}/providers/Microsoft.Authorization/roleEligibilityScheduleInstances/{roleEligibilityScheduleInstanceName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>RoleEligibilityScheduleInstances_Get</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2020-10-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.Authorization.RoleEligibilityScheduleInstanceResource" /></description>
            </item>
            </list>
            </summary>
            <param name="roleEligibilityScheduleInstanceName"> The name (hash of schedule name + time) of the role eligibility schedule to get. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentException"> <paramref name="roleEligibilityScheduleInstanceName" /> is an empty string, and was expected to be non-empty. </exception>
            <exception cref="T:System.ArgumentNullException"> <paramref name="roleEligibilityScheduleInstanceName" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.RoleEligibilityScheduleInstanceCollection.Exists(System.String,System.Threading.CancellationToken)">
            <summary>
            Checks to see if the resource exists in azure.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/{scope}/providers/Microsoft.Authorization/roleEligibilityScheduleInstances/{roleEligibilityScheduleInstanceName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>RoleEligibilityScheduleInstances_Get</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2020-10-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.Authorization.RoleEligibilityScheduleInstanceResource" /></description>
            </item>
            </list>
            </summary>
            <param name="roleEligibilityScheduleInstanceName"> The name (hash of schedule name + time) of the role eligibility schedule to get. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentException"> <paramref name="roleEligibilityScheduleInstanceName" /> is an empty string, and was expected to be non-empty. </exception>
            <exception cref="T:System.ArgumentNullException"> <paramref name="roleEligibilityScheduleInstanceName" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.RoleEligibilityScheduleInstanceCollection.GetIfExistsAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Tries to get details for this resource from the service.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/{scope}/providers/Microsoft.Authorization/roleEligibilityScheduleInstances/{roleEligibilityScheduleInstanceName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>RoleEligibilityScheduleInstances_Get</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2020-10-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.Authorization.RoleEligibilityScheduleInstanceResource" /></description>
            </item>
            </list>
            </summary>
            <param name="roleEligibilityScheduleInstanceName"> The name (hash of schedule name + time) of the role eligibility schedule to get. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentException"> <paramref name="roleEligibilityScheduleInstanceName" /> is an empty string, and was expected to be non-empty. </exception>
            <exception cref="T:System.ArgumentNullException"> <paramref name="roleEligibilityScheduleInstanceName" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.RoleEligibilityScheduleInstanceCollection.GetIfExists(System.String,System.Threading.CancellationToken)">
            <summary>
            Tries to get details for this resource from the service.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/{scope}/providers/Microsoft.Authorization/roleEligibilityScheduleInstances/{roleEligibilityScheduleInstanceName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>RoleEligibilityScheduleInstances_Get</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2020-10-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.Authorization.RoleEligibilityScheduleInstanceResource" /></description>
            </item>
            </list>
            </summary>
            <param name="roleEligibilityScheduleInstanceName"> The name (hash of schedule name + time) of the role eligibility schedule to get. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentException"> <paramref name="roleEligibilityScheduleInstanceName" /> is an empty string, and was expected to be non-empty. </exception>
            <exception cref="T:System.ArgumentNullException"> <paramref name="roleEligibilityScheduleInstanceName" /> is null. </exception>
        </member>
        <member name="T:Azure.ResourceManager.Authorization.RoleEligibilityScheduleInstanceData">
            <summary>
            A class representing the RoleEligibilityScheduleInstance data model.
            Information about current or upcoming role eligibility schedule instance
            </summary>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.RoleEligibilityScheduleInstanceData.#ctor">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Authorization.RoleEligibilityScheduleInstanceData" />. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.RoleEligibilityScheduleInstanceData.#ctor(Azure.Core.ResourceIdentifier,System.String,Azure.Core.ResourceType,Azure.ResourceManager.Models.SystemData,System.String,Azure.Core.ResourceIdentifier,System.Nullable{System.Guid},System.Nullable{Azure.ResourceManager.Authorization.Models.RoleManagementPrincipalType},Azure.Core.ResourceIdentifier,System.Nullable{Azure.ResourceManager.Authorization.Models.RoleManagementScheduleStatus},System.Nullable{System.DateTimeOffset},System.Nullable{System.DateTimeOffset},System.Nullable{Azure.ResourceManager.Authorization.Models.RoleManagementScheduleMemberType},System.String,System.String,System.Nullable{System.DateTimeOffset},Azure.ResourceManager.Authorization.Models.RoleManagementExpandedProperties,System.Collections.Generic.IDictionary{System.String,System.BinaryData})">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Authorization.RoleEligibilityScheduleInstanceData" />. </summary>
            <param name="id"> The id. </param>
            <param name="name"> The name. </param>
            <param name="resourceType"> The resourceType. </param>
            <param name="systemData"> The systemData. </param>
            <param name="scope"> The role eligibility schedule scope. </param>
            <param name="roleDefinitionId"> The role definition ID. </param>
            <param name="principalId"> The principal ID. </param>
            <param name="principalType"> The principal type of the assigned principal ID. </param>
            <param name="roleEligibilityScheduleId"> Id of the master role eligibility schedule. </param>
            <param name="status"> The status of the role eligibility schedule instance. </param>
            <param name="startOn"> The startDateTime of the role eligibility schedule instance. </param>
            <param name="endOn"> The endDateTime of the role eligibility schedule instance. </param>
            <param name="memberType"> Membership type of the role eligibility schedule. </param>
            <param name="condition"> The conditions on the role assignment. This limits the resources it can be assigned to. e.g.: @Resource[Microsoft.Storage/storageAccounts/blobServices/containers:ContainerName] StringEqualsIgnoreCase 'foo_storage_container'. </param>
            <param name="conditionVersion"> Version of the condition. Currently accepted value is '2.0'. </param>
            <param name="createdOn"> DateTime when role eligibility schedule was created. </param>
            <param name="expandedProperties"> Additional properties of principal, scope and role definition. </param>
            <param name="serializedAdditionalRawData"> Keeps track of any properties unknown to the library. </param>
        </member>
        <member name="P:Azure.ResourceManager.Authorization.RoleEligibilityScheduleInstanceData.Scope">
            <summary> The role eligibility schedule scope. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Authorization.RoleEligibilityScheduleInstanceData.RoleDefinitionId">
            <summary> The role definition ID. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Authorization.RoleEligibilityScheduleInstanceData.PrincipalId">
            <summary> The principal ID. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Authorization.RoleEligibilityScheduleInstanceData.PrincipalType">
            <summary> The principal type of the assigned principal ID. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Authorization.RoleEligibilityScheduleInstanceData.RoleEligibilityScheduleId">
            <summary> Id of the master role eligibility schedule. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Authorization.RoleEligibilityScheduleInstanceData.Status">
            <summary> The status of the role eligibility schedule instance. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Authorization.RoleEligibilityScheduleInstanceData.StartOn">
            <summary> The startDateTime of the role eligibility schedule instance. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Authorization.RoleEligibilityScheduleInstanceData.EndOn">
            <summary> The endDateTime of the role eligibility schedule instance. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Authorization.RoleEligibilityScheduleInstanceData.MemberType">
            <summary> Membership type of the role eligibility schedule. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Authorization.RoleEligibilityScheduleInstanceData.Condition">
            <summary> The conditions on the role assignment. This limits the resources it can be assigned to. e.g.: @Resource[Microsoft.Storage/storageAccounts/blobServices/containers:ContainerName] StringEqualsIgnoreCase 'foo_storage_container'. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Authorization.RoleEligibilityScheduleInstanceData.ConditionVersion">
            <summary> Version of the condition. Currently accepted value is '2.0'. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Authorization.RoleEligibilityScheduleInstanceData.CreatedOn">
            <summary> DateTime when role eligibility schedule was created. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Authorization.RoleEligibilityScheduleInstanceData.ExpandedProperties">
            <summary> Additional properties of principal, scope and role definition. </summary>
        </member>
        <member name="T:Azure.ResourceManager.Authorization.RoleEligibilityScheduleInstanceResource">
            <summary>
            A Class representing a RoleEligibilityScheduleInstance along with the instance operations that can be performed on it.
            If you have a <see cref="T:Azure.Core.ResourceIdentifier" /> you can construct a <see cref="T:Azure.ResourceManager.Authorization.RoleEligibilityScheduleInstanceResource" />
            from an instance of <see cref="T:Azure.ResourceManager.ArmClient" /> using the GetRoleEligibilityScheduleInstanceResource method.
            Otherwise you can get one from its parent resource <see cref="T:Azure.ResourceManager.ArmResource" /> using the GetRoleEligibilityScheduleInstance method.
            </summary>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.RoleEligibilityScheduleInstanceResource.CreateResourceIdentifier(System.String,System.String)">
            <summary> Generate the resource identifier of a <see cref="T:Azure.ResourceManager.Authorization.RoleEligibilityScheduleInstanceResource" /> instance. </summary>
            <param name="scope"> The scope. </param>
            <param name="roleEligibilityScheduleInstanceName"> The roleEligibilityScheduleInstanceName. </param>
        </member>
        <member name="F:Azure.ResourceManager.Authorization.RoleEligibilityScheduleInstanceResource.ResourceType">
            <summary> Gets the resource type for the operations. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.RoleEligibilityScheduleInstanceResource.#ctor">
            <summary> Initializes a new instance of the <see cref="T:Azure.ResourceManager.Authorization.RoleEligibilityScheduleInstanceResource" /> class for mocking. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.RoleEligibilityScheduleInstanceResource.#ctor(Azure.ResourceManager.ArmClient,Azure.ResourceManager.Authorization.RoleEligibilityScheduleInstanceData)">
            <summary> Initializes a new instance of the <see cref="T:Azure.ResourceManager.Authorization.RoleEligibilityScheduleInstanceResource" /> class. </summary>
            <param name="client"> The client parameters to use in these operations. </param>
            <param name="data"> The resource that is the target of operations. </param>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.RoleEligibilityScheduleInstanceResource.#ctor(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)">
            <summary> Initializes a new instance of the <see cref="T:Azure.ResourceManager.Authorization.RoleEligibilityScheduleInstanceResource" /> class. </summary>
            <param name="client"> The client parameters to use in these operations. </param>
            <param name="id"> The identifier of the resource that is the target of operations. </param>
        </member>
        <member name="P:Azure.ResourceManager.Authorization.RoleEligibilityScheduleInstanceResource.HasData">
            <summary> Gets whether or not the current instance has data. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Authorization.RoleEligibilityScheduleInstanceResource.Data">
            <summary> Gets the data representing this Feature. </summary>
            <exception cref="T:System.InvalidOperationException"> Throws if there is no data loaded in the current instance. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.RoleEligibilityScheduleInstanceResource.GetAsync(System.Threading.CancellationToken)">
            <summary>
            Gets the specified role eligibility schedule instance.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/{scope}/providers/Microsoft.Authorization/roleEligibilityScheduleInstances/{roleEligibilityScheduleInstanceName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>RoleEligibilityScheduleInstances_Get</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2020-10-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.Authorization.RoleEligibilityScheduleInstanceResource" /></description>
            </item>
            </list>
            </summary>
            <param name="cancellationToken"> The cancellation token to use. </param>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.RoleEligibilityScheduleInstanceResource.Get(System.Threading.CancellationToken)">
            <summary>
            Gets the specified role eligibility schedule instance.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/{scope}/providers/Microsoft.Authorization/roleEligibilityScheduleInstances/{roleEligibilityScheduleInstanceName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>RoleEligibilityScheduleInstances_Get</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2020-10-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.Authorization.RoleEligibilityScheduleInstanceResource" /></description>
            </item>
            </list>
            </summary>
            <param name="cancellationToken"> The cancellation token to use. </param>
        </member>
        <member name="T:Azure.ResourceManager.Authorization.RoleEligibilityScheduleRequestCollection">
            <summary>
            A class representing a collection of <see cref="T:Azure.ResourceManager.Authorization.RoleEligibilityScheduleRequestResource" /> and their operations.
            Each <see cref="T:Azure.ResourceManager.Authorization.RoleEligibilityScheduleRequestResource" /> in the collection will belong to the same instance of <see cref="T:Azure.ResourceManager.ArmResource" />.
            To get a <see cref="T:Azure.ResourceManager.Authorization.RoleEligibilityScheduleRequestCollection" /> instance call the GetRoleEligibilityScheduleRequests method from an instance of <see cref="T:Azure.ResourceManager.ArmResource" />.
            </summary>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.RoleEligibilityScheduleRequestCollection.#ctor">
            <summary> Initializes a new instance of the <see cref="T:Azure.ResourceManager.Authorization.RoleEligibilityScheduleRequestCollection" /> class for mocking. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.RoleEligibilityScheduleRequestCollection.#ctor(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)">
            <summary> Initializes a new instance of the <see cref="T:Azure.ResourceManager.Authorization.RoleEligibilityScheduleRequestCollection" /> class. </summary>
            <param name="client"> The client parameters to use in these operations. </param>
            <param name="id"> The identifier of the parent resource that is the target of operations. </param>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.RoleEligibilityScheduleRequestCollection.CreateOrUpdateAsync(Azure.WaitUntil,System.String,Azure.ResourceManager.Authorization.RoleEligibilityScheduleRequestData,System.Threading.CancellationToken)">
            <summary>
            Creates a role eligibility schedule request.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/{scope}/providers/Microsoft.Authorization/roleEligibilityScheduleRequests/{roleEligibilityScheduleRequestName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>RoleEligibilityScheduleRequests_Create</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2020-10-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.Authorization.RoleEligibilityScheduleRequestResource" /></description>
            </item>
            </list>
            </summary>
            <param name="waitUntil"> <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
            <param name="roleEligibilityScheduleRequestName"> The name of the role eligibility to create. It can be any valid GUID. </param>
            <param name="data"> Parameters for the role eligibility schedule request. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentException"> <paramref name="roleEligibilityScheduleRequestName" /> is an empty string, and was expected to be non-empty. </exception>
            <exception cref="T:System.ArgumentNullException"> <paramref name="roleEligibilityScheduleRequestName" /> or <paramref name="data" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.RoleEligibilityScheduleRequestCollection.CreateOrUpdate(Azure.WaitUntil,System.String,Azure.ResourceManager.Authorization.RoleEligibilityScheduleRequestData,System.Threading.CancellationToken)">
            <summary>
            Creates a role eligibility schedule request.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/{scope}/providers/Microsoft.Authorization/roleEligibilityScheduleRequests/{roleEligibilityScheduleRequestName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>RoleEligibilityScheduleRequests_Create</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2020-10-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.Authorization.RoleEligibilityScheduleRequestResource" /></description>
            </item>
            </list>
            </summary>
            <param name="waitUntil"> <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
            <param name="roleEligibilityScheduleRequestName"> The name of the role eligibility to create. It can be any valid GUID. </param>
            <param name="data"> Parameters for the role eligibility schedule request. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentException"> <paramref name="roleEligibilityScheduleRequestName" /> is an empty string, and was expected to be non-empty. </exception>
            <exception cref="T:System.ArgumentNullException"> <paramref name="roleEligibilityScheduleRequestName" /> or <paramref name="data" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.RoleEligibilityScheduleRequestCollection.GetAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Get the specified role eligibility schedule request.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/{scope}/providers/Microsoft.Authorization/roleEligibilityScheduleRequests/{roleEligibilityScheduleRequestName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>RoleEligibilityScheduleRequests_Get</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2020-10-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.Authorization.RoleEligibilityScheduleRequestResource" /></description>
            </item>
            </list>
            </summary>
            <param name="roleEligibilityScheduleRequestName"> The name (guid) of the role eligibility schedule request to get. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentException"> <paramref name="roleEligibilityScheduleRequestName" /> is an empty string, and was expected to be non-empty. </exception>
            <exception cref="T:System.ArgumentNullException"> <paramref name="roleEligibilityScheduleRequestName" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.RoleEligibilityScheduleRequestCollection.Get(System.String,System.Threading.CancellationToken)">
            <summary>
            Get the specified role eligibility schedule request.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/{scope}/providers/Microsoft.Authorization/roleEligibilityScheduleRequests/{roleEligibilityScheduleRequestName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>RoleEligibilityScheduleRequests_Get</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2020-10-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.Authorization.RoleEligibilityScheduleRequestResource" /></description>
            </item>
            </list>
            </summary>
            <param name="roleEligibilityScheduleRequestName"> The name (guid) of the role eligibility schedule request to get. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentException"> <paramref name="roleEligibilityScheduleRequestName" /> is an empty string, and was expected to be non-empty. </exception>
            <exception cref="T:System.ArgumentNullException"> <paramref name="roleEligibilityScheduleRequestName" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.RoleEligibilityScheduleRequestCollection.GetAllAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Gets role eligibility schedule requests for a scope.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/{scope}/providers/Microsoft.Authorization/roleEligibilityScheduleRequests</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>RoleEligibilityScheduleRequests_ListForScope</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2020-10-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.Authorization.RoleEligibilityScheduleRequestResource" /></description>
            </item>
            </list>
            </summary>
            <param name="filter"> The filter to apply on the operation. Use $filter=atScope() to return all role eligibility schedule requests at or above the scope. Use $filter=principalId eq {id} to return all role eligibility schedule requests at, above or below the scope for the specified principal. Use $filter=asRequestor() to return all role eligibility schedule requests requested by the current user. Use $filter=asTarget() to return all role eligibility schedule requests created for the current user. Use $filter=asApprover() to return all role eligibility schedule requests where the current user is an approver. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <returns> An async collection of <see cref="T:Azure.ResourceManager.Authorization.RoleEligibilityScheduleRequestResource" /> that may take multiple service requests to iterate over. </returns>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.RoleEligibilityScheduleRequestCollection.GetAll(System.String,System.Threading.CancellationToken)">
            <summary>
            Gets role eligibility schedule requests for a scope.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/{scope}/providers/Microsoft.Authorization/roleEligibilityScheduleRequests</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>RoleEligibilityScheduleRequests_ListForScope</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2020-10-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.Authorization.RoleEligibilityScheduleRequestResource" /></description>
            </item>
            </list>
            </summary>
            <param name="filter"> The filter to apply on the operation. Use $filter=atScope() to return all role eligibility schedule requests at or above the scope. Use $filter=principalId eq {id} to return all role eligibility schedule requests at, above or below the scope for the specified principal. Use $filter=asRequestor() to return all role eligibility schedule requests requested by the current user. Use $filter=asTarget() to return all role eligibility schedule requests created for the current user. Use $filter=asApprover() to return all role eligibility schedule requests where the current user is an approver. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <returns> A collection of <see cref="T:Azure.ResourceManager.Authorization.RoleEligibilityScheduleRequestResource" /> that may take multiple service requests to iterate over. </returns>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.RoleEligibilityScheduleRequestCollection.ExistsAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Checks to see if the resource exists in azure.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/{scope}/providers/Microsoft.Authorization/roleEligibilityScheduleRequests/{roleEligibilityScheduleRequestName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>RoleEligibilityScheduleRequests_Get</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2020-10-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.Authorization.RoleEligibilityScheduleRequestResource" /></description>
            </item>
            </list>
            </summary>
            <param name="roleEligibilityScheduleRequestName"> The name (guid) of the role eligibility schedule request to get. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentException"> <paramref name="roleEligibilityScheduleRequestName" /> is an empty string, and was expected to be non-empty. </exception>
            <exception cref="T:System.ArgumentNullException"> <paramref name="roleEligibilityScheduleRequestName" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.RoleEligibilityScheduleRequestCollection.Exists(System.String,System.Threading.CancellationToken)">
            <summary>
            Checks to see if the resource exists in azure.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/{scope}/providers/Microsoft.Authorization/roleEligibilityScheduleRequests/{roleEligibilityScheduleRequestName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>RoleEligibilityScheduleRequests_Get</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2020-10-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.Authorization.RoleEligibilityScheduleRequestResource" /></description>
            </item>
            </list>
            </summary>
            <param name="roleEligibilityScheduleRequestName"> The name (guid) of the role eligibility schedule request to get. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentException"> <paramref name="roleEligibilityScheduleRequestName" /> is an empty string, and was expected to be non-empty. </exception>
            <exception cref="T:System.ArgumentNullException"> <paramref name="roleEligibilityScheduleRequestName" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.RoleEligibilityScheduleRequestCollection.GetIfExistsAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Tries to get details for this resource from the service.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/{scope}/providers/Microsoft.Authorization/roleEligibilityScheduleRequests/{roleEligibilityScheduleRequestName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>RoleEligibilityScheduleRequests_Get</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2020-10-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.Authorization.RoleEligibilityScheduleRequestResource" /></description>
            </item>
            </list>
            </summary>
            <param name="roleEligibilityScheduleRequestName"> The name (guid) of the role eligibility schedule request to get. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentException"> <paramref name="roleEligibilityScheduleRequestName" /> is an empty string, and was expected to be non-empty. </exception>
            <exception cref="T:System.ArgumentNullException"> <paramref name="roleEligibilityScheduleRequestName" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.RoleEligibilityScheduleRequestCollection.GetIfExists(System.String,System.Threading.CancellationToken)">
            <summary>
            Tries to get details for this resource from the service.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/{scope}/providers/Microsoft.Authorization/roleEligibilityScheduleRequests/{roleEligibilityScheduleRequestName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>RoleEligibilityScheduleRequests_Get</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2020-10-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.Authorization.RoleEligibilityScheduleRequestResource" /></description>
            </item>
            </list>
            </summary>
            <param name="roleEligibilityScheduleRequestName"> The name (guid) of the role eligibility schedule request to get. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentException"> <paramref name="roleEligibilityScheduleRequestName" /> is an empty string, and was expected to be non-empty. </exception>
            <exception cref="T:System.ArgumentNullException"> <paramref name="roleEligibilityScheduleRequestName" /> is null. </exception>
        </member>
        <member name="T:Azure.ResourceManager.Authorization.RoleEligibilityScheduleRequestData">
            <summary>
            A class representing the RoleEligibilityScheduleRequest data model.
            Role Eligibility schedule request
            </summary>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.RoleEligibilityScheduleRequestData.#ctor">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Authorization.RoleEligibilityScheduleRequestData" />. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.RoleEligibilityScheduleRequestData.#ctor(Azure.Core.ResourceIdentifier,System.String,Azure.Core.ResourceType,Azure.ResourceManager.Models.SystemData,System.String,Azure.Core.ResourceIdentifier,System.Nullable{System.Guid},System.Nullable{Azure.ResourceManager.Authorization.Models.RoleManagementPrincipalType},System.Nullable{Azure.ResourceManager.Authorization.Models.RoleManagementScheduleRequestType},System.Nullable{Azure.ResourceManager.Authorization.Models.RoleManagementScheduleStatus},System.String,Azure.Core.ResourceIdentifier,Azure.Core.ResourceIdentifier,System.String,Azure.ResourceManager.Authorization.Models.RoleEligibilityScheduleRequestPropertiesTicketInfo,System.String,System.String,System.Nullable{System.DateTimeOffset},System.Nullable{System.Guid},Azure.ResourceManager.Authorization.Models.RoleManagementExpandedProperties,System.Nullable{System.DateTimeOffset},System.Nullable{Azure.ResourceManager.Authorization.Models.RoleManagementScheduleExpirationType},System.Nullable{System.DateTimeOffset},System.Nullable{System.TimeSpan},System.Collections.Generic.IDictionary{System.String,System.BinaryData})">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Authorization.RoleEligibilityScheduleRequestData" />. </summary>
            <param name="id"> The id. </param>
            <param name="name"> The name. </param>
            <param name="resourceType"> The resourceType. </param>
            <param name="systemData"> The systemData. </param>
            <param name="scope"> The role eligibility schedule request scope. </param>
            <param name="roleDefinitionId"> The role definition ID. </param>
            <param name="principalId"> The principal ID. </param>
            <param name="principalType"> The principal type of the assigned principal ID. </param>
            <param name="requestType"> The type of the role assignment schedule request. Eg: SelfActivate, AdminAssign etc. </param>
            <param name="status"> The status of the role eligibility schedule request. </param>
            <param name="approvalId"> The approvalId of the role eligibility schedule request. </param>
            <param name="targetRoleEligibilityScheduleId"> The resultant role eligibility schedule id or the role eligibility schedule id being updated. </param>
            <param name="targetRoleEligibilityScheduleInstanceId"> The role eligibility schedule instance id being updated. </param>
            <param name="justification"> Justification for the role eligibility. </param>
            <param name="ticketInfo"> Ticket Info of the role eligibility. </param>
            <param name="condition"> The conditions on the role assignment. This limits the resources it can be assigned to. e.g.: @Resource[Microsoft.Storage/storageAccounts/blobServices/containers:ContainerName] StringEqualsIgnoreCase 'foo_storage_container'. </param>
            <param name="conditionVersion"> Version of the condition. Currently accepted value is '2.0'. </param>
            <param name="createdOn"> DateTime when role eligibility schedule request was created. </param>
            <param name="requestorId"> Id of the user who created this request. </param>
            <param name="expandedProperties"> Additional properties of principal, scope and role definition. </param>
            <param name="startOn"> Start DateTime of the role eligibility schedule. </param>
            <param name="expirationType"> Type of the role eligibility schedule expiration. </param>
            <param name="endOn"> End DateTime of the role eligibility schedule. </param>
            <param name="duration"> Duration of the role eligibility schedule in TimeSpan. </param>
            <param name="serializedAdditionalRawData"> Keeps track of any properties unknown to the library. </param>
        </member>
        <member name="P:Azure.ResourceManager.Authorization.RoleEligibilityScheduleRequestData.Scope">
            <summary> The role eligibility schedule request scope. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Authorization.RoleEligibilityScheduleRequestData.RoleDefinitionId">
            <summary> The role definition ID. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Authorization.RoleEligibilityScheduleRequestData.PrincipalId">
            <summary> The principal ID. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Authorization.RoleEligibilityScheduleRequestData.PrincipalType">
            <summary> The principal type of the assigned principal ID. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Authorization.RoleEligibilityScheduleRequestData.RequestType">
            <summary> The type of the role assignment schedule request. Eg: SelfActivate, AdminAssign etc. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Authorization.RoleEligibilityScheduleRequestData.Status">
            <summary> The status of the role eligibility schedule request. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Authorization.RoleEligibilityScheduleRequestData.ApprovalId">
            <summary> The approvalId of the role eligibility schedule request. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Authorization.RoleEligibilityScheduleRequestData.TargetRoleEligibilityScheduleId">
            <summary> The resultant role eligibility schedule id or the role eligibility schedule id being updated. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Authorization.RoleEligibilityScheduleRequestData.TargetRoleEligibilityScheduleInstanceId">
            <summary> The role eligibility schedule instance id being updated. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Authorization.RoleEligibilityScheduleRequestData.Justification">
            <summary> Justification for the role eligibility. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Authorization.RoleEligibilityScheduleRequestData.TicketInfo">
            <summary> Ticket Info of the role eligibility. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Authorization.RoleEligibilityScheduleRequestData.Condition">
            <summary> The conditions on the role assignment. This limits the resources it can be assigned to. e.g.: @Resource[Microsoft.Storage/storageAccounts/blobServices/containers:ContainerName] StringEqualsIgnoreCase 'foo_storage_container'. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Authorization.RoleEligibilityScheduleRequestData.ConditionVersion">
            <summary> Version of the condition. Currently accepted value is '2.0'. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Authorization.RoleEligibilityScheduleRequestData.CreatedOn">
            <summary> DateTime when role eligibility schedule request was created. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Authorization.RoleEligibilityScheduleRequestData.RequestorId">
            <summary> Id of the user who created this request. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Authorization.RoleEligibilityScheduleRequestData.ExpandedProperties">
            <summary> Additional properties of principal, scope and role definition. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Authorization.RoleEligibilityScheduleRequestData.StartOn">
            <summary> Start DateTime of the role eligibility schedule. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Authorization.RoleEligibilityScheduleRequestData.ExpirationType">
            <summary> Type of the role eligibility schedule expiration. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Authorization.RoleEligibilityScheduleRequestData.EndOn">
            <summary> End DateTime of the role eligibility schedule. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Authorization.RoleEligibilityScheduleRequestData.Duration">
            <summary> Duration of the role eligibility schedule in TimeSpan. </summary>
        </member>
        <member name="T:Azure.ResourceManager.Authorization.RoleEligibilityScheduleRequestResource">
            <summary>
            A Class representing a RoleEligibilityScheduleRequest along with the instance operations that can be performed on it.
            If you have a <see cref="T:Azure.Core.ResourceIdentifier" /> you can construct a <see cref="T:Azure.ResourceManager.Authorization.RoleEligibilityScheduleRequestResource" />
            from an instance of <see cref="T:Azure.ResourceManager.ArmClient" /> using the GetRoleEligibilityScheduleRequestResource method.
            Otherwise you can get one from its parent resource <see cref="T:Azure.ResourceManager.ArmResource" /> using the GetRoleEligibilityScheduleRequest method.
            </summary>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.RoleEligibilityScheduleRequestResource.CreateResourceIdentifier(System.String,System.String)">
            <summary> Generate the resource identifier of a <see cref="T:Azure.ResourceManager.Authorization.RoleEligibilityScheduleRequestResource" /> instance. </summary>
            <param name="scope"> The scope. </param>
            <param name="roleEligibilityScheduleRequestName"> The roleEligibilityScheduleRequestName. </param>
        </member>
        <member name="F:Azure.ResourceManager.Authorization.RoleEligibilityScheduleRequestResource.ResourceType">
            <summary> Gets the resource type for the operations. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.RoleEligibilityScheduleRequestResource.#ctor">
            <summary> Initializes a new instance of the <see cref="T:Azure.ResourceManager.Authorization.RoleEligibilityScheduleRequestResource" /> class for mocking. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.RoleEligibilityScheduleRequestResource.#ctor(Azure.ResourceManager.ArmClient,Azure.ResourceManager.Authorization.RoleEligibilityScheduleRequestData)">
            <summary> Initializes a new instance of the <see cref="T:Azure.ResourceManager.Authorization.RoleEligibilityScheduleRequestResource" /> class. </summary>
            <param name="client"> The client parameters to use in these operations. </param>
            <param name="data"> The resource that is the target of operations. </param>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.RoleEligibilityScheduleRequestResource.#ctor(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)">
            <summary> Initializes a new instance of the <see cref="T:Azure.ResourceManager.Authorization.RoleEligibilityScheduleRequestResource" /> class. </summary>
            <param name="client"> The client parameters to use in these operations. </param>
            <param name="id"> The identifier of the resource that is the target of operations. </param>
        </member>
        <member name="P:Azure.ResourceManager.Authorization.RoleEligibilityScheduleRequestResource.HasData">
            <summary> Gets whether or not the current instance has data. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Authorization.RoleEligibilityScheduleRequestResource.Data">
            <summary> Gets the data representing this Feature. </summary>
            <exception cref="T:System.InvalidOperationException"> Throws if there is no data loaded in the current instance. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.RoleEligibilityScheduleRequestResource.GetAsync(System.Threading.CancellationToken)">
            <summary>
            Get the specified role eligibility schedule request.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/{scope}/providers/Microsoft.Authorization/roleEligibilityScheduleRequests/{roleEligibilityScheduleRequestName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>RoleEligibilityScheduleRequests_Get</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2020-10-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.Authorization.RoleEligibilityScheduleRequestResource" /></description>
            </item>
            </list>
            </summary>
            <param name="cancellationToken"> The cancellation token to use. </param>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.RoleEligibilityScheduleRequestResource.Get(System.Threading.CancellationToken)">
            <summary>
            Get the specified role eligibility schedule request.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/{scope}/providers/Microsoft.Authorization/roleEligibilityScheduleRequests/{roleEligibilityScheduleRequestName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>RoleEligibilityScheduleRequests_Get</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2020-10-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.Authorization.RoleEligibilityScheduleRequestResource" /></description>
            </item>
            </list>
            </summary>
            <param name="cancellationToken"> The cancellation token to use. </param>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.RoleEligibilityScheduleRequestResource.UpdateAsync(Azure.WaitUntil,Azure.ResourceManager.Authorization.RoleEligibilityScheduleRequestData,System.Threading.CancellationToken)">
            <summary>
            Creates a role eligibility schedule request.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/{scope}/providers/Microsoft.Authorization/roleEligibilityScheduleRequests/{roleEligibilityScheduleRequestName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>RoleEligibilityScheduleRequests_Create</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2020-10-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.Authorization.RoleEligibilityScheduleRequestResource" /></description>
            </item>
            </list>
            </summary>
            <param name="waitUntil"> <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
            <param name="data"> Parameters for the role eligibility schedule request. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="data" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.RoleEligibilityScheduleRequestResource.Update(Azure.WaitUntil,Azure.ResourceManager.Authorization.RoleEligibilityScheduleRequestData,System.Threading.CancellationToken)">
            <summary>
            Creates a role eligibility schedule request.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/{scope}/providers/Microsoft.Authorization/roleEligibilityScheduleRequests/{roleEligibilityScheduleRequestName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>RoleEligibilityScheduleRequests_Create</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2020-10-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.Authorization.RoleEligibilityScheduleRequestResource" /></description>
            </item>
            </list>
            </summary>
            <param name="waitUntil"> <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
            <param name="data"> Parameters for the role eligibility schedule request. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="data" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.RoleEligibilityScheduleRequestResource.CancelAsync(System.Threading.CancellationToken)">
            <summary>
            Cancels a pending role eligibility schedule request.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/{scope}/providers/Microsoft.Authorization/roleEligibilityScheduleRequests/{roleEligibilityScheduleRequestName}/cancel</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>RoleEligibilityScheduleRequests_Cancel</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2020-10-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.Authorization.RoleEligibilityScheduleRequestResource" /></description>
            </item>
            </list>
            </summary>
            <param name="cancellationToken"> The cancellation token to use. </param>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.RoleEligibilityScheduleRequestResource.Cancel(System.Threading.CancellationToken)">
            <summary>
            Cancels a pending role eligibility schedule request.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/{scope}/providers/Microsoft.Authorization/roleEligibilityScheduleRequests/{roleEligibilityScheduleRequestName}/cancel</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>RoleEligibilityScheduleRequests_Cancel</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2020-10-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.Authorization.RoleEligibilityScheduleRequestResource" /></description>
            </item>
            </list>
            </summary>
            <param name="cancellationToken"> The cancellation token to use. </param>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.RoleEligibilityScheduleRequestResource.ValidateAsync(Azure.ResourceManager.Authorization.RoleEligibilityScheduleRequestData,System.Threading.CancellationToken)">
            <summary>
            Validates a new role eligibility schedule request.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/{scope}/providers/Microsoft.Authorization/roleEligibilityScheduleRequests/{roleEligibilityScheduleRequestName}/validate</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>RoleEligibilityScheduleRequests_Validate</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2020-10-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.Authorization.RoleEligibilityScheduleRequestResource" /></description>
            </item>
            </list>
            </summary>
            <param name="data"> Parameters for the role eligibility schedule request. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="data" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.RoleEligibilityScheduleRequestResource.Validate(Azure.ResourceManager.Authorization.RoleEligibilityScheduleRequestData,System.Threading.CancellationToken)">
            <summary>
            Validates a new role eligibility schedule request.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/{scope}/providers/Microsoft.Authorization/roleEligibilityScheduleRequests/{roleEligibilityScheduleRequestName}/validate</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>RoleEligibilityScheduleRequests_Validate</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2020-10-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.Authorization.RoleEligibilityScheduleRequestResource" /></description>
            </item>
            </list>
            </summary>
            <param name="data"> Parameters for the role eligibility schedule request. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="data" /> is null. </exception>
        </member>
        <member name="T:Azure.ResourceManager.Authorization.RoleEligibilityScheduleResource">
            <summary>
            A Class representing a RoleEligibilitySchedule along with the instance operations that can be performed on it.
            If you have a <see cref="T:Azure.Core.ResourceIdentifier" /> you can construct a <see cref="T:Azure.ResourceManager.Authorization.RoleEligibilityScheduleResource" />
            from an instance of <see cref="T:Azure.ResourceManager.ArmClient" /> using the GetRoleEligibilityScheduleResource method.
            Otherwise you can get one from its parent resource <see cref="T:Azure.ResourceManager.ArmResource" /> using the GetRoleEligibilitySchedule method.
            </summary>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.RoleEligibilityScheduleResource.CreateResourceIdentifier(System.String,System.String)">
            <summary> Generate the resource identifier of a <see cref="T:Azure.ResourceManager.Authorization.RoleEligibilityScheduleResource" /> instance. </summary>
            <param name="scope"> The scope. </param>
            <param name="roleEligibilityScheduleName"> The roleEligibilityScheduleName. </param>
        </member>
        <member name="F:Azure.ResourceManager.Authorization.RoleEligibilityScheduleResource.ResourceType">
            <summary> Gets the resource type for the operations. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.RoleEligibilityScheduleResource.#ctor">
            <summary> Initializes a new instance of the <see cref="T:Azure.ResourceManager.Authorization.RoleEligibilityScheduleResource" /> class for mocking. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.RoleEligibilityScheduleResource.#ctor(Azure.ResourceManager.ArmClient,Azure.ResourceManager.Authorization.RoleEligibilityScheduleData)">
            <summary> Initializes a new instance of the <see cref="T:Azure.ResourceManager.Authorization.RoleEligibilityScheduleResource" /> class. </summary>
            <param name="client"> The client parameters to use in these operations. </param>
            <param name="data"> The resource that is the target of operations. </param>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.RoleEligibilityScheduleResource.#ctor(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)">
            <summary> Initializes a new instance of the <see cref="T:Azure.ResourceManager.Authorization.RoleEligibilityScheduleResource" /> class. </summary>
            <param name="client"> The client parameters to use in these operations. </param>
            <param name="id"> The identifier of the resource that is the target of operations. </param>
        </member>
        <member name="P:Azure.ResourceManager.Authorization.RoleEligibilityScheduleResource.HasData">
            <summary> Gets whether or not the current instance has data. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Authorization.RoleEligibilityScheduleResource.Data">
            <summary> Gets the data representing this Feature. </summary>
            <exception cref="T:System.InvalidOperationException"> Throws if there is no data loaded in the current instance. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.RoleEligibilityScheduleResource.GetAsync(System.Threading.CancellationToken)">
            <summary>
            Get the specified role eligibility schedule for a resource scope
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/{scope}/providers/Microsoft.Authorization/roleEligibilitySchedules/{roleEligibilityScheduleName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>RoleEligibilitySchedules_Get</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2020-10-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.Authorization.RoleEligibilityScheduleResource" /></description>
            </item>
            </list>
            </summary>
            <param name="cancellationToken"> The cancellation token to use. </param>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.RoleEligibilityScheduleResource.Get(System.Threading.CancellationToken)">
            <summary>
            Get the specified role eligibility schedule for a resource scope
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/{scope}/providers/Microsoft.Authorization/roleEligibilitySchedules/{roleEligibilityScheduleName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>RoleEligibilitySchedules_Get</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2020-10-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.Authorization.RoleEligibilityScheduleResource" /></description>
            </item>
            </list>
            </summary>
            <param name="cancellationToken"> The cancellation token to use. </param>
        </member>
        <member name="T:Azure.ResourceManager.Authorization.RoleManagementPolicyAssignmentCollection">
            <summary>
            A class representing a collection of <see cref="T:Azure.ResourceManager.Authorization.RoleManagementPolicyAssignmentResource" /> and their operations.
            Each <see cref="T:Azure.ResourceManager.Authorization.RoleManagementPolicyAssignmentResource" /> in the collection will belong to the same instance of <see cref="T:Azure.ResourceManager.ArmResource" />.
            To get a <see cref="T:Azure.ResourceManager.Authorization.RoleManagementPolicyAssignmentCollection" /> instance call the GetRoleManagementPolicyAssignments method from an instance of <see cref="T:Azure.ResourceManager.ArmResource" />.
            </summary>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.RoleManagementPolicyAssignmentCollection.#ctor">
            <summary> Initializes a new instance of the <see cref="T:Azure.ResourceManager.Authorization.RoleManagementPolicyAssignmentCollection" /> class for mocking. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.RoleManagementPolicyAssignmentCollection.#ctor(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)">
            <summary> Initializes a new instance of the <see cref="T:Azure.ResourceManager.Authorization.RoleManagementPolicyAssignmentCollection" /> class. </summary>
            <param name="client"> The client parameters to use in these operations. </param>
            <param name="id"> The identifier of the parent resource that is the target of operations. </param>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.RoleManagementPolicyAssignmentCollection.CreateOrUpdateAsync(Azure.WaitUntil,System.String,Azure.ResourceManager.Authorization.RoleManagementPolicyAssignmentData,System.Threading.CancellationToken)">
            <summary>
            Create a role management policy assignment
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/{scope}/providers/Microsoft.Authorization/roleManagementPolicyAssignments/{roleManagementPolicyAssignmentName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>RoleManagementPolicyAssignments_Create</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2020-10-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.Authorization.RoleManagementPolicyAssignmentResource" /></description>
            </item>
            </list>
            </summary>
            <param name="waitUntil"> <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
            <param name="roleManagementPolicyAssignmentName"> The name of format {guid_guid} the role management policy assignment to upsert. </param>
            <param name="data"> Parameters for the role management policy assignment. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentException"> <paramref name="roleManagementPolicyAssignmentName" /> is an empty string, and was expected to be non-empty. </exception>
            <exception cref="T:System.ArgumentNullException"> <paramref name="roleManagementPolicyAssignmentName" /> or <paramref name="data" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.RoleManagementPolicyAssignmentCollection.CreateOrUpdate(Azure.WaitUntil,System.String,Azure.ResourceManager.Authorization.RoleManagementPolicyAssignmentData,System.Threading.CancellationToken)">
            <summary>
            Create a role management policy assignment
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/{scope}/providers/Microsoft.Authorization/roleManagementPolicyAssignments/{roleManagementPolicyAssignmentName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>RoleManagementPolicyAssignments_Create</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2020-10-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.Authorization.RoleManagementPolicyAssignmentResource" /></description>
            </item>
            </list>
            </summary>
            <param name="waitUntil"> <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
            <param name="roleManagementPolicyAssignmentName"> The name of format {guid_guid} the role management policy assignment to upsert. </param>
            <param name="data"> Parameters for the role management policy assignment. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentException"> <paramref name="roleManagementPolicyAssignmentName" /> is an empty string, and was expected to be non-empty. </exception>
            <exception cref="T:System.ArgumentNullException"> <paramref name="roleManagementPolicyAssignmentName" /> or <paramref name="data" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.RoleManagementPolicyAssignmentCollection.GetAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Get the specified role management policy assignment for a resource scope
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/{scope}/providers/Microsoft.Authorization/roleManagementPolicyAssignments/{roleManagementPolicyAssignmentName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>RoleManagementPolicyAssignments_Get</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2020-10-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.Authorization.RoleManagementPolicyAssignmentResource" /></description>
            </item>
            </list>
            </summary>
            <param name="roleManagementPolicyAssignmentName"> The name of format {guid_guid} the role management policy assignment to get. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentException"> <paramref name="roleManagementPolicyAssignmentName" /> is an empty string, and was expected to be non-empty. </exception>
            <exception cref="T:System.ArgumentNullException"> <paramref name="roleManagementPolicyAssignmentName" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.RoleManagementPolicyAssignmentCollection.Get(System.String,System.Threading.CancellationToken)">
            <summary>
            Get the specified role management policy assignment for a resource scope
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/{scope}/providers/Microsoft.Authorization/roleManagementPolicyAssignments/{roleManagementPolicyAssignmentName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>RoleManagementPolicyAssignments_Get</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2020-10-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.Authorization.RoleManagementPolicyAssignmentResource" /></description>
            </item>
            </list>
            </summary>
            <param name="roleManagementPolicyAssignmentName"> The name of format {guid_guid} the role management policy assignment to get. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentException"> <paramref name="roleManagementPolicyAssignmentName" /> is an empty string, and was expected to be non-empty. </exception>
            <exception cref="T:System.ArgumentNullException"> <paramref name="roleManagementPolicyAssignmentName" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.RoleManagementPolicyAssignmentCollection.GetAllAsync(System.Threading.CancellationToken)">
            <summary>
            Gets role management assignment policies for a resource scope.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/{scope}/providers/Microsoft.Authorization/roleManagementPolicyAssignments</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>RoleManagementPolicyAssignments_ListForScope</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2020-10-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.Authorization.RoleManagementPolicyAssignmentResource" /></description>
            </item>
            </list>
            </summary>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <returns> An async collection of <see cref="T:Azure.ResourceManager.Authorization.RoleManagementPolicyAssignmentResource" /> that may take multiple service requests to iterate over. </returns>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.RoleManagementPolicyAssignmentCollection.GetAll(System.Threading.CancellationToken)">
            <summary>
            Gets role management assignment policies for a resource scope.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/{scope}/providers/Microsoft.Authorization/roleManagementPolicyAssignments</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>RoleManagementPolicyAssignments_ListForScope</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2020-10-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.Authorization.RoleManagementPolicyAssignmentResource" /></description>
            </item>
            </list>
            </summary>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <returns> A collection of <see cref="T:Azure.ResourceManager.Authorization.RoleManagementPolicyAssignmentResource" /> that may take multiple service requests to iterate over. </returns>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.RoleManagementPolicyAssignmentCollection.ExistsAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Checks to see if the resource exists in azure.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/{scope}/providers/Microsoft.Authorization/roleManagementPolicyAssignments/{roleManagementPolicyAssignmentName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>RoleManagementPolicyAssignments_Get</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2020-10-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.Authorization.RoleManagementPolicyAssignmentResource" /></description>
            </item>
            </list>
            </summary>
            <param name="roleManagementPolicyAssignmentName"> The name of format {guid_guid} the role management policy assignment to get. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentException"> <paramref name="roleManagementPolicyAssignmentName" /> is an empty string, and was expected to be non-empty. </exception>
            <exception cref="T:System.ArgumentNullException"> <paramref name="roleManagementPolicyAssignmentName" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.RoleManagementPolicyAssignmentCollection.Exists(System.String,System.Threading.CancellationToken)">
            <summary>
            Checks to see if the resource exists in azure.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/{scope}/providers/Microsoft.Authorization/roleManagementPolicyAssignments/{roleManagementPolicyAssignmentName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>RoleManagementPolicyAssignments_Get</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2020-10-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.Authorization.RoleManagementPolicyAssignmentResource" /></description>
            </item>
            </list>
            </summary>
            <param name="roleManagementPolicyAssignmentName"> The name of format {guid_guid} the role management policy assignment to get. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentException"> <paramref name="roleManagementPolicyAssignmentName" /> is an empty string, and was expected to be non-empty. </exception>
            <exception cref="T:System.ArgumentNullException"> <paramref name="roleManagementPolicyAssignmentName" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.RoleManagementPolicyAssignmentCollection.GetIfExistsAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Tries to get details for this resource from the service.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/{scope}/providers/Microsoft.Authorization/roleManagementPolicyAssignments/{roleManagementPolicyAssignmentName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>RoleManagementPolicyAssignments_Get</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2020-10-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.Authorization.RoleManagementPolicyAssignmentResource" /></description>
            </item>
            </list>
            </summary>
            <param name="roleManagementPolicyAssignmentName"> The name of format {guid_guid} the role management policy assignment to get. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentException"> <paramref name="roleManagementPolicyAssignmentName" /> is an empty string, and was expected to be non-empty. </exception>
            <exception cref="T:System.ArgumentNullException"> <paramref name="roleManagementPolicyAssignmentName" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.RoleManagementPolicyAssignmentCollection.GetIfExists(System.String,System.Threading.CancellationToken)">
            <summary>
            Tries to get details for this resource from the service.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/{scope}/providers/Microsoft.Authorization/roleManagementPolicyAssignments/{roleManagementPolicyAssignmentName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>RoleManagementPolicyAssignments_Get</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2020-10-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.Authorization.RoleManagementPolicyAssignmentResource" /></description>
            </item>
            </list>
            </summary>
            <param name="roleManagementPolicyAssignmentName"> The name of format {guid_guid} the role management policy assignment to get. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentException"> <paramref name="roleManagementPolicyAssignmentName" /> is an empty string, and was expected to be non-empty. </exception>
            <exception cref="T:System.ArgumentNullException"> <paramref name="roleManagementPolicyAssignmentName" /> is null. </exception>
        </member>
        <member name="T:Azure.ResourceManager.Authorization.RoleManagementPolicyAssignmentData">
            <summary>
            A class representing the RoleManagementPolicyAssignment data model.
            Role management policy
            </summary>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.RoleManagementPolicyAssignmentData.#ctor">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Authorization.RoleManagementPolicyAssignmentData" />. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.RoleManagementPolicyAssignmentData.#ctor(Azure.Core.ResourceIdentifier,System.String,Azure.Core.ResourceType,Azure.ResourceManager.Models.SystemData,System.String,Azure.Core.ResourceIdentifier,Azure.Core.ResourceIdentifier,System.Collections.Generic.IReadOnlyList{Azure.ResourceManager.Authorization.Models.RoleManagementPolicyRule},Azure.ResourceManager.Authorization.Models.PolicyAssignmentProperties,System.Collections.Generic.IDictionary{System.String,System.BinaryData})">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Authorization.RoleManagementPolicyAssignmentData" />. </summary>
            <param name="id"> The id. </param>
            <param name="name"> The name. </param>
            <param name="resourceType"> The resourceType. </param>
            <param name="systemData"> The systemData. </param>
            <param name="scope"> The role management policy scope. </param>
            <param name="roleDefinitionId"> The role definition of management policy assignment. </param>
            <param name="policyId"> The policy id role management policy assignment. </param>
            <param name="effectiveRules">
            The readonly computed rule applied to the policy.
            Please note <see cref="T:Azure.ResourceManager.Authorization.Models.RoleManagementPolicyRule" /> is the base class. According to the scenario, a derived class of the base class might need to be assigned here, or this property needs to be casted to one of the possible derived classes.
            The available derived classes include <see cref="T:Azure.ResourceManager.Authorization.Models.RoleManagementPolicyApprovalRule" />, <see cref="T:Azure.ResourceManager.Authorization.Models.RoleManagementPolicyAuthenticationContextRule" />, <see cref="T:Azure.ResourceManager.Authorization.Models.RoleManagementPolicyEnablementRule" />, <see cref="T:Azure.ResourceManager.Authorization.Models.RoleManagementPolicyExpirationRule" /> and <see cref="T:Azure.ResourceManager.Authorization.Models.RoleManagementPolicyNotificationRule" />.
            </param>
            <param name="policyAssignmentProperties"> Additional properties of scope, role definition and policy. </param>
            <param name="serializedAdditionalRawData"> Keeps track of any properties unknown to the library. </param>
        </member>
        <member name="P:Azure.ResourceManager.Authorization.RoleManagementPolicyAssignmentData.Scope">
            <summary> The role management policy scope. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Authorization.RoleManagementPolicyAssignmentData.RoleDefinitionId">
            <summary> The role definition of management policy assignment. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Authorization.RoleManagementPolicyAssignmentData.PolicyId">
            <summary> The policy id role management policy assignment. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Authorization.RoleManagementPolicyAssignmentData.EffectiveRules">
            <summary>
            The readonly computed rule applied to the policy.
            Please note <see cref="T:Azure.ResourceManager.Authorization.Models.RoleManagementPolicyRule" /> is the base class. According to the scenario, a derived class of the base class might need to be assigned here, or this property needs to be casted to one of the possible derived classes.
            The available derived classes include <see cref="T:Azure.ResourceManager.Authorization.Models.RoleManagementPolicyApprovalRule" />, <see cref="T:Azure.ResourceManager.Authorization.Models.RoleManagementPolicyAuthenticationContextRule" />, <see cref="T:Azure.ResourceManager.Authorization.Models.RoleManagementPolicyEnablementRule" />, <see cref="T:Azure.ResourceManager.Authorization.Models.RoleManagementPolicyExpirationRule" /> and <see cref="T:Azure.ResourceManager.Authorization.Models.RoleManagementPolicyNotificationRule" />.
            </summary>
        </member>
        <member name="P:Azure.ResourceManager.Authorization.RoleManagementPolicyAssignmentData.PolicyAssignmentProperties">
            <summary> Additional properties of scope, role definition and policy. </summary>
        </member>
        <member name="T:Azure.ResourceManager.Authorization.RoleManagementPolicyAssignmentResource">
            <summary>
            A Class representing a RoleManagementPolicyAssignment along with the instance operations that can be performed on it.
            If you have a <see cref="T:Azure.Core.ResourceIdentifier" /> you can construct a <see cref="T:Azure.ResourceManager.Authorization.RoleManagementPolicyAssignmentResource" />
            from an instance of <see cref="T:Azure.ResourceManager.ArmClient" /> using the GetRoleManagementPolicyAssignmentResource method.
            Otherwise you can get one from its parent resource <see cref="T:Azure.ResourceManager.ArmResource" /> using the GetRoleManagementPolicyAssignment method.
            </summary>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.RoleManagementPolicyAssignmentResource.CreateResourceIdentifier(System.String,System.String)">
            <summary> Generate the resource identifier of a <see cref="T:Azure.ResourceManager.Authorization.RoleManagementPolicyAssignmentResource" /> instance. </summary>
            <param name="scope"> The scope. </param>
            <param name="roleManagementPolicyAssignmentName"> The roleManagementPolicyAssignmentName. </param>
        </member>
        <member name="F:Azure.ResourceManager.Authorization.RoleManagementPolicyAssignmentResource.ResourceType">
            <summary> Gets the resource type for the operations. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.RoleManagementPolicyAssignmentResource.#ctor">
            <summary> Initializes a new instance of the <see cref="T:Azure.ResourceManager.Authorization.RoleManagementPolicyAssignmentResource" /> class for mocking. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.RoleManagementPolicyAssignmentResource.#ctor(Azure.ResourceManager.ArmClient,Azure.ResourceManager.Authorization.RoleManagementPolicyAssignmentData)">
            <summary> Initializes a new instance of the <see cref="T:Azure.ResourceManager.Authorization.RoleManagementPolicyAssignmentResource" /> class. </summary>
            <param name="client"> The client parameters to use in these operations. </param>
            <param name="data"> The resource that is the target of operations. </param>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.RoleManagementPolicyAssignmentResource.#ctor(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)">
            <summary> Initializes a new instance of the <see cref="T:Azure.ResourceManager.Authorization.RoleManagementPolicyAssignmentResource" /> class. </summary>
            <param name="client"> The client parameters to use in these operations. </param>
            <param name="id"> The identifier of the resource that is the target of operations. </param>
        </member>
        <member name="P:Azure.ResourceManager.Authorization.RoleManagementPolicyAssignmentResource.HasData">
            <summary> Gets whether or not the current instance has data. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Authorization.RoleManagementPolicyAssignmentResource.Data">
            <summary> Gets the data representing this Feature. </summary>
            <exception cref="T:System.InvalidOperationException"> Throws if there is no data loaded in the current instance. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.RoleManagementPolicyAssignmentResource.GetAsync(System.Threading.CancellationToken)">
            <summary>
            Get the specified role management policy assignment for a resource scope
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/{scope}/providers/Microsoft.Authorization/roleManagementPolicyAssignments/{roleManagementPolicyAssignmentName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>RoleManagementPolicyAssignments_Get</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2020-10-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.Authorization.RoleManagementPolicyAssignmentResource" /></description>
            </item>
            </list>
            </summary>
            <param name="cancellationToken"> The cancellation token to use. </param>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.RoleManagementPolicyAssignmentResource.Get(System.Threading.CancellationToken)">
            <summary>
            Get the specified role management policy assignment for a resource scope
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/{scope}/providers/Microsoft.Authorization/roleManagementPolicyAssignments/{roleManagementPolicyAssignmentName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>RoleManagementPolicyAssignments_Get</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2020-10-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.Authorization.RoleManagementPolicyAssignmentResource" /></description>
            </item>
            </list>
            </summary>
            <param name="cancellationToken"> The cancellation token to use. </param>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.RoleManagementPolicyAssignmentResource.UpdateAsync(Azure.WaitUntil,Azure.ResourceManager.Authorization.RoleManagementPolicyAssignmentData,System.Threading.CancellationToken)">
            <summary>
            Create a role management policy assignment
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/{scope}/providers/Microsoft.Authorization/roleManagementPolicyAssignments/{roleManagementPolicyAssignmentName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>RoleManagementPolicyAssignments_Create</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2020-10-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.Authorization.RoleManagementPolicyAssignmentResource" /></description>
            </item>
            </list>
            </summary>
            <param name="waitUntil"> <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
            <param name="data"> Parameters for the role management policy assignment. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="data" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.RoleManagementPolicyAssignmentResource.Update(Azure.WaitUntil,Azure.ResourceManager.Authorization.RoleManagementPolicyAssignmentData,System.Threading.CancellationToken)">
            <summary>
            Create a role management policy assignment
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/{scope}/providers/Microsoft.Authorization/roleManagementPolicyAssignments/{roleManagementPolicyAssignmentName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>RoleManagementPolicyAssignments_Create</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2020-10-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.Authorization.RoleManagementPolicyAssignmentResource" /></description>
            </item>
            </list>
            </summary>
            <param name="waitUntil"> <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
            <param name="data"> Parameters for the role management policy assignment. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="data" /> is null. </exception>
        </member>
        <member name="T:Azure.ResourceManager.Authorization.RoleManagementPolicyCollection">
            <summary>
            A class representing a collection of <see cref="T:Azure.ResourceManager.Authorization.RoleManagementPolicyResource" /> and their operations.
            Each <see cref="T:Azure.ResourceManager.Authorization.RoleManagementPolicyResource" /> in the collection will belong to the same instance of <see cref="T:Azure.ResourceManager.ArmResource" />.
            To get a <see cref="T:Azure.ResourceManager.Authorization.RoleManagementPolicyCollection" /> instance call the GetRoleManagementPolicies method from an instance of <see cref="T:Azure.ResourceManager.ArmResource" />.
            </summary>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.RoleManagementPolicyCollection.#ctor">
            <summary> Initializes a new instance of the <see cref="T:Azure.ResourceManager.Authorization.RoleManagementPolicyCollection" /> class for mocking. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.RoleManagementPolicyCollection.#ctor(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)">
            <summary> Initializes a new instance of the <see cref="T:Azure.ResourceManager.Authorization.RoleManagementPolicyCollection" /> class. </summary>
            <param name="client"> The client parameters to use in these operations. </param>
            <param name="id"> The identifier of the parent resource that is the target of operations. </param>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.RoleManagementPolicyCollection.GetAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Get the specified role management policy for a resource scope
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/{scope}/providers/Microsoft.Authorization/roleManagementPolicies/{roleManagementPolicyName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>RoleManagementPolicies_Get</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2020-10-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.Authorization.RoleManagementPolicyResource" /></description>
            </item>
            </list>
            </summary>
            <param name="roleManagementPolicyName"> The name (guid) of the role management policy to get. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentException"> <paramref name="roleManagementPolicyName" /> is an empty string, and was expected to be non-empty. </exception>
            <exception cref="T:System.ArgumentNullException"> <paramref name="roleManagementPolicyName" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.RoleManagementPolicyCollection.Get(System.String,System.Threading.CancellationToken)">
            <summary>
            Get the specified role management policy for a resource scope
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/{scope}/providers/Microsoft.Authorization/roleManagementPolicies/{roleManagementPolicyName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>RoleManagementPolicies_Get</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2020-10-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.Authorization.RoleManagementPolicyResource" /></description>
            </item>
            </list>
            </summary>
            <param name="roleManagementPolicyName"> The name (guid) of the role management policy to get. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentException"> <paramref name="roleManagementPolicyName" /> is an empty string, and was expected to be non-empty. </exception>
            <exception cref="T:System.ArgumentNullException"> <paramref name="roleManagementPolicyName" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.RoleManagementPolicyCollection.GetAllAsync(System.Threading.CancellationToken)">
            <summary>
            Gets role management policies for a resource scope.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/{scope}/providers/Microsoft.Authorization/roleManagementPolicies</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>RoleManagementPolicies_ListForScope</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2020-10-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.Authorization.RoleManagementPolicyResource" /></description>
            </item>
            </list>
            </summary>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <returns> An async collection of <see cref="T:Azure.ResourceManager.Authorization.RoleManagementPolicyResource" /> that may take multiple service requests to iterate over. </returns>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.RoleManagementPolicyCollection.GetAll(System.Threading.CancellationToken)">
            <summary>
            Gets role management policies for a resource scope.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/{scope}/providers/Microsoft.Authorization/roleManagementPolicies</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>RoleManagementPolicies_ListForScope</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2020-10-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.Authorization.RoleManagementPolicyResource" /></description>
            </item>
            </list>
            </summary>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <returns> A collection of <see cref="T:Azure.ResourceManager.Authorization.RoleManagementPolicyResource" /> that may take multiple service requests to iterate over. </returns>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.RoleManagementPolicyCollection.ExistsAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Checks to see if the resource exists in azure.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/{scope}/providers/Microsoft.Authorization/roleManagementPolicies/{roleManagementPolicyName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>RoleManagementPolicies_Get</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2020-10-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.Authorization.RoleManagementPolicyResource" /></description>
            </item>
            </list>
            </summary>
            <param name="roleManagementPolicyName"> The name (guid) of the role management policy to get. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentException"> <paramref name="roleManagementPolicyName" /> is an empty string, and was expected to be non-empty. </exception>
            <exception cref="T:System.ArgumentNullException"> <paramref name="roleManagementPolicyName" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.RoleManagementPolicyCollection.Exists(System.String,System.Threading.CancellationToken)">
            <summary>
            Checks to see if the resource exists in azure.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/{scope}/providers/Microsoft.Authorization/roleManagementPolicies/{roleManagementPolicyName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>RoleManagementPolicies_Get</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2020-10-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.Authorization.RoleManagementPolicyResource" /></description>
            </item>
            </list>
            </summary>
            <param name="roleManagementPolicyName"> The name (guid) of the role management policy to get. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentException"> <paramref name="roleManagementPolicyName" /> is an empty string, and was expected to be non-empty. </exception>
            <exception cref="T:System.ArgumentNullException"> <paramref name="roleManagementPolicyName" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.RoleManagementPolicyCollection.GetIfExistsAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Tries to get details for this resource from the service.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/{scope}/providers/Microsoft.Authorization/roleManagementPolicies/{roleManagementPolicyName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>RoleManagementPolicies_Get</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2020-10-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.Authorization.RoleManagementPolicyResource" /></description>
            </item>
            </list>
            </summary>
            <param name="roleManagementPolicyName"> The name (guid) of the role management policy to get. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentException"> <paramref name="roleManagementPolicyName" /> is an empty string, and was expected to be non-empty. </exception>
            <exception cref="T:System.ArgumentNullException"> <paramref name="roleManagementPolicyName" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.RoleManagementPolicyCollection.GetIfExists(System.String,System.Threading.CancellationToken)">
            <summary>
            Tries to get details for this resource from the service.
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/{scope}/providers/Microsoft.Authorization/roleManagementPolicies/{roleManagementPolicyName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>RoleManagementPolicies_Get</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2020-10-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.Authorization.RoleManagementPolicyResource" /></description>
            </item>
            </list>
            </summary>
            <param name="roleManagementPolicyName"> The name (guid) of the role management policy to get. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentException"> <paramref name="roleManagementPolicyName" /> is an empty string, and was expected to be non-empty. </exception>
            <exception cref="T:System.ArgumentNullException"> <paramref name="roleManagementPolicyName" /> is null. </exception>
        </member>
        <member name="T:Azure.ResourceManager.Authorization.RoleManagementPolicyData">
            <summary>
            A class representing the RoleManagementPolicy data model.
            Role management policy
            </summary>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.RoleManagementPolicyData.#ctor">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Authorization.RoleManagementPolicyData" />. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.RoleManagementPolicyData.#ctor(Azure.Core.ResourceIdentifier,System.String,Azure.Core.ResourceType,Azure.ResourceManager.Models.SystemData,System.String,System.String,System.String,System.Nullable{System.Boolean},Azure.ResourceManager.Authorization.Models.RoleManagementPrincipal,System.Nullable{System.DateTimeOffset},System.Collections.Generic.IList{Azure.ResourceManager.Authorization.Models.RoleManagementPolicyRule},System.Collections.Generic.IReadOnlyList{Azure.ResourceManager.Authorization.Models.RoleManagementPolicyRule},Azure.ResourceManager.Authorization.Models.RoleManagementPolicyProperties,System.Collections.Generic.IDictionary{System.String,System.BinaryData})">
            <summary> Initializes a new instance of <see cref="T:Azure.ResourceManager.Authorization.RoleManagementPolicyData" />. </summary>
            <param name="id"> The id. </param>
            <param name="name"> The name. </param>
            <param name="resourceType"> The resourceType. </param>
            <param name="systemData"> The systemData. </param>
            <param name="scope"> The role management policy scope. </param>
            <param name="displayName"> The role management policy display name. </param>
            <param name="description"> The role management policy description. </param>
            <param name="isOrganizationDefault"> The role management policy is default policy. </param>
            <param name="lastModifiedBy"> The name of the entity last modified it. </param>
            <param name="lastModifiedOn"> The last modified date time. </param>
            <param name="rules">
            The rule applied to the policy.
            Please note <see cref="T:Azure.ResourceManager.Authorization.Models.RoleManagementPolicyRule" /> is the base class. According to the scenario, a derived class of the base class might need to be assigned here, or this property needs to be casted to one of the possible derived classes.
            The available derived classes include <see cref="T:Azure.ResourceManager.Authorization.Models.RoleManagementPolicyApprovalRule" />, <see cref="T:Azure.ResourceManager.Authorization.Models.RoleManagementPolicyAuthenticationContextRule" />, <see cref="T:Azure.ResourceManager.Authorization.Models.RoleManagementPolicyEnablementRule" />, <see cref="T:Azure.ResourceManager.Authorization.Models.RoleManagementPolicyExpirationRule" /> and <see cref="T:Azure.ResourceManager.Authorization.Models.RoleManagementPolicyNotificationRule" />.
            </param>
            <param name="effectiveRules">
            The readonly computed rule applied to the policy.
            Please note <see cref="T:Azure.ResourceManager.Authorization.Models.RoleManagementPolicyRule" /> is the base class. According to the scenario, a derived class of the base class might need to be assigned here, or this property needs to be casted to one of the possible derived classes.
            The available derived classes include <see cref="T:Azure.ResourceManager.Authorization.Models.RoleManagementPolicyApprovalRule" />, <see cref="T:Azure.ResourceManager.Authorization.Models.RoleManagementPolicyAuthenticationContextRule" />, <see cref="T:Azure.ResourceManager.Authorization.Models.RoleManagementPolicyEnablementRule" />, <see cref="T:Azure.ResourceManager.Authorization.Models.RoleManagementPolicyExpirationRule" /> and <see cref="T:Azure.ResourceManager.Authorization.Models.RoleManagementPolicyNotificationRule" />.
            </param>
            <param name="policyProperties"> Additional properties of scope. </param>
            <param name="serializedAdditionalRawData"> Keeps track of any properties unknown to the library. </param>
        </member>
        <member name="P:Azure.ResourceManager.Authorization.RoleManagementPolicyData.Scope">
            <summary> The role management policy scope. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Authorization.RoleManagementPolicyData.DisplayName">
            <summary> The role management policy display name. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Authorization.RoleManagementPolicyData.Description">
            <summary> The role management policy description. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Authorization.RoleManagementPolicyData.IsOrganizationDefault">
            <summary> The role management policy is default policy. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Authorization.RoleManagementPolicyData.LastModifiedBy">
            <summary> The name of the entity last modified it. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Authorization.RoleManagementPolicyData.LastModifiedOn">
            <summary> The last modified date time. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Authorization.RoleManagementPolicyData.Rules">
            <summary>
            The rule applied to the policy.
            Please note <see cref="T:Azure.ResourceManager.Authorization.Models.RoleManagementPolicyRule" /> is the base class. According to the scenario, a derived class of the base class might need to be assigned here, or this property needs to be casted to one of the possible derived classes.
            The available derived classes include <see cref="T:Azure.ResourceManager.Authorization.Models.RoleManagementPolicyApprovalRule" />, <see cref="T:Azure.ResourceManager.Authorization.Models.RoleManagementPolicyAuthenticationContextRule" />, <see cref="T:Azure.ResourceManager.Authorization.Models.RoleManagementPolicyEnablementRule" />, <see cref="T:Azure.ResourceManager.Authorization.Models.RoleManagementPolicyExpirationRule" /> and <see cref="T:Azure.ResourceManager.Authorization.Models.RoleManagementPolicyNotificationRule" />.
            </summary>
        </member>
        <member name="P:Azure.ResourceManager.Authorization.RoleManagementPolicyData.EffectiveRules">
            <summary>
            The readonly computed rule applied to the policy.
            Please note <see cref="T:Azure.ResourceManager.Authorization.Models.RoleManagementPolicyRule" /> is the base class. According to the scenario, a derived class of the base class might need to be assigned here, or this property needs to be casted to one of the possible derived classes.
            The available derived classes include <see cref="T:Azure.ResourceManager.Authorization.Models.RoleManagementPolicyApprovalRule" />, <see cref="T:Azure.ResourceManager.Authorization.Models.RoleManagementPolicyAuthenticationContextRule" />, <see cref="T:Azure.ResourceManager.Authorization.Models.RoleManagementPolicyEnablementRule" />, <see cref="T:Azure.ResourceManager.Authorization.Models.RoleManagementPolicyExpirationRule" /> and <see cref="T:Azure.ResourceManager.Authorization.Models.RoleManagementPolicyNotificationRule" />.
            </summary>
        </member>
        <member name="P:Azure.ResourceManager.Authorization.RoleManagementPolicyData.PolicyProperties">
            <summary> Additional properties of scope. </summary>
        </member>
        <member name="T:Azure.ResourceManager.Authorization.RoleManagementPolicyResource">
            <summary>
            A Class representing a RoleManagementPolicy along with the instance operations that can be performed on it.
            If you have a <see cref="T:Azure.Core.ResourceIdentifier" /> you can construct a <see cref="T:Azure.ResourceManager.Authorization.RoleManagementPolicyResource" />
            from an instance of <see cref="T:Azure.ResourceManager.ArmClient" /> using the GetRoleManagementPolicyResource method.
            Otherwise you can get one from its parent resource <see cref="T:Azure.ResourceManager.ArmResource" /> using the GetRoleManagementPolicy method.
            </summary>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.RoleManagementPolicyResource.CreateResourceIdentifier(System.String,System.String)">
            <summary> Generate the resource identifier of a <see cref="T:Azure.ResourceManager.Authorization.RoleManagementPolicyResource" /> instance. </summary>
            <param name="scope"> The scope. </param>
            <param name="roleManagementPolicyName"> The roleManagementPolicyName. </param>
        </member>
        <member name="F:Azure.ResourceManager.Authorization.RoleManagementPolicyResource.ResourceType">
            <summary> Gets the resource type for the operations. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.RoleManagementPolicyResource.#ctor">
            <summary> Initializes a new instance of the <see cref="T:Azure.ResourceManager.Authorization.RoleManagementPolicyResource" /> class for mocking. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.RoleManagementPolicyResource.#ctor(Azure.ResourceManager.ArmClient,Azure.ResourceManager.Authorization.RoleManagementPolicyData)">
            <summary> Initializes a new instance of the <see cref="T:Azure.ResourceManager.Authorization.RoleManagementPolicyResource" /> class. </summary>
            <param name="client"> The client parameters to use in these operations. </param>
            <param name="data"> The resource that is the target of operations. </param>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.RoleManagementPolicyResource.#ctor(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)">
            <summary> Initializes a new instance of the <see cref="T:Azure.ResourceManager.Authorization.RoleManagementPolicyResource" /> class. </summary>
            <param name="client"> The client parameters to use in these operations. </param>
            <param name="id"> The identifier of the resource that is the target of operations. </param>
        </member>
        <member name="P:Azure.ResourceManager.Authorization.RoleManagementPolicyResource.HasData">
            <summary> Gets whether or not the current instance has data. </summary>
        </member>
        <member name="P:Azure.ResourceManager.Authorization.RoleManagementPolicyResource.Data">
            <summary> Gets the data representing this Feature. </summary>
            <exception cref="T:System.InvalidOperationException"> Throws if there is no data loaded in the current instance. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.RoleManagementPolicyResource.GetAsync(System.Threading.CancellationToken)">
            <summary>
            Get the specified role management policy for a resource scope
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/{scope}/providers/Microsoft.Authorization/roleManagementPolicies/{roleManagementPolicyName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>RoleManagementPolicies_Get</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2020-10-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.Authorization.RoleManagementPolicyResource" /></description>
            </item>
            </list>
            </summary>
            <param name="cancellationToken"> The cancellation token to use. </param>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.RoleManagementPolicyResource.Get(System.Threading.CancellationToken)">
            <summary>
            Get the specified role management policy for a resource scope
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/{scope}/providers/Microsoft.Authorization/roleManagementPolicies/{roleManagementPolicyName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>RoleManagementPolicies_Get</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2020-10-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.Authorization.RoleManagementPolicyResource" /></description>
            </item>
            </list>
            </summary>
            <param name="cancellationToken"> The cancellation token to use. </param>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.RoleManagementPolicyResource.UpdateAsync(Azure.ResourceManager.Authorization.RoleManagementPolicyData,System.Threading.CancellationToken)">
            <summary>
            Update a role management policy
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/{scope}/providers/Microsoft.Authorization/roleManagementPolicies/{roleManagementPolicyName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>RoleManagementPolicies_Update</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2020-10-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.Authorization.RoleManagementPolicyResource" /></description>
            </item>
            </list>
            </summary>
            <param name="data"> Parameters for the role management policy. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="data" /> is null. </exception>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.RoleManagementPolicyResource.Update(Azure.ResourceManager.Authorization.RoleManagementPolicyData,System.Threading.CancellationToken)">
            <summary>
            Update a role management policy
            <list type="bullet">
            <item>
            <term>Request Path</term>
            <description>/{scope}/providers/Microsoft.Authorization/roleManagementPolicies/{roleManagementPolicyName}</description>
            </item>
            <item>
            <term>Operation Id</term>
            <description>RoleManagementPolicies_Update</description>
            </item>
            <item>
            <term>Default Api Version</term>
            <description>2020-10-01</description>
            </item>
            <item>
            <term>Resource</term>
            <description><see cref="T:Azure.ResourceManager.Authorization.RoleManagementPolicyResource" /></description>
            </item>
            </list>
            </summary>
            <param name="data"> Parameters for the role management policy. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="data" /> is null. </exception>
        </member>
        <member name="T:Azure.ResourceManager.Models.ManagedServiceIdentityTypeV3Converter">
            <summary> JsonConverter for managed service identity type v3. </summary>
        </member>
        <member name="M:Azure.ResourceManager.Models.ManagedServiceIdentityTypeV3Converter.Write(System.Text.Json.Utf8JsonWriter,Azure.ResourceManager.Models.ManagedServiceIdentityType,System.Text.Json.JsonSerializerOptions)">
            <summary> Serialize managed service identity type to v3 format. </summary>
            <param name="writer"> The writer. </param>
            <param name="model"> The ManagedServiceIdentityType model which is v4. </param>
            <param name="options"> The options for JsonSerializer. </param>
        </member>
        <member name="M:Azure.ResourceManager.Models.ManagedServiceIdentityTypeV3Converter.Read(System.Text.Json.Utf8JsonReader@,System.Type,System.Text.Json.JsonSerializerOptions)">
            <summary> Deserialize managed service identity type from v3 format. </summary>
            <param name="reader"> The reader. </param>
            <param name="typeToConvert"> The type to convert </param>
            <param name="options"> The options for JsonSerializer. </param>
        </member>
        <member name="T:Azure.ResourceManager.SharedExtensions">
            <summary>
            helper class
            </summary>
        </member>
        <member name="M:Azure.ResourceManager.SharedExtensions.SubstringAfterProviderNamespace(Azure.Core.ResourceIdentifier)">
            <summary>
            Collects the segments in a resource identifier into a string
            </summary>
            <param name="resourceId">the resource identifier</param>
            <returns></returns>
        </member>
        <member name="M:Azure.ResourceManager.SharedExtensions.ReplaceWith(System.Collections.Generic.IDictionary{System.String,System.String},System.Collections.Generic.IDictionary{System.String,System.String})">
            <summary>
            An extension method for supporting replacing one dictionary content with another one.
            This is used to support resource tags.
            </summary>
            <param name="dest"> The destination dictionary in which the content will be replaced. </param>
            <param name="src"> The source dictionary from which the content is copied from. </param>
            <returns> The destination dictionary that has been altered. </returns>
        </member>
        <member name="P:Azure.Core.CodeGenModelAttribute.Usage">
            <summary>
            Gets or sets a coma separated list of additional model usage modes. Allowed values: model, error, intput, output.
            </summary>
        </member>
        <member name="P:Azure.Core.CodeGenModelAttribute.Formats">
            <summary>
            Gets or sets a coma separated list of additional model serialization formats.
            </summary>
        </member>
        <member name="P:Azure.Core.CodeGenSerializationAttribute.PropertyName">
            <summary>
            Gets or sets the property name which these hooks should apply to
            </summary>
        </member>
        <member name="P:Azure.Core.CodeGenSerializationAttribute.SerializationPath">
            <summary>
            Gets or sets the serialization path of the property in the JSON
            </summary>
        </member>
        <member name="P:Azure.Core.CodeGenSerializationAttribute.SerializationValueHook">
            <summary>
            Gets or sets the method name to use when serializing the property value (property name excluded)
            The signature of the serialization hook method must be or compatible with when invoking:
            private void SerializeHook(Utf8JsonWriter writer);
            </summary>
        </member>
        <member name="P:Azure.Core.CodeGenSerializationAttribute.DeserializationValueHook">
            <summary>
            Gets or sets the method name to use when deserializing the property value from the JSON
            private static void DeserializationHook(JsonProperty property, ref TypeOfTheProperty propertyValue); // if the property is required
            private static void DeserializationHook(JsonProperty property, ref Optional&lt;TypeOfTheProperty&gt; propertyValue); // if the property is optional
            </summary>
        </member>
        <member name="P:Azure.Core.CodeGenSerializationAttribute.BicepSerializationValueHook">
            <summary>
            Gets or sets the method name to use when serializing the property value (property name excluded)
            The signature of the serialization hook method must be or compatible with when invoking:
            private void SerializeHook(StringBuilder builder);
            </summary>
        </member>
        <member name="T:Azure.Core.AppContextSwitchHelper">
            <summary>
            Helper for interacting with AppConfig settings and their related Environment variable settings.
            </summary>
        </member>
        <member name="M:Azure.Core.AppContextSwitchHelper.GetConfigValue(System.String,System.String)">
            <summary>
            Determines if either an AppContext switch or its corresponding Environment Variable is set
            </summary>
            <param name="appContexSwitchName">Name of the AppContext switch.</param>
            <param name="environmentVariableName">Name of the Environment variable.</param>
            <returns>If the AppContext switch has been set, returns the value of the switch.
            If the AppContext switch has not been set, returns the value of the environment variable.
            False if neither is set.
            </returns>
        </member>
        <member name="T:Azure.Core.AsyncLockWithValue`1">
            <summary>
            Primitive that combines async lock and value cache
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="M:Azure.Core.AsyncLockWithValue`1.GetLockOrValueAsync(System.Boolean,System.Threading.CancellationToken)">
            <summary>
            Method that either returns cached value or acquire a lock.
            If one caller has acquired a lock, other callers will be waiting for the lock to be released.
            If value is set, lock is released and all waiters get that value.
            If value isn't set, the next waiter in the queue will get the lock.
            </summary>
            <param name="async"></param>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="P:Azure.Core.AsyncLockWithValue`1.LockOrValue.HasValue">
            <summary>
            Returns true if lock contains the cached value. Otherwise false.
            </summary>
        </member>
        <member name="P:Azure.Core.AsyncLockWithValue`1.LockOrValue.Value">
            <summary>
            Returns cached value if it was set when lock has been created. Throws exception otherwise.
            </summary>
            <exception cref="T:System.InvalidOperationException">Value isn't set.</exception>
        </member>
        <member name="M:Azure.Core.AsyncLockWithValue`1.LockOrValue.SetValue(`0)">
            <summary>
            Set value to the cache and to all the waiters.
            </summary>
            <param name="value"></param>
            <exception cref="T:System.InvalidOperationException">Value is set already.</exception>
        </member>
        <member name="M:Azure.Core.Pipeline.ClientDiagnostics.#ctor(Azure.Core.ClientOptions,System.Nullable{System.Boolean})">
            <summary>
            Initializes a new instance of the <see cref="T:Azure.Core.Pipeline.ClientDiagnostics" /> class.
            </summary>
            <param name="options">The customer provided client options object.</param>
            <param name="suppressNestedClientActivities">Flag controlling if <see cref="T:System.Diagnostics.Activity" />
             created by this <see cref="T:Azure.Core.Pipeline.ClientDiagnostics" /> for client method calls should be suppressed when called
             by other Azure SDK client methods.  It's recommended to set it to true for new clients; use default (null)
             for backward compatibility reasons, or set it to false to explicitly disable suppression for specific cases.
             The default value could change in the future, the flag should be only set to false if suppression for the client
             should never be enabled.</param>
        </member>
        <member name="M:Azure.Core.Pipeline.ClientDiagnostics.#ctor(System.String,System.String,Azure.Core.DiagnosticsOptions,System.Nullable{System.Boolean})">
            <summary>
            Initializes a new instance of the <see cref="T:Azure.Core.Pipeline.ClientDiagnostics" /> class.
            </summary>
            <param name="optionsNamespace">Namespace of the client class, such as Azure.Storage or Azure.AppConfiguration.</param>
            <param name="providerNamespace">Azure Resource Provider namespace of the Azure service SDK is primarily used for.</param>
            <param name="diagnosticsOptions">The customer provided client diagnostics options.</param>
            <param name="suppressNestedClientActivities">Flag controlling if <see cref="T:System.Diagnostics.Activity" />
             created by this <see cref="T:Azure.Core.Pipeline.ClientDiagnostics" /> for client method calls should be suppressed when called
             by other Azure SDK client methods.  It's recommended to set it to true for new clients, use default (null) for old clients
             for backward compatibility reasons, or set it to false to explicitly disable suppression for specific cases.
             The default value could change in the future, the flag should be only set to false if suppression for the client
             should never be enabled.</param>
        </member>
        <member name="M:Azure.Core.Pipeline.DiagnosticScope.AddLink(System.String,System.String,System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            Adds a link to the scope. This must be called before <see cref="M:Azure.Core.Pipeline.DiagnosticScope.Start" /> has been called for the DiagnosticScope.
            </summary>
            <param name="traceparent">The traceparent for the link.</param>
            <param name="tracestate">The tracestate for the link.</param>
            <param name="attributes">Optional attributes to associate with the link.</param>
        </member>
        <member name="M:Azure.Core.Pipeline.DiagnosticScope.SetTraceContext(System.String,System.String)">
            <summary>
            Sets the trace context for the current scope.
            </summary>
            <param name="traceparent">The trace parent to set for the current scope.</param>
            <param name="tracestate">The trace state to set for the current scope.</param>
        </member>
        <member name="M:Azure.Core.Pipeline.DiagnosticScope.Failed(System.Exception)">
            <summary>
            Marks the scope as failed.
            </summary>
            <param name="exception">The exception to associate with the failed scope.</param>
        </member>
        <member name="M:Azure.Core.Pipeline.DiagnosticScope.Failed(System.String)">
            <summary>
            Marks the scope as failed with low-cardinality error.type attribute.
            </summary>
            <param name="errorCode">Error code to associate with the failed scope.</param>
        </member>
        <member name="T:Azure.Core.Pipeline.ActivityExtensions">
            <summary>
            Until Activity Source is no longer considered experimental.
            </summary>
        </member>
        <member name="M:Azure.Core.Pipeline.DiagnosticScopeFactory.#ctor(System.String,System.String,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Creates diagnostic scope factory.
            </summary>
            <param name="clientNamespace">The namespace which is used as a prefix for all ActivitySources created by the factory and the name of DiagnosticSource (when used).</param>
            <param name="resourceProviderNamespace">Azure resource provider namespace.</param>
            <param name="isActivityEnabled">Flag indicating if distributed tracing is enabled.</param>
            <param name="suppressNestedClientActivities">Flag indicating if nested Azure SDK activities describing public API calls should be suppressed.</param>
            <param name="isStable">Whether instrumentation is considered stable. When false, experimental feature flag controls if tracing is enabled.</param>
        </member>
        <member name="T:Azure.Core.Pipeline.TaskExtensions.Enumerable`1">
            <summary>
            Both <see cref="T:Azure.Core.Pipeline.TaskExtensions.Enumerable`1" /> and <see cref="T:Azure.Core.Pipeline.TaskExtensions.Enumerator`1" /> are defined as public structs so that foreach can use duck typing
            to call <see cref="M:Azure.Core.Pipeline.TaskExtensions.Enumerable`1.GetEnumerator" /> and avoid heap memory allocation.
            Please don't delete this method and don't make these types private.
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="T:Azure.Core.FixedDelayWithNoJitterStrategy">
            <summary>
            A delay strategy that uses a fixed delay with no jitter applied. This is used by data plane LROs.
            </summary>
        </member>
        <member name="T:Azure.Core.OperationInternal">
            <summary>
            A helper class used to build long-running operation instances. In order to use this helper:
            <list type="number">
              <item>Make sure your LRO implements the <see cref="T:Azure.Core.IOperation" /> interface.</item>
              <item>Add a private <see cref="T:Azure.Core.OperationInternal" /> field to your LRO, and instantiate it during construction.</item>
              <item>Delegate method calls to the <see cref="T:Azure.Core.OperationInternal" /> implementations.</item>
            </list>
            Supported members:
            <list type="bullet">
              <item>
                <description><see cref="P:Azure.Core.OperationInternalBase.HasCompleted" /></description>
              </item>
              <item>
                <description><see cref="P:Azure.Core.OperationInternalBase.RawResponse" />, used for <see cref="M:Azure.Operation.GetRawResponse" /></description>
              </item>
              <item>
                <description><see cref="M:Azure.Core.OperationInternalBase.UpdateStatus(System.Threading.CancellationToken)" /></description>
              </item>
              <item>
                <description><see cref="M:Azure.Core.OperationInternalBase.UpdateStatusAsync(System.Threading.CancellationToken)" /></description>
              </item>
              <item>
                <description><see cref="M:Azure.Core.OperationInternalBase.WaitForCompletionResponseAsync(System.Threading.CancellationToken)" /></description>
              </item>
              <item>
                <description><see cref="M:Azure.Core.OperationInternalBase.WaitForCompletionResponseAsync(System.TimeSpan,System.Threading.CancellationToken)" /></description>
              </item>
            </list>
            </summary>
        </member>
        <member name="M:Azure.Core.OperationInternal.Succeeded(Azure.Response)">
            <summary>
            Initializes a new instance of the <see cref="T:Azure.Core.OperationInternal" /> class in a final successful state.
            </summary>
            <param name="rawResponse">The final value of <see cref="P:Azure.Core.OperationInternalBase.RawResponse" />.</param>
        </member>
        <member name="M:Azure.Core.OperationInternal.Failed(Azure.Response,Azure.RequestFailedException)">
            <summary>
            Initializes a new instance of the <see cref="T:Azure.Core.OperationInternal" /> class in a final failed state.
            </summary>
            <param name="rawResponse">The final value of <see cref="P:Azure.Core.OperationInternalBase.RawResponse" />.</param>
            <param name="operationFailedException">The exception that will be thrown by <c>UpdateStatusAsync</c>.</param>
        </member>
        <member name="M:Azure.Core.OperationInternal.#ctor(Azure.Core.IOperation,Azure.Core.Pipeline.ClientDiagnostics,Azure.Response,System.String,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.String}},Azure.Core.DelayStrategy)">
            <summary>
            Initializes a new instance of the <see cref="T:Azure.Core.OperationInternal" /> class.
            </summary>
            <param name="operation">The long-running operation making use of this class. Passing "<c>this</c>" is expected.</param>
            <param name="clientDiagnostics">Used for diagnostic scope and exception creation. This is expected to be the instance created during the construction of your main client.</param>
            <param name="rawResponse">
                The initial value of <see cref="P:Azure.Core.OperationInternalBase.RawResponse" />. Usually, long-running operation objects can be instantiated in two ways:
                <list type="bullet">
                    <item>
                        When calling a client's "<c>Start&lt;OperationName&gt;</c>" method, a service call is made to start the operation, and an <see cref="T:Azure.Operation" /> instance is returned.
                        In this case, the response received from this service call can be passed here.
                    </item>
                    <item>
                        When a user instantiates an <see cref="T:Azure.Operation" /> directly using a public constructor, there's no previous service call. In this case, passing <c>null</c> is expected.
                    </item>
                </list>
            </param>
            <param name="operationTypeName">
                The type name of the long-running operation making use of this class. Used when creating diagnostic scopes. If left <c>null</c>, the type name will be inferred based on the
                parameter <paramref name="operation" />.
            </param>
            <param name="scopeAttributes">The attributes to use during diagnostic scope creation.</param>
            <param name="fallbackStrategy"> The delay strategy to use. Default is <see cref="T:Azure.Core.FixedDelayWithNoJitterStrategy" />.</param>
        </member>
        <member name="T:Azure.Core.IOperation">
            <summary>
            An interface used by <see cref="T:Azure.Core.OperationInternal" /> for making service calls and updating state. It's expected that
            your long-running operation classes implement this interface.
            </summary>
        </member>
        <member name="M:Azure.Core.IOperation.UpdateStateAsync(System.Boolean,System.Threading.CancellationToken)">
            <summary>
            Calls the service and updates the state of the long-running operation. Properties directly handled by the
            <see cref="T:Azure.Core.OperationInternal" /> class, such as <see cref="P:Azure.Core.OperationInternalBase.RawResponse" />
            don't need to be updated. Operation-specific properties, such as "<c>CreateOn</c>" or "<c>LastModified</c>",
            must be manually updated by the operation implementing this method.
            <example>Usage example:
            <code>
              async ValueTask&lt;OperationState&gt; IOperation.UpdateStateAsync(bool async, CancellationToken cancellationToken)<br />
              {<br />
                Response&lt;R&gt; response = async ? &lt;async service call&gt; : &lt;sync service call&gt;;<br />
                if (&lt;operation succeeded&gt;) return OperationState.Success(response.GetRawResponse(), &lt;parse response&gt;);<br />
                if (&lt;operation failed&gt;) return OperationState.Failure(response.GetRawResponse());<br />
                return OperationState.Pending(response.GetRawResponse());<br />
              }
            </code>
            </example>
            </summary>
            <param name="async"><c>true</c> if the call should be executed asynchronously. Otherwise, <c>false</c>.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> controlling the request lifetime.</param>
            <returns>
            A structure indicating the current operation state. The <see cref="T:Azure.Core.OperationState" /> structure must be instantiated by one of
            its static methods:
            <list type="bullet">
              <item>Use <see cref="M:Azure.Core.OperationState.Success(Azure.Response)" /> when the operation has completed successfully.</item>
              <item>Use <see cref="M:Azure.Core.OperationState.Failure(Azure.Response,Azure.RequestFailedException)" /> when the operation has completed with failures.</item>
              <item>Use <see cref="M:Azure.Core.OperationState.Pending(Azure.Response)" /> when the operation has not completed yet.</item>
            </list>
            </returns>
        </member>
        <member name="T:Azure.Core.OperationState">
            <summary>
            A helper structure passed to <see cref="T:Azure.Core.OperationInternal" /> to indicate the current operation state. This structure must be
            instantiated by one of its static methods, depending on the operation state:
            <list type="bullet">
              <item>Use <see cref="M:Azure.Core.OperationState.Success(Azure.Response)" /> when the operation has completed successfully.</item>
              <item>Use <see cref="M:Azure.Core.OperationState.Failure(Azure.Response,Azure.RequestFailedException)" /> when the operation has completed with failures.</item>
              <item>Use <see cref="M:Azure.Core.OperationState.Pending(Azure.Response)" /> when the operation has not completed yet.</item>
            </list>
            </summary>
        </member>
        <member name="M:Azure.Core.OperationState.Success(Azure.Response)">
            <summary>
            Instantiates an <see cref="T:Azure.Core.OperationState" /> indicating the operation has completed successfully.
            </summary>
            <param name="rawResponse">The HTTP response obtained during the status update.</param>
            <returns>A new <see cref="T:Azure.Core.OperationState" /> instance.</returns>
            <exception cref="T:System.ArgumentNullException">Thrown if <paramref name="rawResponse" /> is <c>null</c>.</exception>
        </member>
        <member name="M:Azure.Core.OperationState.Failure(Azure.Response,Azure.RequestFailedException)">
            <summary>
            Instantiates an <see cref="T:Azure.Core.OperationState" /> indicating the operation has completed with failures.
            </summary>
            <param name="rawResponse">The HTTP response obtained during the status update.</param>
            <param name="operationFailedException">
            The exception to throw from <c>UpdateStatus</c> because of the operation failure. If left <c>null</c>,
            a default exception is created based on the <paramref name="rawResponse" /> parameter.
            </param>
            <returns>A new <see cref="T:Azure.Core.OperationState" /> instance.</returns>
            <exception cref="T:System.ArgumentNullException">Thrown if <paramref name="rawResponse" /> is <c>null</c>.</exception>
        </member>
        <member name="M:Azure.Core.OperationState.Pending(Azure.Response)">
            <summary>
            Instantiates an <see cref="T:Azure.Core.OperationState" /> indicating the operation has not completed yet.
            </summary>
            <param name="rawResponse">The HTTP response obtained during the status update.</param>
            <returns>A new <see cref="T:Azure.Core.OperationState" /> instance.</returns>
            <exception cref="T:System.ArgumentNullException">Thrown if <paramref name="rawResponse" /> is <c>null</c>.</exception>
        </member>
        <member name="P:Azure.Core.OperationInternalBase.RawResponse">
            <summary>
            The last HTTP response received from the server. Its update already handled in calls to "<c>UpdateStatus</c>" and
            "<c>WaitForCompletionAsync</c>", but custom methods not supported by this class, such as "<c>CancelOperation</c>",
            must update it as well.
            <example>Usage example:
            <code>
              public Response GetRawResponse() =&gt; _operationInternal.RawResponse;
            </code>
            </example>
            </summary>
        </member>
        <member name="P:Azure.Core.OperationInternalBase.HasCompleted">
            <summary>
            Returns <c>true</c> if the long-running operation has completed.
            <example>Usage example:
            <code>
              public bool HasCompleted =&gt; _operationInternal.HasCompleted;
            </code>
            </example>
            </summary>
        </member>
        <member name="M:Azure.Core.OperationInternalBase.UpdateStatusAsync(System.Threading.CancellationToken)">
            <summary>
            Calls the server to get the latest status of the long-running operation, handling diagnostic scope creation for distributed
            tracing. The default scope name can be changed with the "<c>operationTypeName</c>" parameter passed to the constructor.
            <example>Usage example:
            <code>
              public async ValueTask&lt;Response&gt; UpdateStatusAsync(CancellationToken cancellationToken) =&gt;
                await _operationInternal.UpdateStatusAsync(cancellationToken).ConfigureAwait(false);
            </code>
            </example>
            </summary>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> controlling the request lifetime.</param>
            <returns>The HTTP response received from the server.</returns>
            <remarks>
            After a successful run, this method will update <see cref="P:Azure.Core.OperationInternalBase.RawResponse" /> and might update <see cref="P:Azure.Core.OperationInternalBase.HasCompleted" />.
            </remarks>
            <exception cref="T:Azure.RequestFailedException">Thrown if there's been any issues during the connection, or if the operation has completed with failures.</exception>
        </member>
        <member name="M:Azure.Core.OperationInternalBase.UpdateStatus(System.Threading.CancellationToken)">
            <summary>
            Calls the server to get the latest status of the long-running operation, handling diagnostic scope creation for distributed
            tracing. The default scope name can be changed with the "<c>operationTypeName</c>" parameter passed to the constructor.
            <example>Usage example:
            <code>
              public Response UpdateStatus(CancellationToken cancellationToken) =&gt; _operationInternal.UpdateStatus(cancellationToken);
            </code>
            </example>
            </summary>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> controlling the request lifetime.</param>
            <returns>The HTTP response received from the server.</returns>
            <remarks>
            After a successful run, this method will update <see cref="P:Azure.Core.OperationInternalBase.RawResponse" /> and might update <see cref="P:Azure.Core.OperationInternalBase.HasCompleted" />.
            </remarks>
            <exception cref="T:Azure.RequestFailedException">Thrown if there's been any issues during the connection, or if the operation has completed with failures.</exception>
        </member>
        <member name="M:Azure.Core.OperationInternalBase.WaitForCompletionResponseAsync(System.Threading.CancellationToken)">
            <summary>
            Periodically calls <see cref="M:Azure.Core.OperationInternalBase.UpdateStatusAsync(System.Threading.CancellationToken)" /> until the long-running operation completes.
            After each service call, a retry-after header may be returned to communicate that there is no reason to poll
            for status change until the specified time has passed.  The maximum of the retry after value and the fallback strategy
            is then used as the wait interval.
            Headers supported are: "Retry-After", "retry-after-ms", and "x-ms-retry-after-ms",
            <example>Usage example:
            <code>
              public async ValueTask&lt;Response&lt;T&gt;&gt; WaitForCompletionAsync(CancellationToken cancellationToken) =&gt;
                await _operationInternal.WaitForCompletionAsync(cancellationToken).ConfigureAwait(false);
            </code>
            </example>
            </summary>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> controlling the request lifetime.</param>
            <returns>The last HTTP response received from the server, including the final result of the long-running operation.</returns>
            <exception cref="T:Azure.RequestFailedException">Thrown if there's been any issues during the connection, or if the operation has completed with failures.</exception>
        </member>
        <member name="M:Azure.Core.OperationInternalBase.WaitForCompletionResponseAsync(System.TimeSpan,System.Threading.CancellationToken)">
            <summary>
            Periodically calls <see cref="M:Azure.Core.OperationInternalBase.UpdateStatusAsync(System.Threading.CancellationToken)" /> until the long-running operation completes. The interval
            between calls is defined by the parameter <paramref name="pollingInterval" />, but it can change based on information returned
            from the server. After each service call, a retry-after header may be returned to communicate that there is no reason to poll
            for status change until the specified time has passed. In this case, the maximum value between the <paramref name="pollingInterval" />
            parameter and the retry-after header is chosen as the wait interval. Headers supported are: "Retry-After", "retry-after-ms",
            and "x-ms-retry-after-ms".
            <example>Usage example:
            <code>
              public async ValueTask&lt;Response&lt;T&gt;&gt; WaitForCompletionAsync(TimeSpan pollingInterval, CancellationToken cancellationToken) =&gt;
                await _operationInternal.WaitForCompletionAsync(pollingInterval, cancellationToken).ConfigureAwait(false);
            </code>
            </example>
            </summary>
            <param name="pollingInterval">The interval between status requests to the server. <strong></strong></param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> controlling the request lifetime.</param>
            <returns>The last HTTP response received from the server, including the final result of the long-running operation.</returns>
            <exception cref="T:Azure.RequestFailedException">Thrown if there's been any issues during the connection, or if the operation has completed with failures.</exception>
        </member>
        <member name="M:Azure.Core.OperationInternalBase.WaitForCompletionResponse(System.Threading.CancellationToken)">
            <summary>
            Periodically calls <see cref="M:Azure.Core.OperationInternalBase.UpdateStatus(System.Threading.CancellationToken)" /> until the long-running operation completes.
            After each service call, a retry-after header may be returned to communicate that there is no reason to poll
            for status change until the specified time has passed.  The maximum of the retry after value and the fallback strategy
            is then used as the wait interval.
            Headers supported are: "Retry-After", "retry-after-ms", and "x-ms-retry-after-ms",
            and "x-ms-retry-after-ms".
            <example>Usage example:
            <code>
              public async ValueTask&lt;Response&lt;T&gt;&gt; WaitForCompletionAsync(TimeSpan pollingInterval, CancellationToken cancellationToken) =&gt;
                await _operationInternal.WaitForCompletionAsync(pollingInterval, cancellationToken).ConfigureAwait(false);
            </code>
            </example>
            </summary>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> controlling the request lifetime.</param>
            <returns>The last HTTP response received from the server, including the final result of the long-running operation.</returns>
            <exception cref="T:Azure.RequestFailedException">Thrown if there's been any issues during the connection, or if the operation has completed with failures.</exception>
        </member>
        <member name="M:Azure.Core.OperationInternalBase.WaitForCompletionResponse(System.TimeSpan,System.Threading.CancellationToken)">
            <summary>
            Periodically calls <see cref="M:Azure.Core.OperationInternalBase.UpdateStatus(System.Threading.CancellationToken)" /> until the long-running operation completes. The interval
            between calls is defined by the parameter <paramref name="pollingInterval" />, but it can change based on information returned
            from the server. After each service call, a retry-after header may be returned to communicate that there is no reason to poll
            for status change until the specified time has passed. In this case, the maximum value between the <paramref name="pollingInterval" />
            parameter and the retry-after header is chosen as the wait interval. Headers supported are: "Retry-After", "retry-after-ms",
            and "x-ms-retry-after-ms".
            <example>Usage example:
            <code>
              public async ValueTask&lt;Response&lt;T&gt;&gt; WaitForCompletionAsync(TimeSpan pollingInterval, CancellationToken cancellationToken) =&gt;
                await _operationInternal.WaitForCompletionAsync(pollingInterval, cancellationToken).ConfigureAwait(false);
            </code>
            </example>
            </summary>
            <param name="pollingInterval">The interval between status requests to the server.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> controlling the request lifetime.</param>
            <returns>The last HTTP response received from the server, including the final result of the long-running operation.</returns>
            <exception cref="T:Azure.RequestFailedException">Thrown if there's been any issues during the connection, or if the operation has completed with failures.</exception>
        </member>
        <member name="T:Azure.Core.OperationInternal`1">
            <summary>
            A helper class used to build long-running operation instances. In order to use this helper:
            <list type="number">
              <item>Make sure your LRO implements the <see cref="T:Azure.Core.IOperation`1" /> interface.</item>
              <item>Add a private <see cref="T:Azure.Core.OperationInternal`1" /> field to your LRO, and instantiate it during construction.</item>
              <item>Delegate method calls to the <see cref="T:Azure.Core.OperationInternal`1" /> implementations.</item>
            </list>
            Supported members:
            <list type="bullet">
              <item>
                <description><see cref="P:Azure.Core.OperationInternal`1.HasValue" /></description>
              </item>
              <item>
                <description><see cref="P:Azure.Core.OperationInternalBase.HasCompleted" /></description>
              </item>
              <item>
                <description><see cref="P:Azure.Core.OperationInternal`1.Value" /></description>
              </item>
              <item>
                <description><see cref="P:Azure.Core.OperationInternalBase.RawResponse" />, used for <see cref="M:Azure.Operation.GetRawResponse" /></description>
              </item>
              <item>
                <description><see cref="M:Azure.Core.OperationInternalBase.UpdateStatus(System.Threading.CancellationToken)" /></description>
              </item>
              <item>
                <description><see cref="M:Azure.Core.OperationInternalBase.UpdateStatusAsync(System.Threading.CancellationToken)" /></description>
              </item>
              <item>
                <description><see cref="M:Azure.Core.OperationInternal`1.WaitForCompletionAsync(System.Threading.CancellationToken)" /></description>
              </item>
              <item>
                <description><see cref="M:Azure.Core.OperationInternal`1.WaitForCompletionAsync(System.TimeSpan,System.Threading.CancellationToken)" /></description>
              </item>
            </list>
            </summary>
            <typeparam name="T">The final result of the long-running operation. Must match the type used in <see cref="T:Azure.Operation`1" />.</typeparam>
        </member>
        <member name="M:Azure.Core.OperationInternal`1.Succeeded(Azure.Response,`0)">
            <summary>
            Initializes a new instance of the <see cref="T:Azure.Core.OperationInternal" /> class in a final successful state.
            </summary>
            <param name="rawResponse">The final value of <see cref="P:Azure.Core.OperationInternalBase.RawResponse" />.</param>
            <param name="value">The final result of the long-running operation.</param>
        </member>
        <member name="M:Azure.Core.OperationInternal`1.Failed(Azure.Response,Azure.RequestFailedException)">
            <summary>
            Initializes a new instance of the <see cref="T:Azure.Core.OperationInternal" /> class in a final failed state.
            </summary>
            <param name="rawResponse">The final value of <see cref="P:Azure.Core.OperationInternalBase.RawResponse" />.</param>
            <param name="operationFailedException">The exception that will be thrown by <c>UpdateStatusAsync</c>.</param>
        </member>
        <member name="M:Azure.Core.OperationInternal`1.#ctor(Azure.Core.IOperation{`0},Azure.Core.Pipeline.ClientDiagnostics,Azure.Response,System.String,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.String}},Azure.Core.DelayStrategy)">
            <summary>
            Initializes a new instance of the <see cref="T:Azure.Core.OperationInternal`1" /> class.
            </summary>
            <param name="operation">The long-running operation making use of this class. Passing "<c>this</c>" is expected.</param>
            <param name="clientDiagnostics">Used for diagnostic scope and exception creation. This is expected to be the instance created during the construction of your main client.</param>
            <param name="rawResponse">
                The initial value of <see cref="P:Azure.Core.OperationInternalBase.RawResponse" />. Usually, long-running operation objects can be instantiated in two ways:
                <list type="bullet">
                    <item>
                        When calling a client's "<c>Start&lt;OperationName&gt;</c>" method, a service call is made to start the operation, and an <see cref="T:Azure.Operation`1" /> instance is returned.
                        In this case, the response received from this service call can be passed here.
                    </item>
                    <item>
                        When a user instantiates an <see cref="T:Azure.Operation`1" /> directly using a public constructor, there's no previous service call. In this case, passing <c>null</c> is expected.
                    </item>
                </list>
            </param>
            <param name="operationTypeName">
                The type name of the long-running operation making use of this class. Used when creating diagnostic scopes. If left <c>null</c>, the type name will be inferred based on the
                parameter <paramref name="operation" />.
            </param>
            <param name="scopeAttributes">The attributes to use during diagnostic scope creation.</param>
            <param name="fallbackStrategy">The delay strategy when Retry-After header is not present.  When it is present, the longer of the two delays will be used.
                Default is <see cref="T:Azure.Core.FixedDelayWithNoJitterStrategy" />.</param>
        </member>
        <member name="P:Azure.Core.OperationInternal`1.HasValue">
            <summary>
            Returns <c>true</c> if the long-running operation completed successfully and has produced a final result.
            <example>Usage example:
            <code>
              public bool HasValue =&gt; _operationInternal.HasValue;
            </code>
            </example>
            </summary>
        </member>
        <member name="P:Azure.Core.OperationInternal`1.Value">
            <summary>
            The final result of the long-running operation.
            <example>Usage example:
            <code>
              public T Value =&gt; _operationInternal.Value;
            </code>
            </example>
            </summary>
            <exception cref="T:System.InvalidOperationException">Thrown when the operation has not completed yet.</exception>
            <exception cref="T:Azure.RequestFailedException">Thrown when the operation has completed with failures.</exception>
        </member>
        <member name="M:Azure.Core.OperationInternal`1.WaitForCompletionAsync(System.Threading.CancellationToken)">
            <summary>
            Periodically calls <see cref="M:Azure.Core.OperationInternalBase.UpdateStatusAsync(System.Threading.CancellationToken)" /> until the long-running operation completes.
            After each service call, a retry-after header may be returned to communicate that there is no reason to poll
            for status change until the specified time has passed.
            Headers supported are: "Retry-After", "retry-after-ms", and "x-ms-retry-after-ms",
            <example>Usage example:
            <code>
              public async ValueTask&lt;Response&lt;T&gt;&gt; WaitForCompletionAsync(CancellationToken cancellationToken) =&gt;
                await _operationInternal.WaitForCompletionAsync(cancellationToken).ConfigureAwait(false);
            </code>
            </example>
            </summary>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> controlling the request lifetime.</param>
            <returns>The last HTTP response received from the server, including the final result of the long-running operation.</returns>
            <exception cref="T:Azure.RequestFailedException">Thrown if there's been any issues during the connection, or if the operation has completed with failures.</exception>
        </member>
        <member name="M:Azure.Core.OperationInternal`1.WaitForCompletionAsync(System.TimeSpan,System.Threading.CancellationToken)">
            <summary>
            Periodically calls <see cref="M:Azure.Core.OperationInternalBase.UpdateStatusAsync(System.Threading.CancellationToken)" /> until the long-running operation completes. The interval
            between calls is defined by the parameter <paramref name="pollingInterval" />, but it can change based on information returned
            from the server. After each service call, a retry-after header may be returned to communicate that there is no reason to poll
            for status change until the specified time has passed. In this case, the maximum value between the <paramref name="pollingInterval" />
            parameter and the retry-after header is chosen as the wait interval. Headers supported are: "Retry-After", "retry-after-ms",
            and "x-ms-retry-after-ms".
            <example>Usage example:
            <code>
              public async ValueTask&lt;Response&lt;T&gt;&gt; WaitForCompletionAsync(TimeSpan pollingInterval, CancellationToken cancellationToken) =&gt;
                await _operationInternal.WaitForCompletionAsync(pollingInterval, cancellationToken).ConfigureAwait(false);
            </code>
            </example>
            </summary>
            <param name="pollingInterval">The interval between status requests to the server.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> controlling the request lifetime.</param>
            <returns>The last HTTP response received from the server, including the final result of the long-running operation.</returns>
            <exception cref="T:Azure.RequestFailedException">Thrown if there's been any issues during the connection, or if the operation has completed with failures.</exception>
        </member>
        <member name="M:Azure.Core.OperationInternal`1.WaitForCompletion(System.Threading.CancellationToken)">
            <summary>
            Periodically calls <see cref="M:Azure.Core.OperationInternalBase.UpdateStatus(System.Threading.CancellationToken)" /> until the long-running operation completes.
            After each service call, a retry-after header may be returned to communicate that there is no reason to poll
            for status change until the specified time has passed.
            Headers supported are: "Retry-After", "retry-after-ms", and "x-ms-retry-after-ms",
            <example>Usage example:
            <code>
              public async ValueTask&lt;Response&lt;T&gt;&gt; WaitForCompletionAsync(CancellationToken cancellationToken) =&gt;
                await _operationInternal.WaitForCompletionAsync(cancellationToken).ConfigureAwait(false);
            </code>
            </example>
            </summary>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> controlling the request lifetime.</param>
            <returns>The last HTTP response received from the server, including the final result of the long-running operation.</returns>
            <exception cref="T:Azure.RequestFailedException">Thrown if there's been any issues during the connection, or if the operation has completed with failures.</exception>
        </member>
        <member name="M:Azure.Core.OperationInternal`1.WaitForCompletion(System.TimeSpan,System.Threading.CancellationToken)">
            <summary>
            Periodically calls <see cref="M:Azure.Core.OperationInternalBase.UpdateStatus(System.Threading.CancellationToken)" /> until the long-running operation completes. The interval
            between calls is defined by the <see cref="T:Azure.Core.FixedDelayWithNoJitterStrategy" />, which takes into account any retry-after header that is returned
            from the server.
            <example>Usage example:
            <code>
              public async ValueTask&lt;Response&lt;T&gt;&gt; WaitForCompletionAsync(CancellationToken cancellationToken) =&gt;
                await _operationInternal.WaitForCompletionAsync(cancellationToken).ConfigureAwait(false);
            </code>
            </example>
            </summary>
            <param name="pollingInterval">The interval between status requests to the server.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> controlling the request lifetime.</param>
            <returns>The last HTTP response received from the server, including the final result of the long-running operation.</returns>
            <exception cref="T:Azure.RequestFailedException">Thrown if there's been any issues during the connection, or if the operation has completed with failures.</exception>
        </member>
        <member name="T:Azure.Core.IOperation`1">
            <summary>
            An interface used by <see cref="T:Azure.Core.OperationInternal`1" /> for making service calls and updating state. It's expected that
            your long-running operation classes implement this interface.
            </summary>
            <typeparam name="T">The final result of the long-running operation. Must match the type used in <see cref="T:Azure.Operation`1" />.</typeparam>
        </member>
        <member name="M:Azure.Core.IOperation`1.UpdateStateAsync(System.Boolean,System.Threading.CancellationToken)">
            <summary>
            Calls the service and updates the state of the long-running operation. Properties directly handled by the
            <see cref="T:Azure.Core.OperationInternal`1" /> class, such as <see cref="P:Azure.Core.OperationInternalBase.RawResponse" /> or
            <see cref="P:Azure.Core.OperationInternal`1.Value" />, don't need to be updated. Operation-specific properties, such
            as "<c>CreateOn</c>" or "<c>LastModified</c>", must be manually updated by the operation implementing this
            method.
            <example>Usage example:
            <code>
              async ValueTask&lt;OperationState&lt;T&gt;&gt; IOperation&lt;T&gt;.UpdateStateAsync(bool async, CancellationToken cancellationToken)<br />
              {<br />
                Response&lt;R&gt; response = async ? &lt;async service call&gt; : &lt;sync service call&gt;;<br />
                if (&lt;operation succeeded&gt;) return OperationState&lt;T&gt;.Success(response.GetRawResponse(), &lt;parse response&gt;);<br />
                if (&lt;operation failed&gt;) return OperationState&lt;T&gt;.Failure(response.GetRawResponse());<br />
                return OperationState&lt;T&gt;.Pending(response.GetRawResponse());<br />
              }
            </code>
            </example>
            </summary>
            <param name="async"><c>true</c> if the call should be executed asynchronously. Otherwise, <c>false</c>.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> controlling the request lifetime.</param>
            <returns>
            A structure indicating the current operation state. The <see cref="T:Azure.Core.OperationState`1" /> structure must be instantiated by one of
            its static methods:
            <list type="bullet">
              <item>Use <see cref="M:Azure.Core.OperationState`1.Success(Azure.Response,`0)" /> when the operation has completed successfully.</item>
              <item>Use <see cref="M:Azure.Core.OperationState`1.Failure(Azure.Response,Azure.RequestFailedException)" /> when the operation has completed with failures.</item>
              <item>Use <see cref="M:Azure.Core.OperationState`1.Pending(Azure.Response)" /> when the operation has not completed yet.</item>
            </list>
            </returns>
        </member>
        <member name="T:Azure.Core.OperationState`1">
            <summary>
            A helper structure passed to <see cref="T:Azure.Core.OperationInternal`1" /> to indicate the current operation state. This structure must be
            instantiated by one of its static methods, depending on the operation state:
            <list type="bullet">
              <item>Use <see cref="M:Azure.Core.OperationState`1.Success(Azure.Response,`0)" /> when the operation has completed successfully.</item>
              <item>Use <see cref="M:Azure.Core.OperationState`1.Failure(Azure.Response,Azure.RequestFailedException)" /> when the operation has completed with failures.</item>
              <item>Use <see cref="M:Azure.Core.OperationState`1.Pending(Azure.Response)" /> when the operation has not completed yet.</item>
            </list>
            </summary>
            <typeparam name="T">The final result of the long-running operation. Must match the type used in <see cref="T:Azure.Operation`1" />.</typeparam>
        </member>
        <member name="M:Azure.Core.OperationState`1.Success(Azure.Response,`0)">
            <summary>
            Instantiates an <see cref="T:Azure.Core.OperationState`1" /> indicating the operation has completed successfully.
            </summary>
            <param name="rawResponse">The HTTP response obtained during the status update.</param>
            <param name="value">The final result of the long-running operation.</param>
            <returns>A new <see cref="T:Azure.Core.OperationState`1" /> instance.</returns>
            <exception cref="T:System.ArgumentNullException">Thrown if <paramref name="rawResponse" /> or <paramref name="value" /> is <c>null</c>.</exception>
        </member>
        <member name="M:Azure.Core.OperationState`1.Failure(Azure.Response,Azure.RequestFailedException)">
            <summary>
            Instantiates an <see cref="T:Azure.Core.OperationState`1" /> indicating the operation has completed with failures.
            </summary>
            <param name="rawResponse">The HTTP response obtained during the status update.</param>
            <param name="operationFailedException">
            The exception to throw from <c>UpdateStatus</c> because of the operation failure. The same exception will be thrown when
            <see cref="P:Azure.Core.OperationInternal`1.Value" /> is called. If left <c>null</c>, a default exception is created based on the
            <paramref name="rawResponse" /> parameter.
            </param>
            <returns>A new <see cref="T:Azure.Core.OperationState`1" /> instance.</returns>
            <exception cref="T:System.ArgumentNullException">Thrown if <paramref name="rawResponse" /> is <c>null</c>.</exception>
        </member>
        <member name="M:Azure.Core.OperationState`1.Pending(Azure.Response)">
            <summary>
            Instantiates an <see cref="T:Azure.Core.OperationState`1" /> indicating the operation has not completed yet.
            </summary>
            <param name="rawResponse">The HTTP response obtained during the status update.</param>
            <returns>A new <see cref="T:Azure.Core.OperationState`1" /> instance.</returns>
            <exception cref="T:System.ArgumentNullException">Thrown if <paramref name="rawResponse" /> is <c>null</c>.</exception>
        </member>
        <member name="T:Azure.Core.OperationPoller">
            <summary>
            Implementation of LRO polling logic.
            </summary>
        </member>
        <member name="P:Azure.Core.ProtocolOperation`1.Id">
            <summary>
            Gets an ID representing the operation that can be used to poll for
            the status of the long-running operation.
            There are cases that operation id is not available, we return "NOT_SET" for unavailable operation id.
            </summary>
        </member>
        <member name="P:Azure.Core.ProtocolOperation`1.Value">
            <summary>
            Final result of the long-running operation.
            </summary><remarks>
            This property can be accessed only after the operation completes successfully (HasValue is true).
            </remarks>
        </member>
        <member name="P:Azure.Core.ProtocolOperation`1.HasCompleted">
            <summary>
            Returns true if the long-running operation completed.
            </summary>
        </member>
        <member name="P:Azure.Core.ProtocolOperation`1.HasValue">
            <summary>
            Returns true if the long-running operation completed successfully and has produced final result (accessible by Value property).
            </summary>
        </member>
        <member name="M:Azure.Core.ProtocolOperation`1.GetRawResponse">
            <summary>
            The last HTTP response received from the server.
            </summary><remarks>
            The last response returned from the server during the lifecycle of this instance.
            An instance of <see cref="T:Azure.Operation`1" /> sends requests to a server in UpdateStatusAsync, UpdateStatus, and other methods.
            Responses from these requests can be accessed using GetRawResponse.
            </remarks>
        </member>
        <member name="M:Azure.Core.ProtocolOperation`1.UpdateStatus(System.Threading.CancellationToken)">
            <summary>
            Calls the server to get updated status of the long-running operation.
            </summary><param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> used for the service call.</param><returns>The HTTP response received from the server.</returns><remarks>
            This operation will update the value returned from GetRawResponse and might update HasCompleted.
            </remarks>
        </member>
        <member name="M:Azure.Core.ProtocolOperation`1.UpdateStatusAsync(System.Threading.CancellationToken)">
            <summary>
            Calls the server to get updated status of the long-running operation.
            </summary><param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> used for the service call.</param><returns>The HTTP response received from the server.</returns><remarks>
            This operation will update the value returned from GetRawResponse and might update HasCompleted.
            </remarks>
        </member>
        <member name="M:Azure.Core.ProtocolOperation`1.WaitForCompletionAsync(System.Threading.CancellationToken)">
            <summary>
            Periodically calls the server till the long-running operation completes.
            </summary><param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> used for the periodical service calls.</param><returns>The last HTTP response received from the server.</returns><remarks>
            This method will periodically call UpdateStatusAsync till HasCompleted is true, then return the final result of the operation.
            </remarks>
        </member>
        <member name="M:Azure.Core.ProtocolOperation`1.WaitForCompletionAsync(System.TimeSpan,System.Threading.CancellationToken)">
            <summary>
            Periodically calls the server till the long-running operation completes.
            </summary><param name="pollingInterval">
            The interval between status requests to the server.
            The interval can change based on information returned from the server.
            For example, the server might communicate to the client that there is not reason to poll for status change sooner than some time.
            </param><param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> used for the periodical service calls.</param><returns>The last HTTP response received from the server.</returns><remarks>
            This method will periodically call UpdateStatusAsync till HasCompleted is true, then return the final result of the operation.
            </remarks>
        </member>
        <member name="T:Azure.Core.SequentialDelayStrategy">
            <summary>
            A delay strategy that uses a fixed sequence of delays with no jitter applied. This is used by management LROs.
            </summary>
        </member>
        <member name="T:Azure.Core.ArrayBufferWriter`1">
            <summary>
            Represents a heap-based, array-backed output sink into which <typeparam name="T" /> data can be written.
            </summary>
        </member>
        <member name="M:Azure.Core.ArrayBufferWriter`1.#ctor">
            <summary>
            Creates an instance of an <see cref="T:Azure.Core.ArrayBufferWriter`1" />, in which data can be written to,
            with the default initial capacity.
            </summary>
        </member>
        <member name="M:Azure.Core.ArrayBufferWriter`1.#ctor(System.Int32)">
            <summary>
            Creates an instance of an <see cref="T:Azure.Core.ArrayBufferWriter`1" />, in which data can be written to,
            with an initial capacity specified.
            </summary>
            <param name="initialCapacity">The minimum capacity with which to initialize the underlying buffer.</param>
            <exception cref="T:System.ArgumentException">
            Thrown when <paramref name="initialCapacity" /> is not positive (i.e. less than or equal to 0).
            </exception>
        </member>
        <member name="P:Azure.Core.ArrayBufferWriter`1.WrittenMemory">
            <summary>
            Returns the data written to the underlying buffer so far, as a <see cref="T:System.ReadOnlyMemory`1" />.
            </summary>
        </member>
        <member name="P:Azure.Core.ArrayBufferWriter`1.WrittenSpan">
            <summary>
            Returns the data written to the underlying buffer so far, as a <see cref="T:System.ReadOnlySpan`1" />.
            </summary>
        </member>
        <member name="P:Azure.Core.ArrayBufferWriter`1.WrittenCount">
            <summary>
            Returns the amount of data written to the underlying buffer so far.
            </summary>
        </member>
        <member name="P:Azure.Core.ArrayBufferWriter`1.Capacity">
            <summary>
            Returns the total amount of space within the underlying buffer.
            </summary>
        </member>
        <member name="P:Azure.Core.ArrayBufferWriter`1.FreeCapacity">
            <summary>
            Returns the amount of space available that can still be written into without forcing the underlying buffer to grow.
            </summary>
        </member>
        <member name="M:Azure.Core.ArrayBufferWriter`1.Clear">
            <summary>
            Clears the data written to the underlying buffer.
            </summary>
            <remarks>
            You must clear the <see cref="T:Azure.Core.ArrayBufferWriter`1" /> before trying to re-use it.
            </remarks>
        </member>
        <member name="M:Azure.Core.ArrayBufferWriter`1.Advance(System.Int32)">
            <summary>
            Notifies <see cref="T:System.Buffers.IBufferWriter`1" /> that <paramref name="count" /> amount of data was written to the output <see cref="T:System.Span`1" />/<see cref="T:System.Memory`1" />.
            </summary>
            <exception cref="T:System.ArgumentException">
            Thrown when <paramref name="count" /> is negative.
            </exception>
            <exception cref="T:System.InvalidOperationException">
            Thrown when attempting to advance past the end of the underlying buffer.
            </exception>
            <remarks>
            You must request a new buffer after calling Advance to continue writing more data and cannot write to a previously acquired buffer.
            </remarks>
        </member>
        <member name="M:Azure.Core.ArrayBufferWriter`1.GetMemory(System.Int32)">
            <summary>
            Returns a <see cref="T:System.Memory`1" /> to write to that is at least the requested length (specified by <paramref name="sizeHint" />).
            If no <paramref name="sizeHint" /> is provided (or it's equal to <code>0</code>), some non-empty buffer is returned.
            </summary>
            <exception cref="T:System.ArgumentException">
            Thrown when <paramref name="sizeHint" /> is negative.
            </exception>
            <remarks>
            This will never return an empty <see cref="T:System.Memory`1" />.
            </remarks>
            <remarks>
            There is no guarantee that successive calls will return the same buffer or the same-sized buffer.
            </remarks>
            <remarks>
            You must request a new buffer after calling Advance to continue writing more data and cannot write to a previously acquired buffer.
            </remarks>
        </member>
        <member name="M:Azure.Core.ArrayBufferWriter`1.GetSpan(System.Int32)">
            <summary>
            Returns a <see cref="T:System.Span`1" /> to write to that is at least the requested length (specified by <paramref name="sizeHint" />).
            If no <paramref name="sizeHint" /> is provided (or it's equal to <code>0</code>), some non-empty buffer is returned.
            </summary>
            <exception cref="T:System.ArgumentException">
            Thrown when <paramref name="sizeHint" /> is negative.
            </exception>
            <remarks>
            This will never return an empty <see cref="T:System.Span`1" />.
            </remarks>
            <remarks>
            There is no guarantee that successive calls will return the same buffer or the same-sized buffer.
            </remarks>
            <remarks>
            You must request a new buffer after calling Advance to continue writing more data and cannot write to a previously acquired buffer.
            </remarks>
        </member>
        <member name="T:Azure.Core.AzureResourceProviderNamespaceAttribute">
            <summary>
            This attribute should be set on all client assemblies with value of one of the resource providers
            from the https://docs.microsoft.com/azure/azure-resource-manager/management/azure-services-resource-providers list.
            </summary>
        </member>
        <member name="T:Azure.Core.ForwardsClientCallsAttribute">
            <summary>
            Marks methods that call methods on other client and don't need their diagnostics verified.
            </summary>
        </member>
        <member name="M:Azure.Core.ForwardsClientCallsAttribute.#ctor">
            <summary>
            Creates a new instance of <see cref="T:Azure.Core.ForwardsClientCallsAttribute" />.
            </summary>
        </member>
        <member name="M:Azure.Core.ForwardsClientCallsAttribute.#ctor(System.Boolean)">
            <summary>
            Creates a new instance of <see cref="T:Azure.Core.ForwardsClientCallsAttribute" />.
            </summary>
            <param name="skipChecks"> Sets whether or not diagnostic scope validation should happen. </param>
        </member>
        <member name="P:Azure.Core.ForwardsClientCallsAttribute.SkipChecks">
            <summary>
            Gets whether or not we should validate DiagnosticScope for this API.
            In the case where there is an internal API that makes the Azure API call and a public API that uses it we need ForwardsClientCalls.
            If the public API will cache the results then the diagnostic scope will not always be created because an Azure API is not always called.
            In this case we need to turn off this validation for this API only.
            </summary>
        </member>
        <member name="P:Azure.NoValueResponse`1.HasValue">
            <summary>
            Gets a value indicating whether the current instance has a valid value of its underlying type.
            </summary>
        </member>
        <member name="T:System.Diagnostics.CodeAnalysis.RequiresDynamicCodeAttribute">
            <summary>
            Indicates that the specified method requires the ability to generate new code at runtime,
            for example through <see cref="N:System.Reflection" />.
            </summary>
            <remarks>
            This allows tools to understand which methods are unsafe to call when compiling ahead of time.
            </remarks>
        </member>
        <member name="M:System.Diagnostics.CodeAnalysis.RequiresDynamicCodeAttribute.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:System.Diagnostics.CodeAnalysis.RequiresDynamicCodeAttribute" /> class
            with the specified message.
            </summary>
            <param name="message">
            A message that contains information about the usage of dynamic code.
            </param>
        </member>
        <member name="P:System.Diagnostics.CodeAnalysis.RequiresDynamicCodeAttribute.Message">
            <summary>
            Gets a message that contains information about the usage of dynamic code.
            </summary>
        </member>
        <member name="P:System.Diagnostics.CodeAnalysis.RequiresDynamicCodeAttribute.Url">
            <summary>
            Gets or sets an optional URL that contains more information about the method,
            why it requires dynamic code, and what options a consumer has to deal with it.
            </summary>
        </member>
        <member name="T:System.Diagnostics.CodeAnalysis.RequiresUnreferencedCodeAttribute">
            <summary>
            Indicates that the specified method requires dynamic access to code that is not referenced
            statically, for example through <see cref="N:System.Reflection" />.
            </summary>
            <remarks>
            This allows tools to understand which methods are unsafe to call when removing unreferenced
            code from an application.
            </remarks>
        </member>
        <member name="M:System.Diagnostics.CodeAnalysis.RequiresUnreferencedCodeAttribute.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:System.Diagnostics.CodeAnalysis.RequiresUnreferencedCodeAttribute" /> class
            with the specified message.
            </summary>
            <param name="message">
            A message that contains information about the usage of unreferenced code.
            </param>
        </member>
        <member name="P:System.Diagnostics.CodeAnalysis.RequiresUnreferencedCodeAttribute.Message">
            <summary>
            Gets a message that contains information about the usage of unreferenced code.
            </summary>
        </member>
        <member name="P:System.Diagnostics.CodeAnalysis.RequiresUnreferencedCodeAttribute.Url">
            <summary>
            Gets or sets an optional URL that contains more information about the method,
            why it requires unreferenced code, and what options a consumer has to deal with it.
            </summary>
        </member>
        <member name="T:System.Diagnostics.CodeAnalysis.UnconditionalSuppressMessageAttribute">
            <summary>
            Suppresses reporting of a specific rule violation, allowing multiple suppressions on a
            single code artifact.
            </summary>
            <remarks>
            <see cref="T:System.Diagnostics.CodeAnalysis.UnconditionalSuppressMessageAttribute" /> is different than
            <see cref="T:System.Diagnostics.CodeAnalysis.SuppressMessageAttribute" /> in that it doesn't have a
            <see cref="T:System.Diagnostics.ConditionalAttribute" />. So it is always preserved in the compiled assembly.
            </remarks>
        </member>
        <member name="M:System.Diagnostics.CodeAnalysis.UnconditionalSuppressMessageAttribute.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:System.Diagnostics.CodeAnalysis.UnconditionalSuppressMessageAttribute" />
            class, specifying the category of the tool and the identifier for an analysis rule.
            </summary>
            <param name="category">The category for the attribute.</param>
            <param name="checkId">The identifier of the analysis rule the attribute applies to.</param>
        </member>
        <member name="P:System.Diagnostics.CodeAnalysis.UnconditionalSuppressMessageAttribute.Category">
            <summary>
            Gets the category identifying the classification of the attribute.
            </summary>
            <remarks>
            The <see cref="P:System.Diagnostics.CodeAnalysis.UnconditionalSuppressMessageAttribute.Category" /> property describes the tool or tool analysis category
            for which a message suppression attribute applies.
            </remarks>
        </member>
        <member name="P:System.Diagnostics.CodeAnalysis.UnconditionalSuppressMessageAttribute.CheckId">
            <summary>
            Gets the identifier of the analysis tool rule to be suppressed.
            </summary>
            <remarks>
            Concatenated together, the <see cref="P:System.Diagnostics.CodeAnalysis.UnconditionalSuppressMessageAttribute.Category" /> and <see cref="P:System.Diagnostics.CodeAnalysis.UnconditionalSuppressMessageAttribute.CheckId" />
            properties form a unique check identifier.
            </remarks>
        </member>
        <member name="P:System.Diagnostics.CodeAnalysis.UnconditionalSuppressMessageAttribute.Scope">
            <summary>
            Gets or sets the scope of the code that is relevant for the attribute.
            </summary>
            <remarks>
            The Scope property is an optional argument that specifies the metadata scope for which
            the attribute is relevant.
            </remarks>
        </member>
        <member name="P:System.Diagnostics.CodeAnalysis.UnconditionalSuppressMessageAttribute.Target">
            <summary>
            Gets or sets a fully qualified path that represents the target of the attribute.
            </summary>
            <remarks>
            The <see cref="P:System.Diagnostics.CodeAnalysis.UnconditionalSuppressMessageAttribute.Target" /> property is an optional argument identifying the analysis target
            of the attribute. An example value is "System.IO.Stream.ctor():System.Void".
            Because it is fully qualified, it can be long, particularly for targets such as parameters.
            The analysis tool user interface should be capable of automatically formatting the parameter.
            </remarks>
        </member>
        <member name="P:System.Diagnostics.CodeAnalysis.UnconditionalSuppressMessageAttribute.MessageId">
            <summary>
            Gets or sets an optional argument expanding on exclusion criteria.
            </summary>
            <remarks>
            The <see cref="P:System.Diagnostics.CodeAnalysis.UnconditionalSuppressMessageAttribute.MessageId" /> property is an optional argument that specifies additional
            exclusion where the literal metadata target is not sufficiently precise. For example,
            the <see cref="T:System.Diagnostics.CodeAnalysis.UnconditionalSuppressMessageAttribute" /> cannot be applied within a method,
            and it may be desirable to suppress a violation against a statement in the method that will
            give a rule violation, but not against all statements in the method.
            </remarks>
        </member>
        <member name="P:System.Diagnostics.CodeAnalysis.UnconditionalSuppressMessageAttribute.Justification">
            <summary>
            Gets or sets the justification for suppressing the code analysis message.
            </summary>
        </member>
        <member name="T:System.Diagnostics.CodeAnalysis.DynamicDependencyAttribute">
            <summary>
            States a dependency that one member has on another.
            </summary>
            <remarks>
            This can be used to inform tooling of a dependency that is otherwise not evident purely from
            metadata and IL, for example a member relied on via reflection.
            </remarks>
        </member>
        <member name="M:System.Diagnostics.CodeAnalysis.DynamicDependencyAttribute.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:System.Diagnostics.CodeAnalysis.DynamicDependencyAttribute" /> class
            with the specified signature of a member on the same type as the consumer.
            </summary>
            <param name="memberSignature">The signature of the member depended on.</param>
        </member>
        <member name="M:System.Diagnostics.CodeAnalysis.DynamicDependencyAttribute.#ctor(System.String,System.Type)">
            <summary>
            Initializes a new instance of the <see cref="T:System.Diagnostics.CodeAnalysis.DynamicDependencyAttribute" /> class
            with the specified signature of a member on a <see cref="T:System.Type" />.
            </summary>
            <param name="memberSignature">The signature of the member depended on.</param>
            <param name="type">The <see cref="T:System.Type" /> containing <paramref name="memberSignature" />.</param>
        </member>
        <member name="M:System.Diagnostics.CodeAnalysis.DynamicDependencyAttribute.#ctor(System.String,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:System.Diagnostics.CodeAnalysis.DynamicDependencyAttribute" /> class
            with the specified signature of a member on a type in an assembly.
            </summary>
            <param name="memberSignature">The signature of the member depended on.</param>
            <param name="typeName">The full name of the type containing the specified member.</param>
            <param name="assemblyName">The assembly name of the type containing the specified member.</param>
        </member>
        <member name="M:System.Diagnostics.CodeAnalysis.DynamicDependencyAttribute.#ctor(System.Diagnostics.CodeAnalysis.DynamicallyAccessedMemberTypes,System.Type)">
            <summary>
            Initializes a new instance of the <see cref="T:System.Diagnostics.CodeAnalysis.DynamicDependencyAttribute" /> class
            with the specified types of members on a <see cref="T:System.Type" />.
            </summary>
            <param name="memberTypes">The types of members depended on.</param>
            <param name="type">The <see cref="T:System.Type" /> containing the specified members.</param>
        </member>
        <member name="M:System.Diagnostics.CodeAnalysis.DynamicDependencyAttribute.#ctor(System.Diagnostics.CodeAnalysis.DynamicallyAccessedMemberTypes,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:System.Diagnostics.CodeAnalysis.DynamicDependencyAttribute" /> class
            with the specified types of members on a type in an assembly.
            </summary>
            <param name="memberTypes">The types of members depended on.</param>
            <param name="typeName">The full name of the type containing the specified members.</param>
            <param name="assemblyName">The assembly name of the type containing the specified members.</param>
        </member>
        <member name="P:System.Diagnostics.CodeAnalysis.DynamicDependencyAttribute.MemberSignature">
            <summary>
            Gets the signature of the member depended on.
            </summary>
            <remarks>
            Either <see cref="P:System.Diagnostics.CodeAnalysis.DynamicDependencyAttribute.MemberSignature" /> must be a valid string or <see cref="P:System.Diagnostics.CodeAnalysis.DynamicDependencyAttribute.MemberTypes" />
            must not equal <see cref="F:System.Diagnostics.CodeAnalysis.DynamicallyAccessedMemberTypes.None" />, but not both.
            </remarks>
        </member>
        <member name="P:System.Diagnostics.CodeAnalysis.DynamicDependencyAttribute.MemberTypes">
            <summary>
            Gets the <see cref="T:System.Diagnostics.CodeAnalysis.DynamicallyAccessedMemberTypes" /> which specifies the type
            of members depended on.
            </summary>
            <remarks>
            Either <see cref="P:System.Diagnostics.CodeAnalysis.DynamicDependencyAttribute.MemberSignature" /> must be a valid string or <see cref="P:System.Diagnostics.CodeAnalysis.DynamicDependencyAttribute.MemberTypes" />
            must not equal <see cref="F:System.Diagnostics.CodeAnalysis.DynamicallyAccessedMemberTypes.None" />, but not both.
            </remarks>
        </member>
        <member name="P:System.Diagnostics.CodeAnalysis.DynamicDependencyAttribute.Type">
            <summary>
            Gets the <see cref="T:System.Type" /> containing the specified member.
            </summary>
            <remarks>
            If neither <see cref="P:System.Diagnostics.CodeAnalysis.DynamicDependencyAttribute.Type" /> nor <see cref="P:System.Diagnostics.CodeAnalysis.DynamicDependencyAttribute.TypeName" /> are specified,
            the type of the consumer is assumed.
            </remarks>
        </member>
        <member name="P:System.Diagnostics.CodeAnalysis.DynamicDependencyAttribute.TypeName">
            <summary>
            Gets the full name of the type containing the specified member.
            </summary>
            <remarks>
            If neither <see cref="P:System.Diagnostics.CodeAnalysis.DynamicDependencyAttribute.Type" /> nor <see cref="P:System.Diagnostics.CodeAnalysis.DynamicDependencyAttribute.TypeName" /> are specified,
            the type of the consumer is assumed.
            </remarks>
        </member>
        <member name="P:System.Diagnostics.CodeAnalysis.DynamicDependencyAttribute.AssemblyName">
            <summary>
            Gets the assembly name of the specified type.
            </summary>
            <remarks>
            <see cref="P:System.Diagnostics.CodeAnalysis.DynamicDependencyAttribute.AssemblyName" /> is only valid when <see cref="P:System.Diagnostics.CodeAnalysis.DynamicDependencyAttribute.TypeName" /> is specified.
            </remarks>
        </member>
        <member name="P:System.Diagnostics.CodeAnalysis.DynamicDependencyAttribute.Condition">
            <summary>
            Gets or sets the condition in which the dependency is applicable, e.g. "DEBUG".
            </summary>
        </member>
        <member name="T:System.Diagnostics.CodeAnalysis.DynamicallyAccessedMembersAttribute">
             <summary>
             Indicates that certain members on a specified <see cref="T:System.Type" /> are accessed dynamically,
             for example through <see cref="N:System.Reflection" />.
             </summary>
             <remarks>
             This allows tools to understand which members are being accessed during the execution
             of a program.
            
             This attribute is valid on members whose type is <see cref="T:System.Type" /> or <see cref="T:System.String" />.
            
             When this attribute is applied to a location of type <see cref="T:System.String" />, the assumption is
             that the string represents a fully qualified type name.
            
             When this attribute is applied to a class, interface, or struct, the members specified
             can be accessed dynamically on <see cref="T:System.Type" /> instances returned from calling
             <see cref="M:System.Object.GetType" /> on instances of that class, interface, or struct.
            
             If the attribute is applied to a method it's treated as a special case and it implies
             the attribute should be applied to the "this" parameter of the method. As such the attribute
             should only be used on instance methods of types assignable to System.Type (or string, but no methods
             will use it there).
             </remarks>
        </member>
        <member name="M:System.Diagnostics.CodeAnalysis.DynamicallyAccessedMembersAttribute.#ctor(System.Diagnostics.CodeAnalysis.DynamicallyAccessedMemberTypes)">
            <summary>
            Initializes a new instance of the <see cref="T:System.Diagnostics.CodeAnalysis.DynamicallyAccessedMembersAttribute" /> class
            with the specified member types.
            </summary>
            <param name="memberTypes">The types of members dynamically accessed.</param>
        </member>
        <member name="P:System.Diagnostics.CodeAnalysis.DynamicallyAccessedMembersAttribute.MemberTypes">
            <summary>
            Gets the <see cref="T:System.Diagnostics.CodeAnalysis.DynamicallyAccessedMemberTypes" /> which specifies the type
            of members dynamically accessed.
            </summary>
        </member>
        <member name="T:System.Diagnostics.CodeAnalysis.DynamicallyAccessedMemberTypes">
             <summary>
             Specifies the types of members that are dynamically accessed.
            
             This enumeration has a <see cref="T:System.FlagsAttribute" /> attribute that allows a
             bitwise combination of its member values.
             </summary>
        </member>
        <member name="F:System.Diagnostics.CodeAnalysis.DynamicallyAccessedMemberTypes.None">
            <summary>
            Specifies no members.
            </summary>
        </member>
        <member name="F:System.Diagnostics.CodeAnalysis.DynamicallyAccessedMemberTypes.PublicParameterlessConstructor">
            <summary>
            Specifies the default, parameterless public constructor.
            </summary>
        </member>
        <member name="F:System.Diagnostics.CodeAnalysis.DynamicallyAccessedMemberTypes.PublicConstructors">
            <summary>
            Specifies all public constructors.
            </summary>
        </member>
        <member name="F:System.Diagnostics.CodeAnalysis.DynamicallyAccessedMemberTypes.NonPublicConstructors">
            <summary>
            Specifies all non-public constructors.
            </summary>
        </member>
        <member name="F:System.Diagnostics.CodeAnalysis.DynamicallyAccessedMemberTypes.PublicMethods">
            <summary>
            Specifies all public methods.
            </summary>
        </member>
        <member name="F:System.Diagnostics.CodeAnalysis.DynamicallyAccessedMemberTypes.NonPublicMethods">
            <summary>
            Specifies all non-public methods.
            </summary>
        </member>
        <member name="F:System.Diagnostics.CodeAnalysis.DynamicallyAccessedMemberTypes.PublicFields">
            <summary>
            Specifies all public fields.
            </summary>
        </member>
        <member name="F:System.Diagnostics.CodeAnalysis.DynamicallyAccessedMemberTypes.NonPublicFields">
            <summary>
            Specifies all non-public fields.
            </summary>
        </member>
        <member name="F:System.Diagnostics.CodeAnalysis.DynamicallyAccessedMemberTypes.PublicNestedTypes">
            <summary>
            Specifies all public nested types.
            </summary>
        </member>
        <member name="F:System.Diagnostics.CodeAnalysis.DynamicallyAccessedMemberTypes.NonPublicNestedTypes">
            <summary>
            Specifies all non-public nested types.
            </summary>
        </member>
        <member name="F:System.Diagnostics.CodeAnalysis.DynamicallyAccessedMemberTypes.PublicProperties">
            <summary>
            Specifies all public properties.
            </summary>
        </member>
        <member name="F:System.Diagnostics.CodeAnalysis.DynamicallyAccessedMemberTypes.NonPublicProperties">
            <summary>
            Specifies all non-public properties.
            </summary>
        </member>
        <member name="F:System.Diagnostics.CodeAnalysis.DynamicallyAccessedMemberTypes.PublicEvents">
            <summary>
            Specifies all public events.
            </summary>
        </member>
        <member name="F:System.Diagnostics.CodeAnalysis.DynamicallyAccessedMemberTypes.NonPublicEvents">
            <summary>
            Specifies all non-public events.
            </summary>
        </member>
        <member name="F:System.Diagnostics.CodeAnalysis.DynamicallyAccessedMemberTypes.Interfaces">
            <summary>
            Specifies all interfaces implemented by the type.
            </summary>
        </member>
        <member name="F:System.Diagnostics.CodeAnalysis.DynamicallyAccessedMemberTypes.All">
            <summary>
            Specifies all members.
            </summary>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.AuthorizationProviderOperationsMetadataCollection.System#Collections#Generic#IEnumerable{Azure#ResourceManager#Authorization#AuthorizationProviderOperationsMetadataResource}#GetEnumerator">
            <summary>Returns an enumerator that iterates through the collection.</summary><returns>An enumerator that can be used to iterate through the collection.</returns>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.AuthorizationProviderOperationsMetadataCollection.System#Collections#IEnumerable#GetEnumerator">
            <summary>Returns an enumerator that iterates through a collection.</summary><returns>An <see cref="T:System.Collections.IEnumerator" /> object that can be used to iterate through the collection.</returns>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.AuthorizationProviderOperationsMetadataCollection.System#Collections#Generic#IAsyncEnumerable{Azure#ResourceManager#Authorization#AuthorizationProviderOperationsMetadataResource}#GetAsyncEnumerator(System.Threading.CancellationToken)">
            <summary>Returns an enumerator that iterates asynchronously through the collection.</summary><param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> that may be used to cancel the asynchronous iteration.</param><returns>An enumerator that can be used to iterate asynchronously through the collection.</returns>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.AuthorizationProviderOperationsMetadataData.System#ClientModel#Primitives#IJsonModel{Azure#ResourceManager#Authorization#AuthorizationProviderOperationsMetadataData}#Write(System.Text.Json.Utf8JsonWriter,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Writes the model to the provided <see cref="T:System.Text.Json.Utf8JsonWriter" />.
            </summary><param name="writer">The <see cref="T:System.Text.Json.Utf8JsonWriter" /> to write into.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.AuthorizationProviderOperationsMetadataData.System#ClientModel#Primitives#IJsonModel{Azure#ResourceManager#Authorization#AuthorizationProviderOperationsMetadataData}#Create(System.Text.Json.Utf8JsonReader@,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Reads one JSON value (including objects or arrays) from the provided reader and converts it to a model.
            </summary><param name="reader">The <see cref="T:System.Text.Json.Utf8JsonReader" /> to read.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A <typeparamref name="T" /> representation of the JSON value.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.AuthorizationProviderOperationsMetadataData.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#Authorization#AuthorizationProviderOperationsMetadataData}#Write(System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Writes the model into a <see cref="T:System.BinaryData" />.
            </summary><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A binary representation of the written model.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.AuthorizationProviderOperationsMetadataData.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#Authorization#AuthorizationProviderOperationsMetadataData}#Create(System.BinaryData,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Converts the provided <see cref="T:System.BinaryData" /> into a model.
            </summary><param name="data">The <see cref="T:System.BinaryData" /> to parse.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A <typeparamref name="T" /> representation of the data.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.AuthorizationProviderOperationsMetadataData.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#Authorization#AuthorizationProviderOperationsMetadataData}#GetFormatFromOptions(System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Gets the data interchange format (JSON, Xml, etc) that the model uses when communicating with the service.
            <param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param></summary><returns>The format that the model uses when communicating with the serivce.</returns>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.AuthorizationProviderOperationsMetadataResource.System#ClientModel#Primitives#IJsonModel{Azure#ResourceManager#Authorization#AuthorizationProviderOperationsMetadataData}#Write(System.Text.Json.Utf8JsonWriter,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Writes the model to the provided <see cref="T:System.Text.Json.Utf8JsonWriter" />.
            </summary><param name="writer">The <see cref="T:System.Text.Json.Utf8JsonWriter" /> to write into.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.AuthorizationProviderOperationsMetadataResource.System#ClientModel#Primitives#IJsonModel{Azure#ResourceManager#Authorization#AuthorizationProviderOperationsMetadataData}#Create(System.Text.Json.Utf8JsonReader@,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Reads one JSON value (including objects or arrays) from the provided reader and converts it to a model.
            </summary><param name="reader">The <see cref="T:System.Text.Json.Utf8JsonReader" /> to read.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A <typeparamref name="T" /> representation of the JSON value.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.AuthorizationProviderOperationsMetadataResource.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#Authorization#AuthorizationProviderOperationsMetadataData}#Write(System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Writes the model into a <see cref="T:System.BinaryData" />.
            </summary><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A binary representation of the written model.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.AuthorizationProviderOperationsMetadataResource.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#Authorization#AuthorizationProviderOperationsMetadataData}#Create(System.BinaryData,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Converts the provided <see cref="T:System.BinaryData" /> into a model.
            </summary><param name="data">The <see cref="T:System.BinaryData" /> to parse.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A <typeparamref name="T" /> representation of the data.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.AuthorizationProviderOperationsMetadataResource.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#Authorization#AuthorizationProviderOperationsMetadataData}#GetFormatFromOptions(System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Gets the data interchange format (JSON, Xml, etc) that the model uses when communicating with the service.
            <param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param></summary><returns>The format that the model uses when communicating with the serivce.</returns>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.AuthorizationRoleDefinitionCollection.System#Collections#Generic#IEnumerable{Azure#ResourceManager#Authorization#AuthorizationRoleDefinitionResource}#GetEnumerator">
            <summary>Returns an enumerator that iterates through the collection.</summary><returns>An enumerator that can be used to iterate through the collection.</returns>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.AuthorizationRoleDefinitionCollection.System#Collections#IEnumerable#GetEnumerator">
            <summary>Returns an enumerator that iterates through a collection.</summary><returns>An <see cref="T:System.Collections.IEnumerator" /> object that can be used to iterate through the collection.</returns>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.AuthorizationRoleDefinitionCollection.System#Collections#Generic#IAsyncEnumerable{Azure#ResourceManager#Authorization#AuthorizationRoleDefinitionResource}#GetAsyncEnumerator(System.Threading.CancellationToken)">
            <summary>Returns an enumerator that iterates asynchronously through the collection.</summary><param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> that may be used to cancel the asynchronous iteration.</param><returns>An enumerator that can be used to iterate asynchronously through the collection.</returns>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.AuthorizationRoleDefinitionData.System#ClientModel#Primitives#IJsonModel{Azure#ResourceManager#Authorization#AuthorizationRoleDefinitionData}#Write(System.Text.Json.Utf8JsonWriter,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Writes the model to the provided <see cref="T:System.Text.Json.Utf8JsonWriter" />.
            </summary><param name="writer">The <see cref="T:System.Text.Json.Utf8JsonWriter" /> to write into.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.AuthorizationRoleDefinitionData.System#ClientModel#Primitives#IJsonModel{Azure#ResourceManager#Authorization#AuthorizationRoleDefinitionData}#Create(System.Text.Json.Utf8JsonReader@,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Reads one JSON value (including objects or arrays) from the provided reader and converts it to a model.
            </summary><param name="reader">The <see cref="T:System.Text.Json.Utf8JsonReader" /> to read.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A <typeparamref name="T" /> representation of the JSON value.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.AuthorizationRoleDefinitionData.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#Authorization#AuthorizationRoleDefinitionData}#Write(System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Writes the model into a <see cref="T:System.BinaryData" />.
            </summary><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A binary representation of the written model.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.AuthorizationRoleDefinitionData.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#Authorization#AuthorizationRoleDefinitionData}#Create(System.BinaryData,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Converts the provided <see cref="T:System.BinaryData" /> into a model.
            </summary><param name="data">The <see cref="T:System.BinaryData" /> to parse.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A <typeparamref name="T" /> representation of the data.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.AuthorizationRoleDefinitionData.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#Authorization#AuthorizationRoleDefinitionData}#GetFormatFromOptions(System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Gets the data interchange format (JSON, Xml, etc) that the model uses when communicating with the service.
            <param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param></summary><returns>The format that the model uses when communicating with the serivce.</returns>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.AuthorizationRoleDefinitionResource.System#ClientModel#Primitives#IJsonModel{Azure#ResourceManager#Authorization#AuthorizationRoleDefinitionData}#Write(System.Text.Json.Utf8JsonWriter,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Writes the model to the provided <see cref="T:System.Text.Json.Utf8JsonWriter" />.
            </summary><param name="writer">The <see cref="T:System.Text.Json.Utf8JsonWriter" /> to write into.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.AuthorizationRoleDefinitionResource.System#ClientModel#Primitives#IJsonModel{Azure#ResourceManager#Authorization#AuthorizationRoleDefinitionData}#Create(System.Text.Json.Utf8JsonReader@,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Reads one JSON value (including objects or arrays) from the provided reader and converts it to a model.
            </summary><param name="reader">The <see cref="T:System.Text.Json.Utf8JsonReader" /> to read.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A <typeparamref name="T" /> representation of the JSON value.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.AuthorizationRoleDefinitionResource.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#Authorization#AuthorizationRoleDefinitionData}#Write(System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Writes the model into a <see cref="T:System.BinaryData" />.
            </summary><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A binary representation of the written model.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.AuthorizationRoleDefinitionResource.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#Authorization#AuthorizationRoleDefinitionData}#Create(System.BinaryData,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Converts the provided <see cref="T:System.BinaryData" /> into a model.
            </summary><param name="data">The <see cref="T:System.BinaryData" /> to parse.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A <typeparamref name="T" /> representation of the data.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.AuthorizationRoleDefinitionResource.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#Authorization#AuthorizationRoleDefinitionData}#GetFormatFromOptions(System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Gets the data interchange format (JSON, Xml, etc) that the model uses when communicating with the service.
            <param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param></summary><returns>The format that the model uses when communicating with the serivce.</returns>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.DenyAssignmentCollection.System#Collections#Generic#IEnumerable{Azure#ResourceManager#Authorization#DenyAssignmentResource}#GetEnumerator">
            <summary>Returns an enumerator that iterates through the collection.</summary><returns>An enumerator that can be used to iterate through the collection.</returns>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.DenyAssignmentCollection.System#Collections#IEnumerable#GetEnumerator">
            <summary>Returns an enumerator that iterates through a collection.</summary><returns>An <see cref="T:System.Collections.IEnumerator" /> object that can be used to iterate through the collection.</returns>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.DenyAssignmentCollection.System#Collections#Generic#IAsyncEnumerable{Azure#ResourceManager#Authorization#DenyAssignmentResource}#GetAsyncEnumerator(System.Threading.CancellationToken)">
            <summary>Returns an enumerator that iterates asynchronously through the collection.</summary><param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> that may be used to cancel the asynchronous iteration.</param><returns>An enumerator that can be used to iterate asynchronously through the collection.</returns>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.DenyAssignmentData.System#ClientModel#Primitives#IJsonModel{Azure#ResourceManager#Authorization#DenyAssignmentData}#Write(System.Text.Json.Utf8JsonWriter,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Writes the model to the provided <see cref="T:System.Text.Json.Utf8JsonWriter" />.
            </summary><param name="writer">The <see cref="T:System.Text.Json.Utf8JsonWriter" /> to write into.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.DenyAssignmentData.System#ClientModel#Primitives#IJsonModel{Azure#ResourceManager#Authorization#DenyAssignmentData}#Create(System.Text.Json.Utf8JsonReader@,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Reads one JSON value (including objects or arrays) from the provided reader and converts it to a model.
            </summary><param name="reader">The <see cref="T:System.Text.Json.Utf8JsonReader" /> to read.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A <typeparamref name="T" /> representation of the JSON value.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.DenyAssignmentData.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#Authorization#DenyAssignmentData}#Write(System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Writes the model into a <see cref="T:System.BinaryData" />.
            </summary><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A binary representation of the written model.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.DenyAssignmentData.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#Authorization#DenyAssignmentData}#Create(System.BinaryData,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Converts the provided <see cref="T:System.BinaryData" /> into a model.
            </summary><param name="data">The <see cref="T:System.BinaryData" /> to parse.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A <typeparamref name="T" /> representation of the data.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.DenyAssignmentData.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#Authorization#DenyAssignmentData}#GetFormatFromOptions(System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Gets the data interchange format (JSON, Xml, etc) that the model uses when communicating with the service.
            <param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param></summary><returns>The format that the model uses when communicating with the serivce.</returns>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.DenyAssignmentResource.System#ClientModel#Primitives#IJsonModel{Azure#ResourceManager#Authorization#DenyAssignmentData}#Write(System.Text.Json.Utf8JsonWriter,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Writes the model to the provided <see cref="T:System.Text.Json.Utf8JsonWriter" />.
            </summary><param name="writer">The <see cref="T:System.Text.Json.Utf8JsonWriter" /> to write into.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.DenyAssignmentResource.System#ClientModel#Primitives#IJsonModel{Azure#ResourceManager#Authorization#DenyAssignmentData}#Create(System.Text.Json.Utf8JsonReader@,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Reads one JSON value (including objects or arrays) from the provided reader and converts it to a model.
            </summary><param name="reader">The <see cref="T:System.Text.Json.Utf8JsonReader" /> to read.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A <typeparamref name="T" /> representation of the JSON value.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.DenyAssignmentResource.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#Authorization#DenyAssignmentData}#Write(System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Writes the model into a <see cref="T:System.BinaryData" />.
            </summary><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A binary representation of the written model.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.DenyAssignmentResource.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#Authorization#DenyAssignmentData}#Create(System.BinaryData,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Converts the provided <see cref="T:System.BinaryData" /> into a model.
            </summary><param name="data">The <see cref="T:System.BinaryData" /> to parse.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A <typeparamref name="T" /> representation of the data.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.DenyAssignmentResource.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#Authorization#DenyAssignmentData}#GetFormatFromOptions(System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Gets the data interchange format (JSON, Xml, etc) that the model uses when communicating with the service.
            <param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param></summary><returns>The format that the model uses when communicating with the serivce.</returns>
        </member>
        <member name="P:Azure.ResourceManager.Authorization.ChangeTrackingDictionary`2.System#Collections#Generic#IReadOnlyDictionary{TKey@TValue}#Keys">
            <summary>Gets an enumerable collection that contains the keys in the read-only dictionary.</summary><returns>An enumerable collection that contains the keys in the read-only dictionary.</returns>
        </member>
        <member name="P:Azure.ResourceManager.Authorization.ChangeTrackingDictionary`2.System#Collections#Generic#IReadOnlyDictionary{TKey@TValue}#Values">
            <summary>Gets an enumerable collection that contains the values in the read-only dictionary.</summary><returns>An enumerable collection that contains the values in the read-only dictionary.</returns>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.ChangeTrackingDictionary`2.System#Collections#IEnumerable#GetEnumerator">
            <summary>Returns an enumerator that iterates through a collection.</summary><returns>An <see cref="T:System.Collections.IEnumerator" /> object that can be used to iterate through the collection.</returns>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.ChangeTrackingList`1.System#Collections#IEnumerable#GetEnumerator">
            <summary>Returns an enumerator that iterates through a collection.</summary><returns>An <see cref="T:System.Collections.IEnumerator" /> object that can be used to iterate through the collection.</returns>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.RoleAssignmentCollection.System#Collections#Generic#IEnumerable{Azure#ResourceManager#Authorization#RoleAssignmentResource}#GetEnumerator">
            <summary>Returns an enumerator that iterates through the collection.</summary><returns>An enumerator that can be used to iterate through the collection.</returns>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.RoleAssignmentCollection.System#Collections#IEnumerable#GetEnumerator">
            <summary>Returns an enumerator that iterates through a collection.</summary><returns>An <see cref="T:System.Collections.IEnumerator" /> object that can be used to iterate through the collection.</returns>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.RoleAssignmentCollection.System#Collections#Generic#IAsyncEnumerable{Azure#ResourceManager#Authorization#RoleAssignmentResource}#GetAsyncEnumerator(System.Threading.CancellationToken)">
            <summary>Returns an enumerator that iterates asynchronously through the collection.</summary><param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> that may be used to cancel the asynchronous iteration.</param><returns>An enumerator that can be used to iterate asynchronously through the collection.</returns>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.RoleAssignmentData.System#ClientModel#Primitives#IJsonModel{Azure#ResourceManager#Authorization#RoleAssignmentData}#Write(System.Text.Json.Utf8JsonWriter,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Writes the model to the provided <see cref="T:System.Text.Json.Utf8JsonWriter" />.
            </summary><param name="writer">The <see cref="T:System.Text.Json.Utf8JsonWriter" /> to write into.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.RoleAssignmentData.System#ClientModel#Primitives#IJsonModel{Azure#ResourceManager#Authorization#RoleAssignmentData}#Create(System.Text.Json.Utf8JsonReader@,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Reads one JSON value (including objects or arrays) from the provided reader and converts it to a model.
            </summary><param name="reader">The <see cref="T:System.Text.Json.Utf8JsonReader" /> to read.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A <typeparamref name="T" /> representation of the JSON value.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.RoleAssignmentData.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#Authorization#RoleAssignmentData}#Write(System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Writes the model into a <see cref="T:System.BinaryData" />.
            </summary><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A binary representation of the written model.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.RoleAssignmentData.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#Authorization#RoleAssignmentData}#Create(System.BinaryData,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Converts the provided <see cref="T:System.BinaryData" /> into a model.
            </summary><param name="data">The <see cref="T:System.BinaryData" /> to parse.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A <typeparamref name="T" /> representation of the data.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.RoleAssignmentData.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#Authorization#RoleAssignmentData}#GetFormatFromOptions(System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Gets the data interchange format (JSON, Xml, etc) that the model uses when communicating with the service.
            <param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param></summary><returns>The format that the model uses when communicating with the serivce.</returns>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.RoleAssignmentResource.System#ClientModel#Primitives#IJsonModel{Azure#ResourceManager#Authorization#RoleAssignmentData}#Write(System.Text.Json.Utf8JsonWriter,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Writes the model to the provided <see cref="T:System.Text.Json.Utf8JsonWriter" />.
            </summary><param name="writer">The <see cref="T:System.Text.Json.Utf8JsonWriter" /> to write into.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.RoleAssignmentResource.System#ClientModel#Primitives#IJsonModel{Azure#ResourceManager#Authorization#RoleAssignmentData}#Create(System.Text.Json.Utf8JsonReader@,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Reads one JSON value (including objects or arrays) from the provided reader and converts it to a model.
            </summary><param name="reader">The <see cref="T:System.Text.Json.Utf8JsonReader" /> to read.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A <typeparamref name="T" /> representation of the JSON value.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.RoleAssignmentResource.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#Authorization#RoleAssignmentData}#Write(System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Writes the model into a <see cref="T:System.BinaryData" />.
            </summary><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A binary representation of the written model.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.RoleAssignmentResource.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#Authorization#RoleAssignmentData}#Create(System.BinaryData,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Converts the provided <see cref="T:System.BinaryData" /> into a model.
            </summary><param name="data">The <see cref="T:System.BinaryData" /> to parse.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A <typeparamref name="T" /> representation of the data.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.RoleAssignmentResource.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#Authorization#RoleAssignmentData}#GetFormatFromOptions(System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Gets the data interchange format (JSON, Xml, etc) that the model uses when communicating with the service.
            <param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param></summary><returns>The format that the model uses when communicating with the serivce.</returns>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.RoleAssignmentScheduleCollection.System#Collections#Generic#IEnumerable{Azure#ResourceManager#Authorization#RoleAssignmentScheduleResource}#GetEnumerator">
            <summary>Returns an enumerator that iterates through the collection.</summary><returns>An enumerator that can be used to iterate through the collection.</returns>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.RoleAssignmentScheduleCollection.System#Collections#IEnumerable#GetEnumerator">
            <summary>Returns an enumerator that iterates through a collection.</summary><returns>An <see cref="T:System.Collections.IEnumerator" /> object that can be used to iterate through the collection.</returns>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.RoleAssignmentScheduleCollection.System#Collections#Generic#IAsyncEnumerable{Azure#ResourceManager#Authorization#RoleAssignmentScheduleResource}#GetAsyncEnumerator(System.Threading.CancellationToken)">
            <summary>Returns an enumerator that iterates asynchronously through the collection.</summary><param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> that may be used to cancel the asynchronous iteration.</param><returns>An enumerator that can be used to iterate asynchronously through the collection.</returns>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.RoleAssignmentScheduleData.System#ClientModel#Primitives#IJsonModel{Azure#ResourceManager#Authorization#RoleAssignmentScheduleData}#Write(System.Text.Json.Utf8JsonWriter,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Writes the model to the provided <see cref="T:System.Text.Json.Utf8JsonWriter" />.
            </summary><param name="writer">The <see cref="T:System.Text.Json.Utf8JsonWriter" /> to write into.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.RoleAssignmentScheduleData.System#ClientModel#Primitives#IJsonModel{Azure#ResourceManager#Authorization#RoleAssignmentScheduleData}#Create(System.Text.Json.Utf8JsonReader@,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Reads one JSON value (including objects or arrays) from the provided reader and converts it to a model.
            </summary><param name="reader">The <see cref="T:System.Text.Json.Utf8JsonReader" /> to read.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A <typeparamref name="T" /> representation of the JSON value.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.RoleAssignmentScheduleData.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#Authorization#RoleAssignmentScheduleData}#Write(System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Writes the model into a <see cref="T:System.BinaryData" />.
            </summary><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A binary representation of the written model.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.RoleAssignmentScheduleData.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#Authorization#RoleAssignmentScheduleData}#Create(System.BinaryData,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Converts the provided <see cref="T:System.BinaryData" /> into a model.
            </summary><param name="data">The <see cref="T:System.BinaryData" /> to parse.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A <typeparamref name="T" /> representation of the data.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.RoleAssignmentScheduleData.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#Authorization#RoleAssignmentScheduleData}#GetFormatFromOptions(System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Gets the data interchange format (JSON, Xml, etc) that the model uses when communicating with the service.
            <param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param></summary><returns>The format that the model uses when communicating with the serivce.</returns>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.RoleAssignmentScheduleInstanceCollection.System#Collections#Generic#IEnumerable{Azure#ResourceManager#Authorization#RoleAssignmentScheduleInstanceResource}#GetEnumerator">
            <summary>Returns an enumerator that iterates through the collection.</summary><returns>An enumerator that can be used to iterate through the collection.</returns>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.RoleAssignmentScheduleInstanceCollection.System#Collections#IEnumerable#GetEnumerator">
            <summary>Returns an enumerator that iterates through a collection.</summary><returns>An <see cref="T:System.Collections.IEnumerator" /> object that can be used to iterate through the collection.</returns>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.RoleAssignmentScheduleInstanceCollection.System#Collections#Generic#IAsyncEnumerable{Azure#ResourceManager#Authorization#RoleAssignmentScheduleInstanceResource}#GetAsyncEnumerator(System.Threading.CancellationToken)">
            <summary>Returns an enumerator that iterates asynchronously through the collection.</summary><param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> that may be used to cancel the asynchronous iteration.</param><returns>An enumerator that can be used to iterate asynchronously through the collection.</returns>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.RoleAssignmentScheduleInstanceData.System#ClientModel#Primitives#IJsonModel{Azure#ResourceManager#Authorization#RoleAssignmentScheduleInstanceData}#Write(System.Text.Json.Utf8JsonWriter,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Writes the model to the provided <see cref="T:System.Text.Json.Utf8JsonWriter" />.
            </summary><param name="writer">The <see cref="T:System.Text.Json.Utf8JsonWriter" /> to write into.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.RoleAssignmentScheduleInstanceData.System#ClientModel#Primitives#IJsonModel{Azure#ResourceManager#Authorization#RoleAssignmentScheduleInstanceData}#Create(System.Text.Json.Utf8JsonReader@,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Reads one JSON value (including objects or arrays) from the provided reader and converts it to a model.
            </summary><param name="reader">The <see cref="T:System.Text.Json.Utf8JsonReader" /> to read.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A <typeparamref name="T" /> representation of the JSON value.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.RoleAssignmentScheduleInstanceData.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#Authorization#RoleAssignmentScheduleInstanceData}#Write(System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Writes the model into a <see cref="T:System.BinaryData" />.
            </summary><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A binary representation of the written model.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.RoleAssignmentScheduleInstanceData.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#Authorization#RoleAssignmentScheduleInstanceData}#Create(System.BinaryData,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Converts the provided <see cref="T:System.BinaryData" /> into a model.
            </summary><param name="data">The <see cref="T:System.BinaryData" /> to parse.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A <typeparamref name="T" /> representation of the data.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.RoleAssignmentScheduleInstanceData.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#Authorization#RoleAssignmentScheduleInstanceData}#GetFormatFromOptions(System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Gets the data interchange format (JSON, Xml, etc) that the model uses when communicating with the service.
            <param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param></summary><returns>The format that the model uses when communicating with the serivce.</returns>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.RoleAssignmentScheduleInstanceResource.System#ClientModel#Primitives#IJsonModel{Azure#ResourceManager#Authorization#RoleAssignmentScheduleInstanceData}#Write(System.Text.Json.Utf8JsonWriter,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Writes the model to the provided <see cref="T:System.Text.Json.Utf8JsonWriter" />.
            </summary><param name="writer">The <see cref="T:System.Text.Json.Utf8JsonWriter" /> to write into.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.RoleAssignmentScheduleInstanceResource.System#ClientModel#Primitives#IJsonModel{Azure#ResourceManager#Authorization#RoleAssignmentScheduleInstanceData}#Create(System.Text.Json.Utf8JsonReader@,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Reads one JSON value (including objects or arrays) from the provided reader and converts it to a model.
            </summary><param name="reader">The <see cref="T:System.Text.Json.Utf8JsonReader" /> to read.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A <typeparamref name="T" /> representation of the JSON value.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.RoleAssignmentScheduleInstanceResource.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#Authorization#RoleAssignmentScheduleInstanceData}#Write(System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Writes the model into a <see cref="T:System.BinaryData" />.
            </summary><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A binary representation of the written model.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.RoleAssignmentScheduleInstanceResource.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#Authorization#RoleAssignmentScheduleInstanceData}#Create(System.BinaryData,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Converts the provided <see cref="T:System.BinaryData" /> into a model.
            </summary><param name="data">The <see cref="T:System.BinaryData" /> to parse.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A <typeparamref name="T" /> representation of the data.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.RoleAssignmentScheduleInstanceResource.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#Authorization#RoleAssignmentScheduleInstanceData}#GetFormatFromOptions(System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Gets the data interchange format (JSON, Xml, etc) that the model uses when communicating with the service.
            <param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param></summary><returns>The format that the model uses when communicating with the serivce.</returns>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.RoleAssignmentScheduleRequestCollection.System#Collections#Generic#IEnumerable{Azure#ResourceManager#Authorization#RoleAssignmentScheduleRequestResource}#GetEnumerator">
            <summary>Returns an enumerator that iterates through the collection.</summary><returns>An enumerator that can be used to iterate through the collection.</returns>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.RoleAssignmentScheduleRequestCollection.System#Collections#IEnumerable#GetEnumerator">
            <summary>Returns an enumerator that iterates through a collection.</summary><returns>An <see cref="T:System.Collections.IEnumerator" /> object that can be used to iterate through the collection.</returns>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.RoleAssignmentScheduleRequestCollection.System#Collections#Generic#IAsyncEnumerable{Azure#ResourceManager#Authorization#RoleAssignmentScheduleRequestResource}#GetAsyncEnumerator(System.Threading.CancellationToken)">
            <summary>Returns an enumerator that iterates asynchronously through the collection.</summary><param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> that may be used to cancel the asynchronous iteration.</param><returns>An enumerator that can be used to iterate asynchronously through the collection.</returns>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.RoleAssignmentScheduleRequestData.System#ClientModel#Primitives#IJsonModel{Azure#ResourceManager#Authorization#RoleAssignmentScheduleRequestData}#Write(System.Text.Json.Utf8JsonWriter,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Writes the model to the provided <see cref="T:System.Text.Json.Utf8JsonWriter" />.
            </summary><param name="writer">The <see cref="T:System.Text.Json.Utf8JsonWriter" /> to write into.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.RoleAssignmentScheduleRequestData.System#ClientModel#Primitives#IJsonModel{Azure#ResourceManager#Authorization#RoleAssignmentScheduleRequestData}#Create(System.Text.Json.Utf8JsonReader@,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Reads one JSON value (including objects or arrays) from the provided reader and converts it to a model.
            </summary><param name="reader">The <see cref="T:System.Text.Json.Utf8JsonReader" /> to read.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A <typeparamref name="T" /> representation of the JSON value.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.RoleAssignmentScheduleRequestData.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#Authorization#RoleAssignmentScheduleRequestData}#Write(System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Writes the model into a <see cref="T:System.BinaryData" />.
            </summary><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A binary representation of the written model.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.RoleAssignmentScheduleRequestData.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#Authorization#RoleAssignmentScheduleRequestData}#Create(System.BinaryData,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Converts the provided <see cref="T:System.BinaryData" /> into a model.
            </summary><param name="data">The <see cref="T:System.BinaryData" /> to parse.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A <typeparamref name="T" /> representation of the data.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.RoleAssignmentScheduleRequestData.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#Authorization#RoleAssignmentScheduleRequestData}#GetFormatFromOptions(System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Gets the data interchange format (JSON, Xml, etc) that the model uses when communicating with the service.
            <param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param></summary><returns>The format that the model uses when communicating with the serivce.</returns>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.RoleAssignmentScheduleRequestResource.System#ClientModel#Primitives#IJsonModel{Azure#ResourceManager#Authorization#RoleAssignmentScheduleRequestData}#Write(System.Text.Json.Utf8JsonWriter,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Writes the model to the provided <see cref="T:System.Text.Json.Utf8JsonWriter" />.
            </summary><param name="writer">The <see cref="T:System.Text.Json.Utf8JsonWriter" /> to write into.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.RoleAssignmentScheduleRequestResource.System#ClientModel#Primitives#IJsonModel{Azure#ResourceManager#Authorization#RoleAssignmentScheduleRequestData}#Create(System.Text.Json.Utf8JsonReader@,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Reads one JSON value (including objects or arrays) from the provided reader and converts it to a model.
            </summary><param name="reader">The <see cref="T:System.Text.Json.Utf8JsonReader" /> to read.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A <typeparamref name="T" /> representation of the JSON value.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.RoleAssignmentScheduleRequestResource.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#Authorization#RoleAssignmentScheduleRequestData}#Write(System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Writes the model into a <see cref="T:System.BinaryData" />.
            </summary><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A binary representation of the written model.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.RoleAssignmentScheduleRequestResource.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#Authorization#RoleAssignmentScheduleRequestData}#Create(System.BinaryData,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Converts the provided <see cref="T:System.BinaryData" /> into a model.
            </summary><param name="data">The <see cref="T:System.BinaryData" /> to parse.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A <typeparamref name="T" /> representation of the data.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.RoleAssignmentScheduleRequestResource.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#Authorization#RoleAssignmentScheduleRequestData}#GetFormatFromOptions(System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Gets the data interchange format (JSON, Xml, etc) that the model uses when communicating with the service.
            <param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param></summary><returns>The format that the model uses when communicating with the serivce.</returns>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.RoleAssignmentScheduleResource.System#ClientModel#Primitives#IJsonModel{Azure#ResourceManager#Authorization#RoleAssignmentScheduleData}#Write(System.Text.Json.Utf8JsonWriter,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Writes the model to the provided <see cref="T:System.Text.Json.Utf8JsonWriter" />.
            </summary><param name="writer">The <see cref="T:System.Text.Json.Utf8JsonWriter" /> to write into.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.RoleAssignmentScheduleResource.System#ClientModel#Primitives#IJsonModel{Azure#ResourceManager#Authorization#RoleAssignmentScheduleData}#Create(System.Text.Json.Utf8JsonReader@,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Reads one JSON value (including objects or arrays) from the provided reader and converts it to a model.
            </summary><param name="reader">The <see cref="T:System.Text.Json.Utf8JsonReader" /> to read.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A <typeparamref name="T" /> representation of the JSON value.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.RoleAssignmentScheduleResource.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#Authorization#RoleAssignmentScheduleData}#Write(System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Writes the model into a <see cref="T:System.BinaryData" />.
            </summary><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A binary representation of the written model.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.RoleAssignmentScheduleResource.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#Authorization#RoleAssignmentScheduleData}#Create(System.BinaryData,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Converts the provided <see cref="T:System.BinaryData" /> into a model.
            </summary><param name="data">The <see cref="T:System.BinaryData" /> to parse.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A <typeparamref name="T" /> representation of the data.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.RoleAssignmentScheduleResource.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#Authorization#RoleAssignmentScheduleData}#GetFormatFromOptions(System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Gets the data interchange format (JSON, Xml, etc) that the model uses when communicating with the service.
            <param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param></summary><returns>The format that the model uses when communicating with the serivce.</returns>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.RoleEligibilityScheduleCollection.System#Collections#Generic#IEnumerable{Azure#ResourceManager#Authorization#RoleEligibilityScheduleResource}#GetEnumerator">
            <summary>Returns an enumerator that iterates through the collection.</summary><returns>An enumerator that can be used to iterate through the collection.</returns>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.RoleEligibilityScheduleCollection.System#Collections#IEnumerable#GetEnumerator">
            <summary>Returns an enumerator that iterates through a collection.</summary><returns>An <see cref="T:System.Collections.IEnumerator" /> object that can be used to iterate through the collection.</returns>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.RoleEligibilityScheduleCollection.System#Collections#Generic#IAsyncEnumerable{Azure#ResourceManager#Authorization#RoleEligibilityScheduleResource}#GetAsyncEnumerator(System.Threading.CancellationToken)">
            <summary>Returns an enumerator that iterates asynchronously through the collection.</summary><param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> that may be used to cancel the asynchronous iteration.</param><returns>An enumerator that can be used to iterate asynchronously through the collection.</returns>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.RoleEligibilityScheduleData.System#ClientModel#Primitives#IJsonModel{Azure#ResourceManager#Authorization#RoleEligibilityScheduleData}#Write(System.Text.Json.Utf8JsonWriter,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Writes the model to the provided <see cref="T:System.Text.Json.Utf8JsonWriter" />.
            </summary><param name="writer">The <see cref="T:System.Text.Json.Utf8JsonWriter" /> to write into.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.RoleEligibilityScheduleData.System#ClientModel#Primitives#IJsonModel{Azure#ResourceManager#Authorization#RoleEligibilityScheduleData}#Create(System.Text.Json.Utf8JsonReader@,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Reads one JSON value (including objects or arrays) from the provided reader and converts it to a model.
            </summary><param name="reader">The <see cref="T:System.Text.Json.Utf8JsonReader" /> to read.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A <typeparamref name="T" /> representation of the JSON value.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.RoleEligibilityScheduleData.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#Authorization#RoleEligibilityScheduleData}#Write(System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Writes the model into a <see cref="T:System.BinaryData" />.
            </summary><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A binary representation of the written model.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.RoleEligibilityScheduleData.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#Authorization#RoleEligibilityScheduleData}#Create(System.BinaryData,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Converts the provided <see cref="T:System.BinaryData" /> into a model.
            </summary><param name="data">The <see cref="T:System.BinaryData" /> to parse.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A <typeparamref name="T" /> representation of the data.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.RoleEligibilityScheduleData.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#Authorization#RoleEligibilityScheduleData}#GetFormatFromOptions(System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Gets the data interchange format (JSON, Xml, etc) that the model uses when communicating with the service.
            <param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param></summary><returns>The format that the model uses when communicating with the serivce.</returns>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.RoleEligibilityScheduleInstanceCollection.System#Collections#Generic#IEnumerable{Azure#ResourceManager#Authorization#RoleEligibilityScheduleInstanceResource}#GetEnumerator">
            <summary>Returns an enumerator that iterates through the collection.</summary><returns>An enumerator that can be used to iterate through the collection.</returns>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.RoleEligibilityScheduleInstanceCollection.System#Collections#IEnumerable#GetEnumerator">
            <summary>Returns an enumerator that iterates through a collection.</summary><returns>An <see cref="T:System.Collections.IEnumerator" /> object that can be used to iterate through the collection.</returns>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.RoleEligibilityScheduleInstanceCollection.System#Collections#Generic#IAsyncEnumerable{Azure#ResourceManager#Authorization#RoleEligibilityScheduleInstanceResource}#GetAsyncEnumerator(System.Threading.CancellationToken)">
            <summary>Returns an enumerator that iterates asynchronously through the collection.</summary><param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> that may be used to cancel the asynchronous iteration.</param><returns>An enumerator that can be used to iterate asynchronously through the collection.</returns>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.RoleEligibilityScheduleInstanceData.System#ClientModel#Primitives#IJsonModel{Azure#ResourceManager#Authorization#RoleEligibilityScheduleInstanceData}#Write(System.Text.Json.Utf8JsonWriter,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Writes the model to the provided <see cref="T:System.Text.Json.Utf8JsonWriter" />.
            </summary><param name="writer">The <see cref="T:System.Text.Json.Utf8JsonWriter" /> to write into.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.RoleEligibilityScheduleInstanceData.System#ClientModel#Primitives#IJsonModel{Azure#ResourceManager#Authorization#RoleEligibilityScheduleInstanceData}#Create(System.Text.Json.Utf8JsonReader@,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Reads one JSON value (including objects or arrays) from the provided reader and converts it to a model.
            </summary><param name="reader">The <see cref="T:System.Text.Json.Utf8JsonReader" /> to read.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A <typeparamref name="T" /> representation of the JSON value.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.RoleEligibilityScheduleInstanceData.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#Authorization#RoleEligibilityScheduleInstanceData}#Write(System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Writes the model into a <see cref="T:System.BinaryData" />.
            </summary><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A binary representation of the written model.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.RoleEligibilityScheduleInstanceData.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#Authorization#RoleEligibilityScheduleInstanceData}#Create(System.BinaryData,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Converts the provided <see cref="T:System.BinaryData" /> into a model.
            </summary><param name="data">The <see cref="T:System.BinaryData" /> to parse.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A <typeparamref name="T" /> representation of the data.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.RoleEligibilityScheduleInstanceData.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#Authorization#RoleEligibilityScheduleInstanceData}#GetFormatFromOptions(System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Gets the data interchange format (JSON, Xml, etc) that the model uses when communicating with the service.
            <param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param></summary><returns>The format that the model uses when communicating with the serivce.</returns>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.RoleEligibilityScheduleInstanceResource.System#ClientModel#Primitives#IJsonModel{Azure#ResourceManager#Authorization#RoleEligibilityScheduleInstanceData}#Write(System.Text.Json.Utf8JsonWriter,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Writes the model to the provided <see cref="T:System.Text.Json.Utf8JsonWriter" />.
            </summary><param name="writer">The <see cref="T:System.Text.Json.Utf8JsonWriter" /> to write into.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.RoleEligibilityScheduleInstanceResource.System#ClientModel#Primitives#IJsonModel{Azure#ResourceManager#Authorization#RoleEligibilityScheduleInstanceData}#Create(System.Text.Json.Utf8JsonReader@,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Reads one JSON value (including objects or arrays) from the provided reader and converts it to a model.
            </summary><param name="reader">The <see cref="T:System.Text.Json.Utf8JsonReader" /> to read.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A <typeparamref name="T" /> representation of the JSON value.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.RoleEligibilityScheduleInstanceResource.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#Authorization#RoleEligibilityScheduleInstanceData}#Write(System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Writes the model into a <see cref="T:System.BinaryData" />.
            </summary><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A binary representation of the written model.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.RoleEligibilityScheduleInstanceResource.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#Authorization#RoleEligibilityScheduleInstanceData}#Create(System.BinaryData,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Converts the provided <see cref="T:System.BinaryData" /> into a model.
            </summary><param name="data">The <see cref="T:System.BinaryData" /> to parse.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A <typeparamref name="T" /> representation of the data.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.RoleEligibilityScheduleInstanceResource.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#Authorization#RoleEligibilityScheduleInstanceData}#GetFormatFromOptions(System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Gets the data interchange format (JSON, Xml, etc) that the model uses when communicating with the service.
            <param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param></summary><returns>The format that the model uses when communicating with the serivce.</returns>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.RoleEligibilityScheduleRequestCollection.System#Collections#Generic#IEnumerable{Azure#ResourceManager#Authorization#RoleEligibilityScheduleRequestResource}#GetEnumerator">
            <summary>Returns an enumerator that iterates through the collection.</summary><returns>An enumerator that can be used to iterate through the collection.</returns>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.RoleEligibilityScheduleRequestCollection.System#Collections#IEnumerable#GetEnumerator">
            <summary>Returns an enumerator that iterates through a collection.</summary><returns>An <see cref="T:System.Collections.IEnumerator" /> object that can be used to iterate through the collection.</returns>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.RoleEligibilityScheduleRequestCollection.System#Collections#Generic#IAsyncEnumerable{Azure#ResourceManager#Authorization#RoleEligibilityScheduleRequestResource}#GetAsyncEnumerator(System.Threading.CancellationToken)">
            <summary>Returns an enumerator that iterates asynchronously through the collection.</summary><param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> that may be used to cancel the asynchronous iteration.</param><returns>An enumerator that can be used to iterate asynchronously through the collection.</returns>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.RoleEligibilityScheduleRequestData.System#ClientModel#Primitives#IJsonModel{Azure#ResourceManager#Authorization#RoleEligibilityScheduleRequestData}#Write(System.Text.Json.Utf8JsonWriter,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Writes the model to the provided <see cref="T:System.Text.Json.Utf8JsonWriter" />.
            </summary><param name="writer">The <see cref="T:System.Text.Json.Utf8JsonWriter" /> to write into.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.RoleEligibilityScheduleRequestData.System#ClientModel#Primitives#IJsonModel{Azure#ResourceManager#Authorization#RoleEligibilityScheduleRequestData}#Create(System.Text.Json.Utf8JsonReader@,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Reads one JSON value (including objects or arrays) from the provided reader and converts it to a model.
            </summary><param name="reader">The <see cref="T:System.Text.Json.Utf8JsonReader" /> to read.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A <typeparamref name="T" /> representation of the JSON value.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.RoleEligibilityScheduleRequestData.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#Authorization#RoleEligibilityScheduleRequestData}#Write(System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Writes the model into a <see cref="T:System.BinaryData" />.
            </summary><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A binary representation of the written model.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.RoleEligibilityScheduleRequestData.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#Authorization#RoleEligibilityScheduleRequestData}#Create(System.BinaryData,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Converts the provided <see cref="T:System.BinaryData" /> into a model.
            </summary><param name="data">The <see cref="T:System.BinaryData" /> to parse.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A <typeparamref name="T" /> representation of the data.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.RoleEligibilityScheduleRequestData.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#Authorization#RoleEligibilityScheduleRequestData}#GetFormatFromOptions(System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Gets the data interchange format (JSON, Xml, etc) that the model uses when communicating with the service.
            <param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param></summary><returns>The format that the model uses when communicating with the serivce.</returns>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.RoleEligibilityScheduleRequestResource.System#ClientModel#Primitives#IJsonModel{Azure#ResourceManager#Authorization#RoleEligibilityScheduleRequestData}#Write(System.Text.Json.Utf8JsonWriter,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Writes the model to the provided <see cref="T:System.Text.Json.Utf8JsonWriter" />.
            </summary><param name="writer">The <see cref="T:System.Text.Json.Utf8JsonWriter" /> to write into.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.RoleEligibilityScheduleRequestResource.System#ClientModel#Primitives#IJsonModel{Azure#ResourceManager#Authorization#RoleEligibilityScheduleRequestData}#Create(System.Text.Json.Utf8JsonReader@,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Reads one JSON value (including objects or arrays) from the provided reader and converts it to a model.
            </summary><param name="reader">The <see cref="T:System.Text.Json.Utf8JsonReader" /> to read.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A <typeparamref name="T" /> representation of the JSON value.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.RoleEligibilityScheduleRequestResource.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#Authorization#RoleEligibilityScheduleRequestData}#Write(System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Writes the model into a <see cref="T:System.BinaryData" />.
            </summary><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A binary representation of the written model.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.RoleEligibilityScheduleRequestResource.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#Authorization#RoleEligibilityScheduleRequestData}#Create(System.BinaryData,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Converts the provided <see cref="T:System.BinaryData" /> into a model.
            </summary><param name="data">The <see cref="T:System.BinaryData" /> to parse.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A <typeparamref name="T" /> representation of the data.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.RoleEligibilityScheduleRequestResource.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#Authorization#RoleEligibilityScheduleRequestData}#GetFormatFromOptions(System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Gets the data interchange format (JSON, Xml, etc) that the model uses when communicating with the service.
            <param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param></summary><returns>The format that the model uses when communicating with the serivce.</returns>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.RoleEligibilityScheduleResource.System#ClientModel#Primitives#IJsonModel{Azure#ResourceManager#Authorization#RoleEligibilityScheduleData}#Write(System.Text.Json.Utf8JsonWriter,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Writes the model to the provided <see cref="T:System.Text.Json.Utf8JsonWriter" />.
            </summary><param name="writer">The <see cref="T:System.Text.Json.Utf8JsonWriter" /> to write into.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.RoleEligibilityScheduleResource.System#ClientModel#Primitives#IJsonModel{Azure#ResourceManager#Authorization#RoleEligibilityScheduleData}#Create(System.Text.Json.Utf8JsonReader@,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Reads one JSON value (including objects or arrays) from the provided reader and converts it to a model.
            </summary><param name="reader">The <see cref="T:System.Text.Json.Utf8JsonReader" /> to read.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A <typeparamref name="T" /> representation of the JSON value.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.RoleEligibilityScheduleResource.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#Authorization#RoleEligibilityScheduleData}#Write(System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Writes the model into a <see cref="T:System.BinaryData" />.
            </summary><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A binary representation of the written model.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.RoleEligibilityScheduleResource.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#Authorization#RoleEligibilityScheduleData}#Create(System.BinaryData,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Converts the provided <see cref="T:System.BinaryData" /> into a model.
            </summary><param name="data">The <see cref="T:System.BinaryData" /> to parse.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A <typeparamref name="T" /> representation of the data.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.RoleEligibilityScheduleResource.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#Authorization#RoleEligibilityScheduleData}#GetFormatFromOptions(System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Gets the data interchange format (JSON, Xml, etc) that the model uses when communicating with the service.
            <param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param></summary><returns>The format that the model uses when communicating with the serivce.</returns>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.RoleManagementPolicyAssignmentCollection.System#Collections#Generic#IEnumerable{Azure#ResourceManager#Authorization#RoleManagementPolicyAssignmentResource}#GetEnumerator">
            <summary>Returns an enumerator that iterates through the collection.</summary><returns>An enumerator that can be used to iterate through the collection.</returns>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.RoleManagementPolicyAssignmentCollection.System#Collections#IEnumerable#GetEnumerator">
            <summary>Returns an enumerator that iterates through a collection.</summary><returns>An <see cref="T:System.Collections.IEnumerator" /> object that can be used to iterate through the collection.</returns>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.RoleManagementPolicyAssignmentCollection.System#Collections#Generic#IAsyncEnumerable{Azure#ResourceManager#Authorization#RoleManagementPolicyAssignmentResource}#GetAsyncEnumerator(System.Threading.CancellationToken)">
            <summary>Returns an enumerator that iterates asynchronously through the collection.</summary><param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> that may be used to cancel the asynchronous iteration.</param><returns>An enumerator that can be used to iterate asynchronously through the collection.</returns>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.RoleManagementPolicyAssignmentData.System#ClientModel#Primitives#IJsonModel{Azure#ResourceManager#Authorization#RoleManagementPolicyAssignmentData}#Write(System.Text.Json.Utf8JsonWriter,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Writes the model to the provided <see cref="T:System.Text.Json.Utf8JsonWriter" />.
            </summary><param name="writer">The <see cref="T:System.Text.Json.Utf8JsonWriter" /> to write into.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.RoleManagementPolicyAssignmentData.System#ClientModel#Primitives#IJsonModel{Azure#ResourceManager#Authorization#RoleManagementPolicyAssignmentData}#Create(System.Text.Json.Utf8JsonReader@,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Reads one JSON value (including objects or arrays) from the provided reader and converts it to a model.
            </summary><param name="reader">The <see cref="T:System.Text.Json.Utf8JsonReader" /> to read.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A <typeparamref name="T" /> representation of the JSON value.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.RoleManagementPolicyAssignmentData.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#Authorization#RoleManagementPolicyAssignmentData}#Write(System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Writes the model into a <see cref="T:System.BinaryData" />.
            </summary><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A binary representation of the written model.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.RoleManagementPolicyAssignmentData.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#Authorization#RoleManagementPolicyAssignmentData}#Create(System.BinaryData,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Converts the provided <see cref="T:System.BinaryData" /> into a model.
            </summary><param name="data">The <see cref="T:System.BinaryData" /> to parse.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A <typeparamref name="T" /> representation of the data.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.RoleManagementPolicyAssignmentData.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#Authorization#RoleManagementPolicyAssignmentData}#GetFormatFromOptions(System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Gets the data interchange format (JSON, Xml, etc) that the model uses when communicating with the service.
            <param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param></summary><returns>The format that the model uses when communicating with the serivce.</returns>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.RoleManagementPolicyAssignmentResource.System#ClientModel#Primitives#IJsonModel{Azure#ResourceManager#Authorization#RoleManagementPolicyAssignmentData}#Write(System.Text.Json.Utf8JsonWriter,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Writes the model to the provided <see cref="T:System.Text.Json.Utf8JsonWriter" />.
            </summary><param name="writer">The <see cref="T:System.Text.Json.Utf8JsonWriter" /> to write into.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.RoleManagementPolicyAssignmentResource.System#ClientModel#Primitives#IJsonModel{Azure#ResourceManager#Authorization#RoleManagementPolicyAssignmentData}#Create(System.Text.Json.Utf8JsonReader@,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Reads one JSON value (including objects or arrays) from the provided reader and converts it to a model.
            </summary><param name="reader">The <see cref="T:System.Text.Json.Utf8JsonReader" /> to read.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A <typeparamref name="T" /> representation of the JSON value.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.RoleManagementPolicyAssignmentResource.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#Authorization#RoleManagementPolicyAssignmentData}#Write(System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Writes the model into a <see cref="T:System.BinaryData" />.
            </summary><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A binary representation of the written model.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.RoleManagementPolicyAssignmentResource.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#Authorization#RoleManagementPolicyAssignmentData}#Create(System.BinaryData,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Converts the provided <see cref="T:System.BinaryData" /> into a model.
            </summary><param name="data">The <see cref="T:System.BinaryData" /> to parse.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A <typeparamref name="T" /> representation of the data.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.RoleManagementPolicyAssignmentResource.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#Authorization#RoleManagementPolicyAssignmentData}#GetFormatFromOptions(System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Gets the data interchange format (JSON, Xml, etc) that the model uses when communicating with the service.
            <param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param></summary><returns>The format that the model uses when communicating with the serivce.</returns>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.RoleManagementPolicyCollection.System#Collections#Generic#IEnumerable{Azure#ResourceManager#Authorization#RoleManagementPolicyResource}#GetEnumerator">
            <summary>Returns an enumerator that iterates through the collection.</summary><returns>An enumerator that can be used to iterate through the collection.</returns>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.RoleManagementPolicyCollection.System#Collections#IEnumerable#GetEnumerator">
            <summary>Returns an enumerator that iterates through a collection.</summary><returns>An <see cref="T:System.Collections.IEnumerator" /> object that can be used to iterate through the collection.</returns>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.RoleManagementPolicyCollection.System#Collections#Generic#IAsyncEnumerable{Azure#ResourceManager#Authorization#RoleManagementPolicyResource}#GetAsyncEnumerator(System.Threading.CancellationToken)">
            <summary>Returns an enumerator that iterates asynchronously through the collection.</summary><param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> that may be used to cancel the asynchronous iteration.</param><returns>An enumerator that can be used to iterate asynchronously through the collection.</returns>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.RoleManagementPolicyData.System#ClientModel#Primitives#IJsonModel{Azure#ResourceManager#Authorization#RoleManagementPolicyData}#Write(System.Text.Json.Utf8JsonWriter,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Writes the model to the provided <see cref="T:System.Text.Json.Utf8JsonWriter" />.
            </summary><param name="writer">The <see cref="T:System.Text.Json.Utf8JsonWriter" /> to write into.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.RoleManagementPolicyData.System#ClientModel#Primitives#IJsonModel{Azure#ResourceManager#Authorization#RoleManagementPolicyData}#Create(System.Text.Json.Utf8JsonReader@,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Reads one JSON value (including objects or arrays) from the provided reader and converts it to a model.
            </summary><param name="reader">The <see cref="T:System.Text.Json.Utf8JsonReader" /> to read.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A <typeparamref name="T" /> representation of the JSON value.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.RoleManagementPolicyData.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#Authorization#RoleManagementPolicyData}#Write(System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Writes the model into a <see cref="T:System.BinaryData" />.
            </summary><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A binary representation of the written model.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.RoleManagementPolicyData.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#Authorization#RoleManagementPolicyData}#Create(System.BinaryData,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Converts the provided <see cref="T:System.BinaryData" /> into a model.
            </summary><param name="data">The <see cref="T:System.BinaryData" /> to parse.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A <typeparamref name="T" /> representation of the data.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.RoleManagementPolicyData.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#Authorization#RoleManagementPolicyData}#GetFormatFromOptions(System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Gets the data interchange format (JSON, Xml, etc) that the model uses when communicating with the service.
            <param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param></summary><returns>The format that the model uses when communicating with the serivce.</returns>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.RoleManagementPolicyResource.System#ClientModel#Primitives#IJsonModel{Azure#ResourceManager#Authorization#RoleManagementPolicyData}#Write(System.Text.Json.Utf8JsonWriter,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Writes the model to the provided <see cref="T:System.Text.Json.Utf8JsonWriter" />.
            </summary><param name="writer">The <see cref="T:System.Text.Json.Utf8JsonWriter" /> to write into.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.RoleManagementPolicyResource.System#ClientModel#Primitives#IJsonModel{Azure#ResourceManager#Authorization#RoleManagementPolicyData}#Create(System.Text.Json.Utf8JsonReader@,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Reads one JSON value (including objects or arrays) from the provided reader and converts it to a model.
            </summary><param name="reader">The <see cref="T:System.Text.Json.Utf8JsonReader" /> to read.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A <typeparamref name="T" /> representation of the JSON value.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.RoleManagementPolicyResource.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#Authorization#RoleManagementPolicyData}#Write(System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Writes the model into a <see cref="T:System.BinaryData" />.
            </summary><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A binary representation of the written model.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.RoleManagementPolicyResource.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#Authorization#RoleManagementPolicyData}#Create(System.BinaryData,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Converts the provided <see cref="T:System.BinaryData" /> into a model.
            </summary><param name="data">The <see cref="T:System.BinaryData" /> to parse.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A <typeparamref name="T" /> representation of the data.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.RoleManagementPolicyResource.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#Authorization#RoleManagementPolicyData}#GetFormatFromOptions(System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Gets the data interchange format (JSON, Xml, etc) that the model uses when communicating with the service.
            <param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param></summary><returns>The format that the model uses when communicating with the serivce.</returns>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.Models.AuthorizationClassicAdministrator.System#ClientModel#Primitives#IJsonModel{Azure#ResourceManager#Authorization#Models#AuthorizationClassicAdministrator}#Write(System.Text.Json.Utf8JsonWriter,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Writes the model to the provided <see cref="T:System.Text.Json.Utf8JsonWriter" />.
            </summary><param name="writer">The <see cref="T:System.Text.Json.Utf8JsonWriter" /> to write into.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.Models.AuthorizationClassicAdministrator.System#ClientModel#Primitives#IJsonModel{Azure#ResourceManager#Authorization#Models#AuthorizationClassicAdministrator}#Create(System.Text.Json.Utf8JsonReader@,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Reads one JSON value (including objects or arrays) from the provided reader and converts it to a model.
            </summary><param name="reader">The <see cref="T:System.Text.Json.Utf8JsonReader" /> to read.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A <typeparamref name="T" /> representation of the JSON value.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.Models.AuthorizationClassicAdministrator.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#Authorization#Models#AuthorizationClassicAdministrator}#Write(System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Writes the model into a <see cref="T:System.BinaryData" />.
            </summary><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A binary representation of the written model.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.Models.AuthorizationClassicAdministrator.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#Authorization#Models#AuthorizationClassicAdministrator}#Create(System.BinaryData,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Converts the provided <see cref="T:System.BinaryData" /> into a model.
            </summary><param name="data">The <see cref="T:System.BinaryData" /> to parse.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A <typeparamref name="T" /> representation of the data.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.Models.AuthorizationClassicAdministrator.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#Authorization#Models#AuthorizationClassicAdministrator}#GetFormatFromOptions(System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Gets the data interchange format (JSON, Xml, etc) that the model uses when communicating with the service.
            <param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param></summary><returns>The format that the model uses when communicating with the serivce.</returns>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.Models.AuthorizationClassicAdministratorListResult.System#ClientModel#Primitives#IJsonModel{Azure#ResourceManager#Authorization#Models#AuthorizationClassicAdministratorListResult}#Write(System.Text.Json.Utf8JsonWriter,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Writes the model to the provided <see cref="T:System.Text.Json.Utf8JsonWriter" />.
            </summary><param name="writer">The <see cref="T:System.Text.Json.Utf8JsonWriter" /> to write into.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.Models.AuthorizationClassicAdministratorListResult.System#ClientModel#Primitives#IJsonModel{Azure#ResourceManager#Authorization#Models#AuthorizationClassicAdministratorListResult}#Create(System.Text.Json.Utf8JsonReader@,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Reads one JSON value (including objects or arrays) from the provided reader and converts it to a model.
            </summary><param name="reader">The <see cref="T:System.Text.Json.Utf8JsonReader" /> to read.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A <typeparamref name="T" /> representation of the JSON value.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.Models.AuthorizationClassicAdministratorListResult.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#Authorization#Models#AuthorizationClassicAdministratorListResult}#Write(System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Writes the model into a <see cref="T:System.BinaryData" />.
            </summary><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A binary representation of the written model.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.Models.AuthorizationClassicAdministratorListResult.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#Authorization#Models#AuthorizationClassicAdministratorListResult}#Create(System.BinaryData,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Converts the provided <see cref="T:System.BinaryData" /> into a model.
            </summary><param name="data">The <see cref="T:System.BinaryData" /> to parse.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A <typeparamref name="T" /> representation of the data.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.Models.AuthorizationClassicAdministratorListResult.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#Authorization#Models#AuthorizationClassicAdministratorListResult}#GetFormatFromOptions(System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Gets the data interchange format (JSON, Xml, etc) that the model uses when communicating with the service.
            <param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param></summary><returns>The format that the model uses when communicating with the serivce.</returns>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.Models.AuthorizationProviderOperationInfo.System#ClientModel#Primitives#IJsonModel{Azure#ResourceManager#Authorization#Models#AuthorizationProviderOperationInfo}#Write(System.Text.Json.Utf8JsonWriter,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Writes the model to the provided <see cref="T:System.Text.Json.Utf8JsonWriter" />.
            </summary><param name="writer">The <see cref="T:System.Text.Json.Utf8JsonWriter" /> to write into.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.Models.AuthorizationProviderOperationInfo.System#ClientModel#Primitives#IJsonModel{Azure#ResourceManager#Authorization#Models#AuthorizationProviderOperationInfo}#Create(System.Text.Json.Utf8JsonReader@,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Reads one JSON value (including objects or arrays) from the provided reader and converts it to a model.
            </summary><param name="reader">The <see cref="T:System.Text.Json.Utf8JsonReader" /> to read.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A <typeparamref name="T" /> representation of the JSON value.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.Models.AuthorizationProviderOperationInfo.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#Authorization#Models#AuthorizationProviderOperationInfo}#Write(System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Writes the model into a <see cref="T:System.BinaryData" />.
            </summary><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A binary representation of the written model.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.Models.AuthorizationProviderOperationInfo.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#Authorization#Models#AuthorizationProviderOperationInfo}#Create(System.BinaryData,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Converts the provided <see cref="T:System.BinaryData" /> into a model.
            </summary><param name="data">The <see cref="T:System.BinaryData" /> to parse.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A <typeparamref name="T" /> representation of the data.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.Models.AuthorizationProviderOperationInfo.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#Authorization#Models#AuthorizationProviderOperationInfo}#GetFormatFromOptions(System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Gets the data interchange format (JSON, Xml, etc) that the model uses when communicating with the service.
            <param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param></summary><returns>The format that the model uses when communicating with the serivce.</returns>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.Models.AuthorizationProviderOperationsMetadataListResult.System#ClientModel#Primitives#IJsonModel{Azure#ResourceManager#Authorization#Models#AuthorizationProviderOperationsMetadataListResult}#Write(System.Text.Json.Utf8JsonWriter,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Writes the model to the provided <see cref="T:System.Text.Json.Utf8JsonWriter" />.
            </summary><param name="writer">The <see cref="T:System.Text.Json.Utf8JsonWriter" /> to write into.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.Models.AuthorizationProviderOperationsMetadataListResult.System#ClientModel#Primitives#IJsonModel{Azure#ResourceManager#Authorization#Models#AuthorizationProviderOperationsMetadataListResult}#Create(System.Text.Json.Utf8JsonReader@,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Reads one JSON value (including objects or arrays) from the provided reader and converts it to a model.
            </summary><param name="reader">The <see cref="T:System.Text.Json.Utf8JsonReader" /> to read.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A <typeparamref name="T" /> representation of the JSON value.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.Models.AuthorizationProviderOperationsMetadataListResult.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#Authorization#Models#AuthorizationProviderOperationsMetadataListResult}#Write(System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Writes the model into a <see cref="T:System.BinaryData" />.
            </summary><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A binary representation of the written model.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.Models.AuthorizationProviderOperationsMetadataListResult.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#Authorization#Models#AuthorizationProviderOperationsMetadataListResult}#Create(System.BinaryData,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Converts the provided <see cref="T:System.BinaryData" /> into a model.
            </summary><param name="data">The <see cref="T:System.BinaryData" /> to parse.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A <typeparamref name="T" /> representation of the data.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.Models.AuthorizationProviderOperationsMetadataListResult.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#Authorization#Models#AuthorizationProviderOperationsMetadataListResult}#GetFormatFromOptions(System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Gets the data interchange format (JSON, Xml, etc) that the model uses when communicating with the service.
            <param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param></summary><returns>The format that the model uses when communicating with the serivce.</returns>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.Models.AuthorizationProviderResourceType.System#ClientModel#Primitives#IJsonModel{Azure#ResourceManager#Authorization#Models#AuthorizationProviderResourceType}#Write(System.Text.Json.Utf8JsonWriter,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Writes the model to the provided <see cref="T:System.Text.Json.Utf8JsonWriter" />.
            </summary><param name="writer">The <see cref="T:System.Text.Json.Utf8JsonWriter" /> to write into.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.Models.AuthorizationProviderResourceType.System#ClientModel#Primitives#IJsonModel{Azure#ResourceManager#Authorization#Models#AuthorizationProviderResourceType}#Create(System.Text.Json.Utf8JsonReader@,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Reads one JSON value (including objects or arrays) from the provided reader and converts it to a model.
            </summary><param name="reader">The <see cref="T:System.Text.Json.Utf8JsonReader" /> to read.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A <typeparamref name="T" /> representation of the JSON value.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.Models.AuthorizationProviderResourceType.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#Authorization#Models#AuthorizationProviderResourceType}#Write(System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Writes the model into a <see cref="T:System.BinaryData" />.
            </summary><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A binary representation of the written model.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.Models.AuthorizationProviderResourceType.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#Authorization#Models#AuthorizationProviderResourceType}#Create(System.BinaryData,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Converts the provided <see cref="T:System.BinaryData" /> into a model.
            </summary><param name="data">The <see cref="T:System.BinaryData" /> to parse.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A <typeparamref name="T" /> representation of the data.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.Models.AuthorizationProviderResourceType.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#Authorization#Models#AuthorizationProviderResourceType}#GetFormatFromOptions(System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Gets the data interchange format (JSON, Xml, etc) that the model uses when communicating with the service.
            <param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param></summary><returns>The format that the model uses when communicating with the serivce.</returns>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.Models.DenyAssignmentListResult.System#ClientModel#Primitives#IJsonModel{Azure#ResourceManager#Authorization#Models#DenyAssignmentListResult}#Write(System.Text.Json.Utf8JsonWriter,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Writes the model to the provided <see cref="T:System.Text.Json.Utf8JsonWriter" />.
            </summary><param name="writer">The <see cref="T:System.Text.Json.Utf8JsonWriter" /> to write into.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.Models.DenyAssignmentListResult.System#ClientModel#Primitives#IJsonModel{Azure#ResourceManager#Authorization#Models#DenyAssignmentListResult}#Create(System.Text.Json.Utf8JsonReader@,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Reads one JSON value (including objects or arrays) from the provided reader and converts it to a model.
            </summary><param name="reader">The <see cref="T:System.Text.Json.Utf8JsonReader" /> to read.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A <typeparamref name="T" /> representation of the JSON value.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.Models.DenyAssignmentListResult.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#Authorization#Models#DenyAssignmentListResult}#Write(System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Writes the model into a <see cref="T:System.BinaryData" />.
            </summary><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A binary representation of the written model.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.Models.DenyAssignmentListResult.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#Authorization#Models#DenyAssignmentListResult}#Create(System.BinaryData,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Converts the provided <see cref="T:System.BinaryData" /> into a model.
            </summary><param name="data">The <see cref="T:System.BinaryData" /> to parse.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A <typeparamref name="T" /> representation of the data.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.Models.DenyAssignmentListResult.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#Authorization#Models#DenyAssignmentListResult}#GetFormatFromOptions(System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Gets the data interchange format (JSON, Xml, etc) that the model uses when communicating with the service.
            <param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param></summary><returns>The format that the model uses when communicating with the serivce.</returns>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.Models.DenyAssignmentPermission.System#ClientModel#Primitives#IJsonModel{Azure#ResourceManager#Authorization#Models#DenyAssignmentPermission}#Write(System.Text.Json.Utf8JsonWriter,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Writes the model to the provided <see cref="T:System.Text.Json.Utf8JsonWriter" />.
            </summary><param name="writer">The <see cref="T:System.Text.Json.Utf8JsonWriter" /> to write into.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.Models.DenyAssignmentPermission.System#ClientModel#Primitives#IJsonModel{Azure#ResourceManager#Authorization#Models#DenyAssignmentPermission}#Create(System.Text.Json.Utf8JsonReader@,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Reads one JSON value (including objects or arrays) from the provided reader and converts it to a model.
            </summary><param name="reader">The <see cref="T:System.Text.Json.Utf8JsonReader" /> to read.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A <typeparamref name="T" /> representation of the JSON value.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.Models.DenyAssignmentPermission.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#Authorization#Models#DenyAssignmentPermission}#Write(System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Writes the model into a <see cref="T:System.BinaryData" />.
            </summary><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A binary representation of the written model.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.Models.DenyAssignmentPermission.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#Authorization#Models#DenyAssignmentPermission}#Create(System.BinaryData,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Converts the provided <see cref="T:System.BinaryData" /> into a model.
            </summary><param name="data">The <see cref="T:System.BinaryData" /> to parse.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A <typeparamref name="T" /> representation of the data.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.Models.DenyAssignmentPermission.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#Authorization#Models#DenyAssignmentPermission}#GetFormatFromOptions(System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Gets the data interchange format (JSON, Xml, etc) that the model uses when communicating with the service.
            <param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param></summary><returns>The format that the model uses when communicating with the serivce.</returns>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.Models.EligibleChildResource.System#ClientModel#Primitives#IJsonModel{Azure#ResourceManager#Authorization#Models#EligibleChildResource}#Write(System.Text.Json.Utf8JsonWriter,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Writes the model to the provided <see cref="T:System.Text.Json.Utf8JsonWriter" />.
            </summary><param name="writer">The <see cref="T:System.Text.Json.Utf8JsonWriter" /> to write into.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.Models.EligibleChildResource.System#ClientModel#Primitives#IJsonModel{Azure#ResourceManager#Authorization#Models#EligibleChildResource}#Create(System.Text.Json.Utf8JsonReader@,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Reads one JSON value (including objects or arrays) from the provided reader and converts it to a model.
            </summary><param name="reader">The <see cref="T:System.Text.Json.Utf8JsonReader" /> to read.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A <typeparamref name="T" /> representation of the JSON value.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.Models.EligibleChildResource.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#Authorization#Models#EligibleChildResource}#Write(System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Writes the model into a <see cref="T:System.BinaryData" />.
            </summary><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A binary representation of the written model.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.Models.EligibleChildResource.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#Authorization#Models#EligibleChildResource}#Create(System.BinaryData,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Converts the provided <see cref="T:System.BinaryData" /> into a model.
            </summary><param name="data">The <see cref="T:System.BinaryData" /> to parse.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A <typeparamref name="T" /> representation of the data.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.Models.EligibleChildResource.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#Authorization#Models#EligibleChildResource}#GetFormatFromOptions(System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Gets the data interchange format (JSON, Xml, etc) that the model uses when communicating with the service.
            <param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param></summary><returns>The format that the model uses when communicating with the serivce.</returns>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.Models.EligibleChildResourcesListResult.System#ClientModel#Primitives#IJsonModel{Azure#ResourceManager#Authorization#Models#EligibleChildResourcesListResult}#Write(System.Text.Json.Utf8JsonWriter,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Writes the model to the provided <see cref="T:System.Text.Json.Utf8JsonWriter" />.
            </summary><param name="writer">The <see cref="T:System.Text.Json.Utf8JsonWriter" /> to write into.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.Models.EligibleChildResourcesListResult.System#ClientModel#Primitives#IJsonModel{Azure#ResourceManager#Authorization#Models#EligibleChildResourcesListResult}#Create(System.Text.Json.Utf8JsonReader@,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Reads one JSON value (including objects or arrays) from the provided reader and converts it to a model.
            </summary><param name="reader">The <see cref="T:System.Text.Json.Utf8JsonReader" /> to read.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A <typeparamref name="T" /> representation of the JSON value.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.Models.EligibleChildResourcesListResult.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#Authorization#Models#EligibleChildResourcesListResult}#Write(System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Writes the model into a <see cref="T:System.BinaryData" />.
            </summary><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A binary representation of the written model.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.Models.EligibleChildResourcesListResult.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#Authorization#Models#EligibleChildResourcesListResult}#Create(System.BinaryData,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Converts the provided <see cref="T:System.BinaryData" /> into a model.
            </summary><param name="data">The <see cref="T:System.BinaryData" /> to parse.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A <typeparamref name="T" /> representation of the data.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.Models.EligibleChildResourcesListResult.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#Authorization#Models#EligibleChildResourcesListResult}#GetFormatFromOptions(System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Gets the data interchange format (JSON, Xml, etc) that the model uses when communicating with the service.
            <param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param></summary><returns>The format that the model uses when communicating with the serivce.</returns>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.Models.PolicyAssignmentProperties.System#ClientModel#Primitives#IJsonModel{Azure#ResourceManager#Authorization#Models#PolicyAssignmentProperties}#Write(System.Text.Json.Utf8JsonWriter,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Writes the model to the provided <see cref="T:System.Text.Json.Utf8JsonWriter" />.
            </summary><param name="writer">The <see cref="T:System.Text.Json.Utf8JsonWriter" /> to write into.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.Models.PolicyAssignmentProperties.System#ClientModel#Primitives#IJsonModel{Azure#ResourceManager#Authorization#Models#PolicyAssignmentProperties}#Create(System.Text.Json.Utf8JsonReader@,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Reads one JSON value (including objects or arrays) from the provided reader and converts it to a model.
            </summary><param name="reader">The <see cref="T:System.Text.Json.Utf8JsonReader" /> to read.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A <typeparamref name="T" /> representation of the JSON value.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.Models.PolicyAssignmentProperties.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#Authorization#Models#PolicyAssignmentProperties}#Write(System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Writes the model into a <see cref="T:System.BinaryData" />.
            </summary><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A binary representation of the written model.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.Models.PolicyAssignmentProperties.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#Authorization#Models#PolicyAssignmentProperties}#Create(System.BinaryData,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Converts the provided <see cref="T:System.BinaryData" /> into a model.
            </summary><param name="data">The <see cref="T:System.BinaryData" /> to parse.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A <typeparamref name="T" /> representation of the data.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.Models.PolicyAssignmentProperties.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#Authorization#Models#PolicyAssignmentProperties}#GetFormatFromOptions(System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Gets the data interchange format (JSON, Xml, etc) that the model uses when communicating with the service.
            <param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param></summary><returns>The format that the model uses when communicating with the serivce.</returns>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.Models.RoleAssignmentCreateOrUpdateContent.System#ClientModel#Primitives#IJsonModel{Azure#ResourceManager#Authorization#Models#RoleAssignmentCreateOrUpdateContent}#Write(System.Text.Json.Utf8JsonWriter,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Writes the model to the provided <see cref="T:System.Text.Json.Utf8JsonWriter" />.
            </summary><param name="writer">The <see cref="T:System.Text.Json.Utf8JsonWriter" /> to write into.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.Models.RoleAssignmentCreateOrUpdateContent.System#ClientModel#Primitives#IJsonModel{Azure#ResourceManager#Authorization#Models#RoleAssignmentCreateOrUpdateContent}#Create(System.Text.Json.Utf8JsonReader@,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Reads one JSON value (including objects or arrays) from the provided reader and converts it to a model.
            </summary><param name="reader">The <see cref="T:System.Text.Json.Utf8JsonReader" /> to read.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A <typeparamref name="T" /> representation of the JSON value.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.Models.RoleAssignmentCreateOrUpdateContent.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#Authorization#Models#RoleAssignmentCreateOrUpdateContent}#Write(System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Writes the model into a <see cref="T:System.BinaryData" />.
            </summary><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A binary representation of the written model.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.Models.RoleAssignmentCreateOrUpdateContent.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#Authorization#Models#RoleAssignmentCreateOrUpdateContent}#Create(System.BinaryData,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Converts the provided <see cref="T:System.BinaryData" /> into a model.
            </summary><param name="data">The <see cref="T:System.BinaryData" /> to parse.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A <typeparamref name="T" /> representation of the data.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.Models.RoleAssignmentCreateOrUpdateContent.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#Authorization#Models#RoleAssignmentCreateOrUpdateContent}#GetFormatFromOptions(System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Gets the data interchange format (JSON, Xml, etc) that the model uses when communicating with the service.
            <param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param></summary><returns>The format that the model uses when communicating with the serivce.</returns>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.Models.RoleAssignmentListResult.System#ClientModel#Primitives#IJsonModel{Azure#ResourceManager#Authorization#Models#RoleAssignmentListResult}#Write(System.Text.Json.Utf8JsonWriter,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Writes the model to the provided <see cref="T:System.Text.Json.Utf8JsonWriter" />.
            </summary><param name="writer">The <see cref="T:System.Text.Json.Utf8JsonWriter" /> to write into.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.Models.RoleAssignmentListResult.System#ClientModel#Primitives#IJsonModel{Azure#ResourceManager#Authorization#Models#RoleAssignmentListResult}#Create(System.Text.Json.Utf8JsonReader@,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Reads one JSON value (including objects or arrays) from the provided reader and converts it to a model.
            </summary><param name="reader">The <see cref="T:System.Text.Json.Utf8JsonReader" /> to read.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A <typeparamref name="T" /> representation of the JSON value.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.Models.RoleAssignmentListResult.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#Authorization#Models#RoleAssignmentListResult}#Write(System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Writes the model into a <see cref="T:System.BinaryData" />.
            </summary><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A binary representation of the written model.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.Models.RoleAssignmentListResult.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#Authorization#Models#RoleAssignmentListResult}#Create(System.BinaryData,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Converts the provided <see cref="T:System.BinaryData" /> into a model.
            </summary><param name="data">The <see cref="T:System.BinaryData" /> to parse.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A <typeparamref name="T" /> representation of the data.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.Models.RoleAssignmentListResult.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#Authorization#Models#RoleAssignmentListResult}#GetFormatFromOptions(System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Gets the data interchange format (JSON, Xml, etc) that the model uses when communicating with the service.
            <param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param></summary><returns>The format that the model uses when communicating with the serivce.</returns>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.Models.RoleAssignmentScheduleInstanceListResult.System#ClientModel#Primitives#IJsonModel{Azure#ResourceManager#Authorization#Models#RoleAssignmentScheduleInstanceListResult}#Write(System.Text.Json.Utf8JsonWriter,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Writes the model to the provided <see cref="T:System.Text.Json.Utf8JsonWriter" />.
            </summary><param name="writer">The <see cref="T:System.Text.Json.Utf8JsonWriter" /> to write into.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.Models.RoleAssignmentScheduleInstanceListResult.System#ClientModel#Primitives#IJsonModel{Azure#ResourceManager#Authorization#Models#RoleAssignmentScheduleInstanceListResult}#Create(System.Text.Json.Utf8JsonReader@,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Reads one JSON value (including objects or arrays) from the provided reader and converts it to a model.
            </summary><param name="reader">The <see cref="T:System.Text.Json.Utf8JsonReader" /> to read.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A <typeparamref name="T" /> representation of the JSON value.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.Models.RoleAssignmentScheduleInstanceListResult.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#Authorization#Models#RoleAssignmentScheduleInstanceListResult}#Write(System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Writes the model into a <see cref="T:System.BinaryData" />.
            </summary><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A binary representation of the written model.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.Models.RoleAssignmentScheduleInstanceListResult.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#Authorization#Models#RoleAssignmentScheduleInstanceListResult}#Create(System.BinaryData,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Converts the provided <see cref="T:System.BinaryData" /> into a model.
            </summary><param name="data">The <see cref="T:System.BinaryData" /> to parse.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A <typeparamref name="T" /> representation of the data.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.Models.RoleAssignmentScheduleInstanceListResult.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#Authorization#Models#RoleAssignmentScheduleInstanceListResult}#GetFormatFromOptions(System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Gets the data interchange format (JSON, Xml, etc) that the model uses when communicating with the service.
            <param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param></summary><returns>The format that the model uses when communicating with the serivce.</returns>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.Models.RoleAssignmentScheduleListResult.System#ClientModel#Primitives#IJsonModel{Azure#ResourceManager#Authorization#Models#RoleAssignmentScheduleListResult}#Write(System.Text.Json.Utf8JsonWriter,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Writes the model to the provided <see cref="T:System.Text.Json.Utf8JsonWriter" />.
            </summary><param name="writer">The <see cref="T:System.Text.Json.Utf8JsonWriter" /> to write into.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.Models.RoleAssignmentScheduleListResult.System#ClientModel#Primitives#IJsonModel{Azure#ResourceManager#Authorization#Models#RoleAssignmentScheduleListResult}#Create(System.Text.Json.Utf8JsonReader@,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Reads one JSON value (including objects or arrays) from the provided reader and converts it to a model.
            </summary><param name="reader">The <see cref="T:System.Text.Json.Utf8JsonReader" /> to read.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A <typeparamref name="T" /> representation of the JSON value.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.Models.RoleAssignmentScheduleListResult.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#Authorization#Models#RoleAssignmentScheduleListResult}#Write(System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Writes the model into a <see cref="T:System.BinaryData" />.
            </summary><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A binary representation of the written model.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.Models.RoleAssignmentScheduleListResult.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#Authorization#Models#RoleAssignmentScheduleListResult}#Create(System.BinaryData,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Converts the provided <see cref="T:System.BinaryData" /> into a model.
            </summary><param name="data">The <see cref="T:System.BinaryData" /> to parse.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A <typeparamref name="T" /> representation of the data.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.Models.RoleAssignmentScheduleListResult.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#Authorization#Models#RoleAssignmentScheduleListResult}#GetFormatFromOptions(System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Gets the data interchange format (JSON, Xml, etc) that the model uses when communicating with the service.
            <param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param></summary><returns>The format that the model uses when communicating with the serivce.</returns>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.Models.RoleAssignmentScheduleRequestListResult.System#ClientModel#Primitives#IJsonModel{Azure#ResourceManager#Authorization#Models#RoleAssignmentScheduleRequestListResult}#Write(System.Text.Json.Utf8JsonWriter,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Writes the model to the provided <see cref="T:System.Text.Json.Utf8JsonWriter" />.
            </summary><param name="writer">The <see cref="T:System.Text.Json.Utf8JsonWriter" /> to write into.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.Models.RoleAssignmentScheduleRequestListResult.System#ClientModel#Primitives#IJsonModel{Azure#ResourceManager#Authorization#Models#RoleAssignmentScheduleRequestListResult}#Create(System.Text.Json.Utf8JsonReader@,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Reads one JSON value (including objects or arrays) from the provided reader and converts it to a model.
            </summary><param name="reader">The <see cref="T:System.Text.Json.Utf8JsonReader" /> to read.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A <typeparamref name="T" /> representation of the JSON value.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.Models.RoleAssignmentScheduleRequestListResult.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#Authorization#Models#RoleAssignmentScheduleRequestListResult}#Write(System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Writes the model into a <see cref="T:System.BinaryData" />.
            </summary><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A binary representation of the written model.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.Models.RoleAssignmentScheduleRequestListResult.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#Authorization#Models#RoleAssignmentScheduleRequestListResult}#Create(System.BinaryData,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Converts the provided <see cref="T:System.BinaryData" /> into a model.
            </summary><param name="data">The <see cref="T:System.BinaryData" /> to parse.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A <typeparamref name="T" /> representation of the data.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.Models.RoleAssignmentScheduleRequestListResult.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#Authorization#Models#RoleAssignmentScheduleRequestListResult}#GetFormatFromOptions(System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Gets the data interchange format (JSON, Xml, etc) that the model uses when communicating with the service.
            <param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param></summary><returns>The format that the model uses when communicating with the serivce.</returns>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.Models.RoleAssignmentScheduleTicketInfo.System#ClientModel#Primitives#IJsonModel{Azure#ResourceManager#Authorization#Models#RoleAssignmentScheduleTicketInfo}#Write(System.Text.Json.Utf8JsonWriter,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Writes the model to the provided <see cref="T:System.Text.Json.Utf8JsonWriter" />.
            </summary><param name="writer">The <see cref="T:System.Text.Json.Utf8JsonWriter" /> to write into.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.Models.RoleAssignmentScheduleTicketInfo.System#ClientModel#Primitives#IJsonModel{Azure#ResourceManager#Authorization#Models#RoleAssignmentScheduleTicketInfo}#Create(System.Text.Json.Utf8JsonReader@,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Reads one JSON value (including objects or arrays) from the provided reader and converts it to a model.
            </summary><param name="reader">The <see cref="T:System.Text.Json.Utf8JsonReader" /> to read.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A <typeparamref name="T" /> representation of the JSON value.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.Models.RoleAssignmentScheduleTicketInfo.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#Authorization#Models#RoleAssignmentScheduleTicketInfo}#Write(System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Writes the model into a <see cref="T:System.BinaryData" />.
            </summary><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A binary representation of the written model.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.Models.RoleAssignmentScheduleTicketInfo.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#Authorization#Models#RoleAssignmentScheduleTicketInfo}#Create(System.BinaryData,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Converts the provided <see cref="T:System.BinaryData" /> into a model.
            </summary><param name="data">The <see cref="T:System.BinaryData" /> to parse.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A <typeparamref name="T" /> representation of the data.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.Models.RoleAssignmentScheduleTicketInfo.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#Authorization#Models#RoleAssignmentScheduleTicketInfo}#GetFormatFromOptions(System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Gets the data interchange format (JSON, Xml, etc) that the model uses when communicating with the service.
            <param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param></summary><returns>The format that the model uses when communicating with the serivce.</returns>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.Models.RoleDefinitionListResult.System#ClientModel#Primitives#IJsonModel{Azure#ResourceManager#Authorization#Models#RoleDefinitionListResult}#Write(System.Text.Json.Utf8JsonWriter,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Writes the model to the provided <see cref="T:System.Text.Json.Utf8JsonWriter" />.
            </summary><param name="writer">The <see cref="T:System.Text.Json.Utf8JsonWriter" /> to write into.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.Models.RoleDefinitionListResult.System#ClientModel#Primitives#IJsonModel{Azure#ResourceManager#Authorization#Models#RoleDefinitionListResult}#Create(System.Text.Json.Utf8JsonReader@,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Reads one JSON value (including objects or arrays) from the provided reader and converts it to a model.
            </summary><param name="reader">The <see cref="T:System.Text.Json.Utf8JsonReader" /> to read.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A <typeparamref name="T" /> representation of the JSON value.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.Models.RoleDefinitionListResult.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#Authorization#Models#RoleDefinitionListResult}#Write(System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Writes the model into a <see cref="T:System.BinaryData" />.
            </summary><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A binary representation of the written model.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.Models.RoleDefinitionListResult.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#Authorization#Models#RoleDefinitionListResult}#Create(System.BinaryData,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Converts the provided <see cref="T:System.BinaryData" /> into a model.
            </summary><param name="data">The <see cref="T:System.BinaryData" /> to parse.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A <typeparamref name="T" /> representation of the data.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.Models.RoleDefinitionListResult.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#Authorization#Models#RoleDefinitionListResult}#GetFormatFromOptions(System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Gets the data interchange format (JSON, Xml, etc) that the model uses when communicating with the service.
            <param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param></summary><returns>The format that the model uses when communicating with the serivce.</returns>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.Models.RoleDefinitionPermission.System#ClientModel#Primitives#IJsonModel{Azure#ResourceManager#Authorization#Models#RoleDefinitionPermission}#Write(System.Text.Json.Utf8JsonWriter,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Writes the model to the provided <see cref="T:System.Text.Json.Utf8JsonWriter" />.
            </summary><param name="writer">The <see cref="T:System.Text.Json.Utf8JsonWriter" /> to write into.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.Models.RoleDefinitionPermission.System#ClientModel#Primitives#IJsonModel{Azure#ResourceManager#Authorization#Models#RoleDefinitionPermission}#Create(System.Text.Json.Utf8JsonReader@,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Reads one JSON value (including objects or arrays) from the provided reader and converts it to a model.
            </summary><param name="reader">The <see cref="T:System.Text.Json.Utf8JsonReader" /> to read.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A <typeparamref name="T" /> representation of the JSON value.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.Models.RoleDefinitionPermission.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#Authorization#Models#RoleDefinitionPermission}#Write(System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Writes the model into a <see cref="T:System.BinaryData" />.
            </summary><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A binary representation of the written model.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.Models.RoleDefinitionPermission.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#Authorization#Models#RoleDefinitionPermission}#Create(System.BinaryData,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Converts the provided <see cref="T:System.BinaryData" /> into a model.
            </summary><param name="data">The <see cref="T:System.BinaryData" /> to parse.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A <typeparamref name="T" /> representation of the data.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.Models.RoleDefinitionPermission.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#Authorization#Models#RoleDefinitionPermission}#GetFormatFromOptions(System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Gets the data interchange format (JSON, Xml, etc) that the model uses when communicating with the service.
            <param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param></summary><returns>The format that the model uses when communicating with the serivce.</returns>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.Models.RoleDefinitionPermissionListResult.System#ClientModel#Primitives#IJsonModel{Azure#ResourceManager#Authorization#Models#RoleDefinitionPermissionListResult}#Write(System.Text.Json.Utf8JsonWriter,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Writes the model to the provided <see cref="T:System.Text.Json.Utf8JsonWriter" />.
            </summary><param name="writer">The <see cref="T:System.Text.Json.Utf8JsonWriter" /> to write into.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.Models.RoleDefinitionPermissionListResult.System#ClientModel#Primitives#IJsonModel{Azure#ResourceManager#Authorization#Models#RoleDefinitionPermissionListResult}#Create(System.Text.Json.Utf8JsonReader@,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Reads one JSON value (including objects or arrays) from the provided reader and converts it to a model.
            </summary><param name="reader">The <see cref="T:System.Text.Json.Utf8JsonReader" /> to read.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A <typeparamref name="T" /> representation of the JSON value.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.Models.RoleDefinitionPermissionListResult.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#Authorization#Models#RoleDefinitionPermissionListResult}#Write(System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Writes the model into a <see cref="T:System.BinaryData" />.
            </summary><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A binary representation of the written model.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.Models.RoleDefinitionPermissionListResult.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#Authorization#Models#RoleDefinitionPermissionListResult}#Create(System.BinaryData,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Converts the provided <see cref="T:System.BinaryData" /> into a model.
            </summary><param name="data">The <see cref="T:System.BinaryData" /> to parse.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A <typeparamref name="T" /> representation of the data.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.Models.RoleDefinitionPermissionListResult.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#Authorization#Models#RoleDefinitionPermissionListResult}#GetFormatFromOptions(System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Gets the data interchange format (JSON, Xml, etc) that the model uses when communicating with the service.
            <param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param></summary><returns>The format that the model uses when communicating with the serivce.</returns>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.Models.RoleEligibilityScheduleInstanceListResult.System#ClientModel#Primitives#IJsonModel{Azure#ResourceManager#Authorization#Models#RoleEligibilityScheduleInstanceListResult}#Write(System.Text.Json.Utf8JsonWriter,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Writes the model to the provided <see cref="T:System.Text.Json.Utf8JsonWriter" />.
            </summary><param name="writer">The <see cref="T:System.Text.Json.Utf8JsonWriter" /> to write into.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.Models.RoleEligibilityScheduleInstanceListResult.System#ClientModel#Primitives#IJsonModel{Azure#ResourceManager#Authorization#Models#RoleEligibilityScheduleInstanceListResult}#Create(System.Text.Json.Utf8JsonReader@,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Reads one JSON value (including objects or arrays) from the provided reader and converts it to a model.
            </summary><param name="reader">The <see cref="T:System.Text.Json.Utf8JsonReader" /> to read.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A <typeparamref name="T" /> representation of the JSON value.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.Models.RoleEligibilityScheduleInstanceListResult.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#Authorization#Models#RoleEligibilityScheduleInstanceListResult}#Write(System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Writes the model into a <see cref="T:System.BinaryData" />.
            </summary><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A binary representation of the written model.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.Models.RoleEligibilityScheduleInstanceListResult.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#Authorization#Models#RoleEligibilityScheduleInstanceListResult}#Create(System.BinaryData,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Converts the provided <see cref="T:System.BinaryData" /> into a model.
            </summary><param name="data">The <see cref="T:System.BinaryData" /> to parse.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A <typeparamref name="T" /> representation of the data.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.Models.RoleEligibilityScheduleInstanceListResult.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#Authorization#Models#RoleEligibilityScheduleInstanceListResult}#GetFormatFromOptions(System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Gets the data interchange format (JSON, Xml, etc) that the model uses when communicating with the service.
            <param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param></summary><returns>The format that the model uses when communicating with the serivce.</returns>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.Models.RoleEligibilityScheduleListResult.System#ClientModel#Primitives#IJsonModel{Azure#ResourceManager#Authorization#Models#RoleEligibilityScheduleListResult}#Write(System.Text.Json.Utf8JsonWriter,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Writes the model to the provided <see cref="T:System.Text.Json.Utf8JsonWriter" />.
            </summary><param name="writer">The <see cref="T:System.Text.Json.Utf8JsonWriter" /> to write into.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.Models.RoleEligibilityScheduleListResult.System#ClientModel#Primitives#IJsonModel{Azure#ResourceManager#Authorization#Models#RoleEligibilityScheduleListResult}#Create(System.Text.Json.Utf8JsonReader@,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Reads one JSON value (including objects or arrays) from the provided reader and converts it to a model.
            </summary><param name="reader">The <see cref="T:System.Text.Json.Utf8JsonReader" /> to read.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A <typeparamref name="T" /> representation of the JSON value.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.Models.RoleEligibilityScheduleListResult.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#Authorization#Models#RoleEligibilityScheduleListResult}#Write(System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Writes the model into a <see cref="T:System.BinaryData" />.
            </summary><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A binary representation of the written model.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.Models.RoleEligibilityScheduleListResult.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#Authorization#Models#RoleEligibilityScheduleListResult}#Create(System.BinaryData,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Converts the provided <see cref="T:System.BinaryData" /> into a model.
            </summary><param name="data">The <see cref="T:System.BinaryData" /> to parse.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A <typeparamref name="T" /> representation of the data.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.Models.RoleEligibilityScheduleListResult.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#Authorization#Models#RoleEligibilityScheduleListResult}#GetFormatFromOptions(System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Gets the data interchange format (JSON, Xml, etc) that the model uses when communicating with the service.
            <param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param></summary><returns>The format that the model uses when communicating with the serivce.</returns>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.Models.RoleEligibilityScheduleRequestListResult.System#ClientModel#Primitives#IJsonModel{Azure#ResourceManager#Authorization#Models#RoleEligibilityScheduleRequestListResult}#Write(System.Text.Json.Utf8JsonWriter,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Writes the model to the provided <see cref="T:System.Text.Json.Utf8JsonWriter" />.
            </summary><param name="writer">The <see cref="T:System.Text.Json.Utf8JsonWriter" /> to write into.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.Models.RoleEligibilityScheduleRequestListResult.System#ClientModel#Primitives#IJsonModel{Azure#ResourceManager#Authorization#Models#RoleEligibilityScheduleRequestListResult}#Create(System.Text.Json.Utf8JsonReader@,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Reads one JSON value (including objects or arrays) from the provided reader and converts it to a model.
            </summary><param name="reader">The <see cref="T:System.Text.Json.Utf8JsonReader" /> to read.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A <typeparamref name="T" /> representation of the JSON value.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.Models.RoleEligibilityScheduleRequestListResult.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#Authorization#Models#RoleEligibilityScheduleRequestListResult}#Write(System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Writes the model into a <see cref="T:System.BinaryData" />.
            </summary><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A binary representation of the written model.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.Models.RoleEligibilityScheduleRequestListResult.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#Authorization#Models#RoleEligibilityScheduleRequestListResult}#Create(System.BinaryData,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Converts the provided <see cref="T:System.BinaryData" /> into a model.
            </summary><param name="data">The <see cref="T:System.BinaryData" /> to parse.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A <typeparamref name="T" /> representation of the data.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.Models.RoleEligibilityScheduleRequestListResult.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#Authorization#Models#RoleEligibilityScheduleRequestListResult}#GetFormatFromOptions(System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Gets the data interchange format (JSON, Xml, etc) that the model uses when communicating with the service.
            <param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param></summary><returns>The format that the model uses when communicating with the serivce.</returns>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.Models.RoleEligibilityScheduleRequestPropertiesTicketInfo.System#ClientModel#Primitives#IJsonModel{Azure#ResourceManager#Authorization#Models#RoleEligibilityScheduleRequestPropertiesTicketInfo}#Write(System.Text.Json.Utf8JsonWriter,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Writes the model to the provided <see cref="T:System.Text.Json.Utf8JsonWriter" />.
            </summary><param name="writer">The <see cref="T:System.Text.Json.Utf8JsonWriter" /> to write into.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.Models.RoleEligibilityScheduleRequestPropertiesTicketInfo.System#ClientModel#Primitives#IJsonModel{Azure#ResourceManager#Authorization#Models#RoleEligibilityScheduleRequestPropertiesTicketInfo}#Create(System.Text.Json.Utf8JsonReader@,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Reads one JSON value (including objects or arrays) from the provided reader and converts it to a model.
            </summary><param name="reader">The <see cref="T:System.Text.Json.Utf8JsonReader" /> to read.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A <typeparamref name="T" /> representation of the JSON value.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.Models.RoleEligibilityScheduleRequestPropertiesTicketInfo.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#Authorization#Models#RoleEligibilityScheduleRequestPropertiesTicketInfo}#Write(System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Writes the model into a <see cref="T:System.BinaryData" />.
            </summary><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A binary representation of the written model.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.Models.RoleEligibilityScheduleRequestPropertiesTicketInfo.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#Authorization#Models#RoleEligibilityScheduleRequestPropertiesTicketInfo}#Create(System.BinaryData,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Converts the provided <see cref="T:System.BinaryData" /> into a model.
            </summary><param name="data">The <see cref="T:System.BinaryData" /> to parse.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A <typeparamref name="T" /> representation of the data.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.Models.RoleEligibilityScheduleRequestPropertiesTicketInfo.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#Authorization#Models#RoleEligibilityScheduleRequestPropertiesTicketInfo}#GetFormatFromOptions(System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Gets the data interchange format (JSON, Xml, etc) that the model uses when communicating with the service.
            <param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param></summary><returns>The format that the model uses when communicating with the serivce.</returns>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.Models.RoleManagementApprovalSettings.System#ClientModel#Primitives#IJsonModel{Azure#ResourceManager#Authorization#Models#RoleManagementApprovalSettings}#Write(System.Text.Json.Utf8JsonWriter,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Writes the model to the provided <see cref="T:System.Text.Json.Utf8JsonWriter" />.
            </summary><param name="writer">The <see cref="T:System.Text.Json.Utf8JsonWriter" /> to write into.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.Models.RoleManagementApprovalSettings.System#ClientModel#Primitives#IJsonModel{Azure#ResourceManager#Authorization#Models#RoleManagementApprovalSettings}#Create(System.Text.Json.Utf8JsonReader@,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Reads one JSON value (including objects or arrays) from the provided reader and converts it to a model.
            </summary><param name="reader">The <see cref="T:System.Text.Json.Utf8JsonReader" /> to read.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A <typeparamref name="T" /> representation of the JSON value.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.Models.RoleManagementApprovalSettings.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#Authorization#Models#RoleManagementApprovalSettings}#Write(System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Writes the model into a <see cref="T:System.BinaryData" />.
            </summary><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A binary representation of the written model.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.Models.RoleManagementApprovalSettings.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#Authorization#Models#RoleManagementApprovalSettings}#Create(System.BinaryData,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Converts the provided <see cref="T:System.BinaryData" /> into a model.
            </summary><param name="data">The <see cref="T:System.BinaryData" /> to parse.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A <typeparamref name="T" /> representation of the data.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.Models.RoleManagementApprovalSettings.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#Authorization#Models#RoleManagementApprovalSettings}#GetFormatFromOptions(System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Gets the data interchange format (JSON, Xml, etc) that the model uses when communicating with the service.
            <param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param></summary><returns>The format that the model uses when communicating with the serivce.</returns>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.Models.RoleManagementApprovalStage.System#ClientModel#Primitives#IJsonModel{Azure#ResourceManager#Authorization#Models#RoleManagementApprovalStage}#Write(System.Text.Json.Utf8JsonWriter,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Writes the model to the provided <see cref="T:System.Text.Json.Utf8JsonWriter" />.
            </summary><param name="writer">The <see cref="T:System.Text.Json.Utf8JsonWriter" /> to write into.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.Models.RoleManagementApprovalStage.System#ClientModel#Primitives#IJsonModel{Azure#ResourceManager#Authorization#Models#RoleManagementApprovalStage}#Create(System.Text.Json.Utf8JsonReader@,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Reads one JSON value (including objects or arrays) from the provided reader and converts it to a model.
            </summary><param name="reader">The <see cref="T:System.Text.Json.Utf8JsonReader" /> to read.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A <typeparamref name="T" /> representation of the JSON value.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.Models.RoleManagementApprovalStage.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#Authorization#Models#RoleManagementApprovalStage}#Write(System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Writes the model into a <see cref="T:System.BinaryData" />.
            </summary><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A binary representation of the written model.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.Models.RoleManagementApprovalStage.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#Authorization#Models#RoleManagementApprovalStage}#Create(System.BinaryData,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Converts the provided <see cref="T:System.BinaryData" /> into a model.
            </summary><param name="data">The <see cref="T:System.BinaryData" /> to parse.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A <typeparamref name="T" /> representation of the data.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.Models.RoleManagementApprovalStage.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#Authorization#Models#RoleManagementApprovalStage}#GetFormatFromOptions(System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Gets the data interchange format (JSON, Xml, etc) that the model uses when communicating with the service.
            <param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param></summary><returns>The format that the model uses when communicating with the serivce.</returns>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.Models.RoleManagementExpandedProperties.System#ClientModel#Primitives#IJsonModel{Azure#ResourceManager#Authorization#Models#RoleManagementExpandedProperties}#Write(System.Text.Json.Utf8JsonWriter,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Writes the model to the provided <see cref="T:System.Text.Json.Utf8JsonWriter" />.
            </summary><param name="writer">The <see cref="T:System.Text.Json.Utf8JsonWriter" /> to write into.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.Models.RoleManagementExpandedProperties.System#ClientModel#Primitives#IJsonModel{Azure#ResourceManager#Authorization#Models#RoleManagementExpandedProperties}#Create(System.Text.Json.Utf8JsonReader@,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Reads one JSON value (including objects or arrays) from the provided reader and converts it to a model.
            </summary><param name="reader">The <see cref="T:System.Text.Json.Utf8JsonReader" /> to read.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A <typeparamref name="T" /> representation of the JSON value.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.Models.RoleManagementExpandedProperties.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#Authorization#Models#RoleManagementExpandedProperties}#Write(System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Writes the model into a <see cref="T:System.BinaryData" />.
            </summary><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A binary representation of the written model.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.Models.RoleManagementExpandedProperties.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#Authorization#Models#RoleManagementExpandedProperties}#Create(System.BinaryData,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Converts the provided <see cref="T:System.BinaryData" /> into a model.
            </summary><param name="data">The <see cref="T:System.BinaryData" /> to parse.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A <typeparamref name="T" /> representation of the data.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.Models.RoleManagementExpandedProperties.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#Authorization#Models#RoleManagementExpandedProperties}#GetFormatFromOptions(System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Gets the data interchange format (JSON, Xml, etc) that the model uses when communicating with the service.
            <param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param></summary><returns>The format that the model uses when communicating with the serivce.</returns>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.Models.RoleManagementPolicyApprovalRule.System#ClientModel#Primitives#IJsonModel{Azure#ResourceManager#Authorization#Models#RoleManagementPolicyApprovalRule}#Write(System.Text.Json.Utf8JsonWriter,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Writes the model to the provided <see cref="T:System.Text.Json.Utf8JsonWriter" />.
            </summary><param name="writer">The <see cref="T:System.Text.Json.Utf8JsonWriter" /> to write into.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.Models.RoleManagementPolicyApprovalRule.System#ClientModel#Primitives#IJsonModel{Azure#ResourceManager#Authorization#Models#RoleManagementPolicyApprovalRule}#Create(System.Text.Json.Utf8JsonReader@,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Reads one JSON value (including objects or arrays) from the provided reader and converts it to a model.
            </summary><param name="reader">The <see cref="T:System.Text.Json.Utf8JsonReader" /> to read.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A <typeparamref name="T" /> representation of the JSON value.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.Models.RoleManagementPolicyApprovalRule.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#Authorization#Models#RoleManagementPolicyApprovalRule}#Write(System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Writes the model into a <see cref="T:System.BinaryData" />.
            </summary><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A binary representation of the written model.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.Models.RoleManagementPolicyApprovalRule.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#Authorization#Models#RoleManagementPolicyApprovalRule}#Create(System.BinaryData,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Converts the provided <see cref="T:System.BinaryData" /> into a model.
            </summary><param name="data">The <see cref="T:System.BinaryData" /> to parse.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A <typeparamref name="T" /> representation of the data.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.Models.RoleManagementPolicyApprovalRule.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#Authorization#Models#RoleManagementPolicyApprovalRule}#GetFormatFromOptions(System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Gets the data interchange format (JSON, Xml, etc) that the model uses when communicating with the service.
            <param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param></summary><returns>The format that the model uses when communicating with the serivce.</returns>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.Models.RoleManagementPolicyAssignmentListResult.System#ClientModel#Primitives#IJsonModel{Azure#ResourceManager#Authorization#Models#RoleManagementPolicyAssignmentListResult}#Write(System.Text.Json.Utf8JsonWriter,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Writes the model to the provided <see cref="T:System.Text.Json.Utf8JsonWriter" />.
            </summary><param name="writer">The <see cref="T:System.Text.Json.Utf8JsonWriter" /> to write into.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.Models.RoleManagementPolicyAssignmentListResult.System#ClientModel#Primitives#IJsonModel{Azure#ResourceManager#Authorization#Models#RoleManagementPolicyAssignmentListResult}#Create(System.Text.Json.Utf8JsonReader@,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Reads one JSON value (including objects or arrays) from the provided reader and converts it to a model.
            </summary><param name="reader">The <see cref="T:System.Text.Json.Utf8JsonReader" /> to read.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A <typeparamref name="T" /> representation of the JSON value.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.Models.RoleManagementPolicyAssignmentListResult.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#Authorization#Models#RoleManagementPolicyAssignmentListResult}#Write(System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Writes the model into a <see cref="T:System.BinaryData" />.
            </summary><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A binary representation of the written model.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.Models.RoleManagementPolicyAssignmentListResult.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#Authorization#Models#RoleManagementPolicyAssignmentListResult}#Create(System.BinaryData,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Converts the provided <see cref="T:System.BinaryData" /> into a model.
            </summary><param name="data">The <see cref="T:System.BinaryData" /> to parse.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A <typeparamref name="T" /> representation of the data.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.Models.RoleManagementPolicyAssignmentListResult.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#Authorization#Models#RoleManagementPolicyAssignmentListResult}#GetFormatFromOptions(System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Gets the data interchange format (JSON, Xml, etc) that the model uses when communicating with the service.
            <param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param></summary><returns>The format that the model uses when communicating with the serivce.</returns>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.Models.RoleManagementPolicyAuthenticationContextRule.System#ClientModel#Primitives#IJsonModel{Azure#ResourceManager#Authorization#Models#RoleManagementPolicyAuthenticationContextRule}#Write(System.Text.Json.Utf8JsonWriter,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Writes the model to the provided <see cref="T:System.Text.Json.Utf8JsonWriter" />.
            </summary><param name="writer">The <see cref="T:System.Text.Json.Utf8JsonWriter" /> to write into.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.Models.RoleManagementPolicyAuthenticationContextRule.System#ClientModel#Primitives#IJsonModel{Azure#ResourceManager#Authorization#Models#RoleManagementPolicyAuthenticationContextRule}#Create(System.Text.Json.Utf8JsonReader@,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Reads one JSON value (including objects or arrays) from the provided reader and converts it to a model.
            </summary><param name="reader">The <see cref="T:System.Text.Json.Utf8JsonReader" /> to read.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A <typeparamref name="T" /> representation of the JSON value.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.Models.RoleManagementPolicyAuthenticationContextRule.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#Authorization#Models#RoleManagementPolicyAuthenticationContextRule}#Write(System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Writes the model into a <see cref="T:System.BinaryData" />.
            </summary><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A binary representation of the written model.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.Models.RoleManagementPolicyAuthenticationContextRule.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#Authorization#Models#RoleManagementPolicyAuthenticationContextRule}#Create(System.BinaryData,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Converts the provided <see cref="T:System.BinaryData" /> into a model.
            </summary><param name="data">The <see cref="T:System.BinaryData" /> to parse.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A <typeparamref name="T" /> representation of the data.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.Models.RoleManagementPolicyAuthenticationContextRule.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#Authorization#Models#RoleManagementPolicyAuthenticationContextRule}#GetFormatFromOptions(System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Gets the data interchange format (JSON, Xml, etc) that the model uses when communicating with the service.
            <param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param></summary><returns>The format that the model uses when communicating with the serivce.</returns>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.Models.RoleManagementPolicyEnablementRule.System#ClientModel#Primitives#IJsonModel{Azure#ResourceManager#Authorization#Models#RoleManagementPolicyEnablementRule}#Write(System.Text.Json.Utf8JsonWriter,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Writes the model to the provided <see cref="T:System.Text.Json.Utf8JsonWriter" />.
            </summary><param name="writer">The <see cref="T:System.Text.Json.Utf8JsonWriter" /> to write into.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.Models.RoleManagementPolicyEnablementRule.System#ClientModel#Primitives#IJsonModel{Azure#ResourceManager#Authorization#Models#RoleManagementPolicyEnablementRule}#Create(System.Text.Json.Utf8JsonReader@,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Reads one JSON value (including objects or arrays) from the provided reader and converts it to a model.
            </summary><param name="reader">The <see cref="T:System.Text.Json.Utf8JsonReader" /> to read.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A <typeparamref name="T" /> representation of the JSON value.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.Models.RoleManagementPolicyEnablementRule.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#Authorization#Models#RoleManagementPolicyEnablementRule}#Write(System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Writes the model into a <see cref="T:System.BinaryData" />.
            </summary><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A binary representation of the written model.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.Models.RoleManagementPolicyEnablementRule.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#Authorization#Models#RoleManagementPolicyEnablementRule}#Create(System.BinaryData,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Converts the provided <see cref="T:System.BinaryData" /> into a model.
            </summary><param name="data">The <see cref="T:System.BinaryData" /> to parse.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A <typeparamref name="T" /> representation of the data.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.Models.RoleManagementPolicyEnablementRule.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#Authorization#Models#RoleManagementPolicyEnablementRule}#GetFormatFromOptions(System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Gets the data interchange format (JSON, Xml, etc) that the model uses when communicating with the service.
            <param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param></summary><returns>The format that the model uses when communicating with the serivce.</returns>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.Models.RoleManagementPolicyExpirationRule.System#ClientModel#Primitives#IJsonModel{Azure#ResourceManager#Authorization#Models#RoleManagementPolicyExpirationRule}#Write(System.Text.Json.Utf8JsonWriter,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Writes the model to the provided <see cref="T:System.Text.Json.Utf8JsonWriter" />.
            </summary><param name="writer">The <see cref="T:System.Text.Json.Utf8JsonWriter" /> to write into.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.Models.RoleManagementPolicyExpirationRule.System#ClientModel#Primitives#IJsonModel{Azure#ResourceManager#Authorization#Models#RoleManagementPolicyExpirationRule}#Create(System.Text.Json.Utf8JsonReader@,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Reads one JSON value (including objects or arrays) from the provided reader and converts it to a model.
            </summary><param name="reader">The <see cref="T:System.Text.Json.Utf8JsonReader" /> to read.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A <typeparamref name="T" /> representation of the JSON value.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.Models.RoleManagementPolicyExpirationRule.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#Authorization#Models#RoleManagementPolicyExpirationRule}#Write(System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Writes the model into a <see cref="T:System.BinaryData" />.
            </summary><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A binary representation of the written model.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.Models.RoleManagementPolicyExpirationRule.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#Authorization#Models#RoleManagementPolicyExpirationRule}#Create(System.BinaryData,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Converts the provided <see cref="T:System.BinaryData" /> into a model.
            </summary><param name="data">The <see cref="T:System.BinaryData" /> to parse.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A <typeparamref name="T" /> representation of the data.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.Models.RoleManagementPolicyExpirationRule.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#Authorization#Models#RoleManagementPolicyExpirationRule}#GetFormatFromOptions(System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Gets the data interchange format (JSON, Xml, etc) that the model uses when communicating with the service.
            <param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param></summary><returns>The format that the model uses when communicating with the serivce.</returns>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.Models.RoleManagementPolicyListResult.System#ClientModel#Primitives#IJsonModel{Azure#ResourceManager#Authorization#Models#RoleManagementPolicyListResult}#Write(System.Text.Json.Utf8JsonWriter,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Writes the model to the provided <see cref="T:System.Text.Json.Utf8JsonWriter" />.
            </summary><param name="writer">The <see cref="T:System.Text.Json.Utf8JsonWriter" /> to write into.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.Models.RoleManagementPolicyListResult.System#ClientModel#Primitives#IJsonModel{Azure#ResourceManager#Authorization#Models#RoleManagementPolicyListResult}#Create(System.Text.Json.Utf8JsonReader@,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Reads one JSON value (including objects or arrays) from the provided reader and converts it to a model.
            </summary><param name="reader">The <see cref="T:System.Text.Json.Utf8JsonReader" /> to read.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A <typeparamref name="T" /> representation of the JSON value.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.Models.RoleManagementPolicyListResult.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#Authorization#Models#RoleManagementPolicyListResult}#Write(System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Writes the model into a <see cref="T:System.BinaryData" />.
            </summary><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A binary representation of the written model.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.Models.RoleManagementPolicyListResult.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#Authorization#Models#RoleManagementPolicyListResult}#Create(System.BinaryData,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Converts the provided <see cref="T:System.BinaryData" /> into a model.
            </summary><param name="data">The <see cref="T:System.BinaryData" /> to parse.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A <typeparamref name="T" /> representation of the data.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.Models.RoleManagementPolicyListResult.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#Authorization#Models#RoleManagementPolicyListResult}#GetFormatFromOptions(System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Gets the data interchange format (JSON, Xml, etc) that the model uses when communicating with the service.
            <param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param></summary><returns>The format that the model uses when communicating with the serivce.</returns>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.Models.RoleManagementPolicyNotificationRule.System#ClientModel#Primitives#IJsonModel{Azure#ResourceManager#Authorization#Models#RoleManagementPolicyNotificationRule}#Write(System.Text.Json.Utf8JsonWriter,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Writes the model to the provided <see cref="T:System.Text.Json.Utf8JsonWriter" />.
            </summary><param name="writer">The <see cref="T:System.Text.Json.Utf8JsonWriter" /> to write into.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.Models.RoleManagementPolicyNotificationRule.System#ClientModel#Primitives#IJsonModel{Azure#ResourceManager#Authorization#Models#RoleManagementPolicyNotificationRule}#Create(System.Text.Json.Utf8JsonReader@,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Reads one JSON value (including objects or arrays) from the provided reader and converts it to a model.
            </summary><param name="reader">The <see cref="T:System.Text.Json.Utf8JsonReader" /> to read.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A <typeparamref name="T" /> representation of the JSON value.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.Models.RoleManagementPolicyNotificationRule.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#Authorization#Models#RoleManagementPolicyNotificationRule}#Write(System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Writes the model into a <see cref="T:System.BinaryData" />.
            </summary><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A binary representation of the written model.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.Models.RoleManagementPolicyNotificationRule.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#Authorization#Models#RoleManagementPolicyNotificationRule}#Create(System.BinaryData,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Converts the provided <see cref="T:System.BinaryData" /> into a model.
            </summary><param name="data">The <see cref="T:System.BinaryData" /> to parse.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A <typeparamref name="T" /> representation of the data.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.Models.RoleManagementPolicyNotificationRule.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#Authorization#Models#RoleManagementPolicyNotificationRule}#GetFormatFromOptions(System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Gets the data interchange format (JSON, Xml, etc) that the model uses when communicating with the service.
            <param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param></summary><returns>The format that the model uses when communicating with the serivce.</returns>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.Models.RoleManagementPolicyProperties.System#ClientModel#Primitives#IJsonModel{Azure#ResourceManager#Authorization#Models#RoleManagementPolicyProperties}#Write(System.Text.Json.Utf8JsonWriter,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Writes the model to the provided <see cref="T:System.Text.Json.Utf8JsonWriter" />.
            </summary><param name="writer">The <see cref="T:System.Text.Json.Utf8JsonWriter" /> to write into.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.Models.RoleManagementPolicyProperties.System#ClientModel#Primitives#IJsonModel{Azure#ResourceManager#Authorization#Models#RoleManagementPolicyProperties}#Create(System.Text.Json.Utf8JsonReader@,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Reads one JSON value (including objects or arrays) from the provided reader and converts it to a model.
            </summary><param name="reader">The <see cref="T:System.Text.Json.Utf8JsonReader" /> to read.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A <typeparamref name="T" /> representation of the JSON value.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.Models.RoleManagementPolicyProperties.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#Authorization#Models#RoleManagementPolicyProperties}#Write(System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Writes the model into a <see cref="T:System.BinaryData" />.
            </summary><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A binary representation of the written model.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.Models.RoleManagementPolicyProperties.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#Authorization#Models#RoleManagementPolicyProperties}#Create(System.BinaryData,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Converts the provided <see cref="T:System.BinaryData" /> into a model.
            </summary><param name="data">The <see cref="T:System.BinaryData" /> to parse.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A <typeparamref name="T" /> representation of the data.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.Models.RoleManagementPolicyProperties.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#Authorization#Models#RoleManagementPolicyProperties}#GetFormatFromOptions(System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Gets the data interchange format (JSON, Xml, etc) that the model uses when communicating with the service.
            <param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param></summary><returns>The format that the model uses when communicating with the serivce.</returns>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.Models.RoleManagementPolicyRule.System#ClientModel#Primitives#IJsonModel{Azure#ResourceManager#Authorization#Models#RoleManagementPolicyRule}#Write(System.Text.Json.Utf8JsonWriter,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Writes the model to the provided <see cref="T:System.Text.Json.Utf8JsonWriter" />.
            </summary><param name="writer">The <see cref="T:System.Text.Json.Utf8JsonWriter" /> to write into.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.Models.RoleManagementPolicyRule.System#ClientModel#Primitives#IJsonModel{Azure#ResourceManager#Authorization#Models#RoleManagementPolicyRule}#Create(System.Text.Json.Utf8JsonReader@,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Reads one JSON value (including objects or arrays) from the provided reader and converts it to a model.
            </summary><param name="reader">The <see cref="T:System.Text.Json.Utf8JsonReader" /> to read.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A <typeparamref name="T" /> representation of the JSON value.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.Models.RoleManagementPolicyRule.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#Authorization#Models#RoleManagementPolicyRule}#Write(System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Writes the model into a <see cref="T:System.BinaryData" />.
            </summary><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A binary representation of the written model.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.Models.RoleManagementPolicyRule.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#Authorization#Models#RoleManagementPolicyRule}#Create(System.BinaryData,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Converts the provided <see cref="T:System.BinaryData" /> into a model.
            </summary><param name="data">The <see cref="T:System.BinaryData" /> to parse.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A <typeparamref name="T" /> representation of the data.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.Models.RoleManagementPolicyRule.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#Authorization#Models#RoleManagementPolicyRule}#GetFormatFromOptions(System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Gets the data interchange format (JSON, Xml, etc) that the model uses when communicating with the service.
            <param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param></summary><returns>The format that the model uses when communicating with the serivce.</returns>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.Models.RoleManagementPolicyRuleTarget.System#ClientModel#Primitives#IJsonModel{Azure#ResourceManager#Authorization#Models#RoleManagementPolicyRuleTarget}#Write(System.Text.Json.Utf8JsonWriter,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Writes the model to the provided <see cref="T:System.Text.Json.Utf8JsonWriter" />.
            </summary><param name="writer">The <see cref="T:System.Text.Json.Utf8JsonWriter" /> to write into.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.Models.RoleManagementPolicyRuleTarget.System#ClientModel#Primitives#IJsonModel{Azure#ResourceManager#Authorization#Models#RoleManagementPolicyRuleTarget}#Create(System.Text.Json.Utf8JsonReader@,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Reads one JSON value (including objects or arrays) from the provided reader and converts it to a model.
            </summary><param name="reader">The <see cref="T:System.Text.Json.Utf8JsonReader" /> to read.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A <typeparamref name="T" /> representation of the JSON value.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.Models.RoleManagementPolicyRuleTarget.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#Authorization#Models#RoleManagementPolicyRuleTarget}#Write(System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Writes the model into a <see cref="T:System.BinaryData" />.
            </summary><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A binary representation of the written model.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.Models.RoleManagementPolicyRuleTarget.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#Authorization#Models#RoleManagementPolicyRuleTarget}#Create(System.BinaryData,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Converts the provided <see cref="T:System.BinaryData" /> into a model.
            </summary><param name="data">The <see cref="T:System.BinaryData" /> to parse.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A <typeparamref name="T" /> representation of the data.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.Models.RoleManagementPolicyRuleTarget.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#Authorization#Models#RoleManagementPolicyRuleTarget}#GetFormatFromOptions(System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Gets the data interchange format (JSON, Xml, etc) that the model uses when communicating with the service.
            <param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param></summary><returns>The format that the model uses when communicating with the serivce.</returns>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.Models.RoleManagementPrincipal.System#ClientModel#Primitives#IJsonModel{Azure#ResourceManager#Authorization#Models#RoleManagementPrincipal}#Write(System.Text.Json.Utf8JsonWriter,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Writes the model to the provided <see cref="T:System.Text.Json.Utf8JsonWriter" />.
            </summary><param name="writer">The <see cref="T:System.Text.Json.Utf8JsonWriter" /> to write into.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.Models.RoleManagementPrincipal.System#ClientModel#Primitives#IJsonModel{Azure#ResourceManager#Authorization#Models#RoleManagementPrincipal}#Create(System.Text.Json.Utf8JsonReader@,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Reads one JSON value (including objects or arrays) from the provided reader and converts it to a model.
            </summary><param name="reader">The <see cref="T:System.Text.Json.Utf8JsonReader" /> to read.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A <typeparamref name="T" /> representation of the JSON value.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.Models.RoleManagementPrincipal.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#Authorization#Models#RoleManagementPrincipal}#Write(System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Writes the model into a <see cref="T:System.BinaryData" />.
            </summary><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A binary representation of the written model.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.Models.RoleManagementPrincipal.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#Authorization#Models#RoleManagementPrincipal}#Create(System.BinaryData,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Converts the provided <see cref="T:System.BinaryData" /> into a model.
            </summary><param name="data">The <see cref="T:System.BinaryData" /> to parse.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A <typeparamref name="T" /> representation of the data.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.Models.RoleManagementPrincipal.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#Authorization#Models#RoleManagementPrincipal}#GetFormatFromOptions(System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Gets the data interchange format (JSON, Xml, etc) that the model uses when communicating with the service.
            <param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param></summary><returns>The format that the model uses when communicating with the serivce.</returns>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.Models.RoleManagementUserInfo.System#ClientModel#Primitives#IJsonModel{Azure#ResourceManager#Authorization#Models#RoleManagementUserInfo}#Write(System.Text.Json.Utf8JsonWriter,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Writes the model to the provided <see cref="T:System.Text.Json.Utf8JsonWriter" />.
            </summary><param name="writer">The <see cref="T:System.Text.Json.Utf8JsonWriter" /> to write into.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.Models.RoleManagementUserInfo.System#ClientModel#Primitives#IJsonModel{Azure#ResourceManager#Authorization#Models#RoleManagementUserInfo}#Create(System.Text.Json.Utf8JsonReader@,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Reads one JSON value (including objects or arrays) from the provided reader and converts it to a model.
            </summary><param name="reader">The <see cref="T:System.Text.Json.Utf8JsonReader" /> to read.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A <typeparamref name="T" /> representation of the JSON value.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.Models.RoleManagementUserInfo.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#Authorization#Models#RoleManagementUserInfo}#Write(System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Writes the model into a <see cref="T:System.BinaryData" />.
            </summary><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A binary representation of the written model.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.Models.RoleManagementUserInfo.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#Authorization#Models#RoleManagementUserInfo}#Create(System.BinaryData,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Converts the provided <see cref="T:System.BinaryData" /> into a model.
            </summary><param name="data">The <see cref="T:System.BinaryData" /> to parse.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A <typeparamref name="T" /> representation of the data.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.Models.RoleManagementUserInfo.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#Authorization#Models#RoleManagementUserInfo}#GetFormatFromOptions(System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Gets the data interchange format (JSON, Xml, etc) that the model uses when communicating with the service.
            <param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param></summary><returns>The format that the model uses when communicating with the serivce.</returns>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.Models.UnknownRoleManagementPolicyRule.System#ClientModel#Primitives#IJsonModel{Azure#ResourceManager#Authorization#Models#RoleManagementPolicyRule}#Write(System.Text.Json.Utf8JsonWriter,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Writes the model to the provided <see cref="T:System.Text.Json.Utf8JsonWriter" />.
            </summary><param name="writer">The <see cref="T:System.Text.Json.Utf8JsonWriter" /> to write into.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.Models.UnknownRoleManagementPolicyRule.System#ClientModel#Primitives#IJsonModel{Azure#ResourceManager#Authorization#Models#RoleManagementPolicyRule}#Create(System.Text.Json.Utf8JsonReader@,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Reads one JSON value (including objects or arrays) from the provided reader and converts it to a model.
            </summary><param name="reader">The <see cref="T:System.Text.Json.Utf8JsonReader" /> to read.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A <typeparamref name="T" /> representation of the JSON value.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.Models.UnknownRoleManagementPolicyRule.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#Authorization#Models#RoleManagementPolicyRule}#Write(System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Writes the model into a <see cref="T:System.BinaryData" />.
            </summary><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A binary representation of the written model.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.Models.UnknownRoleManagementPolicyRule.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#Authorization#Models#RoleManagementPolicyRule}#Create(System.BinaryData,System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Converts the provided <see cref="T:System.BinaryData" /> into a model.
            </summary><param name="data">The <see cref="T:System.BinaryData" /> to parse.</param><param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param><returns>A <typeparamref name="T" /> representation of the data.</returns><exception cref="T:System.FormatException">If the model does not support the requested <see cref="P:System.ClientModel.Primitives.ModelReaderWriterOptions.Format" />.</exception>
        </member>
        <member name="M:Azure.ResourceManager.Authorization.Models.UnknownRoleManagementPolicyRule.System#ClientModel#Primitives#IPersistableModel{Azure#ResourceManager#Authorization#Models#RoleManagementPolicyRule}#GetFormatFromOptions(System.ClientModel.Primitives.ModelReaderWriterOptions)">
            <summary>
            Gets the data interchange format (JSON, Xml, etc) that the model uses when communicating with the service.
            <param name="options">The <see cref="T:System.ClientModel.Primitives.ModelReaderWriterOptions" /> to use.</param></summary><returns>The format that the model uses when communicating with the serivce.</returns>
        </member>
        <member name="M:Azure.Core.Pipeline.TaskExtensions.Enumerable`1.System#Collections#Generic#IEnumerable{T}#GetEnumerator">
            <summary>Returns an enumerator that iterates through the collection.</summary><returns>An enumerator that can be used to iterate through the collection.</returns>
        </member>
        <member name="M:Azure.Core.Pipeline.TaskExtensions.Enumerable`1.System#Collections#IEnumerable#GetEnumerator">
            <summary>Returns an enumerator that iterates through a collection.</summary><returns>An <see cref="T:System.Collections.IEnumerator" /> object that can be used to iterate through the collection.</returns>
        </member>
        <member name="P:Azure.Core.Pipeline.TaskExtensions.Enumerator`1.System#Collections#IEnumerator#Current">
            <summary>Gets the element in the collection at the current position of the enumerator.</summary><returns>The element in the collection at the current position of the enumerator.</returns>
        </member>
    </members>
</doc>
